[STACK] CHECK CONDITION: FirstFerry(AGC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardFirst2(AGC,AAQ)
[STACK] CHECK CONDITION: FirstDock(AGC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,AGC,null)
[STACK] CHECK CONDITION: NextToDock(AGC,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,H,null)
[STACK] CHECK CONDITION: NextToDock(H,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,K,null)
[STACK] CHECK CONDITION: NextToDock(K,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,M,null)
[STACK] CHECK CONDITION: NextToDock(M,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(E,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,E,null)
[STACK] CHECK CONDITION: NextToDock(E,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Q,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,Q,null)
[STACK] CHECK CONDITION: NextToDock(Q,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(I,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,I,null)
[STACK] CHECK CONDITION: NextToDock(I,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAO,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AET,AAO,null)
[STACK] CHECK CONDITION: NextToDock(AAO,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABX,AET,null)
[STACK] CHECK CONDITION: NextToDock(AET,ABX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(ADO,ABX)
[STACK] CHECK CONDITION: NextToDock(ABX,ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(ADO,ABX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABX,AET,ADO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AET,AAO,ABX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAO,AFN,AET)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AEP,AAO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,I,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(I,ABQ,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,Q,I)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Q,ACL,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,Q)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AAA,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,ACO,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,E,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(E,ABA,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,AEQ,E)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,M,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,K,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,ADU,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,ADY,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,S,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,H,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,AGC,ADL)
[STACK] CHECK CONDITION: NextToDock(AAQ,AGC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardFirst2(AGC,AAQ)
[STACK] CHECK CONDITION: NextToFerry(ADG,AGC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADG,AAW,AGC)
[STACK] CHECK CONDITION: FirstDock(ADG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ADG,null)
[STACK] CHECK CONDITION: NextToDock(ADG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEX,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AEX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AEX,null)
[STACK] CHECK CONDITION: NextToDock(AEX,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACU,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,ACU,null)
[STACK] CHECK CONDITION: NextToDock(ACU,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFY,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADE,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ADE,null)
[STACK] CHECK CONDITION: NextToDock(ADE,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACH,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ACH,null)
[STACK] CHECK CONDITION: NextToDock(ACH,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,X,null)
[STACK] CHECK CONDITION: NextToDock(X,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACT,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ACT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ACT,null)
[STACK] CHECK CONDITION: NextToDock(ACT,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAQ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAQ,AFG,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,AAQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,AAH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ACT,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACT,ABH,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ACT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFI,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,X,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,ACR,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AFM,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,AAJ,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AAE,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,ADD,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ACH,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACH,ACX,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ADE,ACH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADE,ADF,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ADE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ACZ,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,AAC,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFY,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFY,AAK,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,ACU,AFY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACU,ABK,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AES,ACU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABR,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AEX,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEX,AGF,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,AEX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,AFF,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ADG,ACG)
[STACK] CHECK CONDITION: LastFerry(AGC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAW,ADG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADG,AAW,AGC)
[STACK] CHECK CONDITION: NextToFerry(AEX,ADG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEX,ABR,ADG)
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AEX,null)
[STACK] CHECK CONDITION: NextToDock(AEX,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,G,null)
[STACK] CHECK CONDITION: NextToDock(G,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,G,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,ABG,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AEX,AFB)
[STACK] CHECK CONDITION: LastFerry(ADG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABR,AEX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEX,ABR,ADG)
[STACK] CHECK CONDITION: NextToFerry(ACT,AEX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACT,AAH,AEX)
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ACT,null)
[STACK] CHECK CONDITION: NextToDock(ACT,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,X,null)
[STACK] CHECK CONDITION: NextToDock(X,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACH,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ACH,null)
[STACK] CHECK CONDITION: NextToDock(ACH,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADE,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADE,null)
[STACK] CHECK CONDITION: NextToDock(ADE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFY,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACU,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ACU,null)
[STACK] CHECK CONDITION: NextToDock(ACU,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AES,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ACU,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACU,AAK,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,AFY,ACU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFY,ADK,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,AFY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ACZ,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,ABB,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADE,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADE,ACX,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ACH,ADE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACH,ACE,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ACH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,ABI,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AAE,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,AFV,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,AFM,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,L,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,X,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,AFI,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,ACN,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ACT,AFR)
[STACK] CHECK CONDITION: LastFerry(AEX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAH,ACT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACT,AAH,AEX)
[STACK] CHECK CONDITION: NextToFerry(ADE,ACT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADE,ADF,ACT)
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ADE,null)
[STACK] CHECK CONDITION: NextToDock(ADE,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACH,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ACH,null)
[STACK] CHECK CONDITION: NextToDock(ACH,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,X,null)
[STACK] CHECK CONDITION: NextToDock(X,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFI,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,X,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,ACR,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AFM,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,AAJ,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AAE,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,ADD,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ACH,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACH,ACX,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ADE,ACH)
[STACK] CHECK CONDITION: LastFerry(ACT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,ADE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADE,ADF,ACT)
[STACK] CHECK CONDITION: NextToFerry(AAU,ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAU,ADI,ADE)
[STACK] CHECK CONDITION: FirstDock(AAU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,AAU,null)
[STACK] CHECK CONDITION: NextToDock(AAU,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFD,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFP,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,B,null)
[STACK] CHECK CONDITION: NextToDock(B,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACU,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,ACU,null)
[STACK] CHECK CONDITION: NextToDock(ACU,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFY,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ACZ,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,AAC,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFY,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFY,AAK,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,ACU,AFY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACU,ABK,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AES,ACU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABR,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,AFF,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,B,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,AFP,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFP,AAZ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,AFP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,ABV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFL,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AAS,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,ACF,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,AFD,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFD,ACD,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,AAU,AFD)
[STACK] CHECK CONDITION: LastFerry(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADI,AAU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAU,ADI,ADE)
[STACK] CHECK CONDITION: NextToFerry(ACU,AAU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACU,AAK,AAU)
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ACU,null)
[STACK] CHECK CONDITION: NextToDock(ACU,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,G,null)
[STACK] CHECK CONDITION: NextToDock(G,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFP,B,null)
[STACK] CHECK CONDITION: NextToDock(B,AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,A,null)
[STACK] CHECK CONDITION: NextToDock(A,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFD,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,AFD,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFD,AAD,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,A,AFD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,ACF,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AAS,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,AFL,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFW,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,ABV,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFA,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AAZ,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFP,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFP,B,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,ACC,AFP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,G,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,ABG,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AES,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ACU,AES)
[STACK] CHECK CONDITION: LastFerry(AAU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAK,ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACU,AAK,AAU)
[STACK] CHECK CONDITION: NextToFerry(ACH,ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACH,ACE,ACU)
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ACH,null)
[STACK] CHECK CONDITION: NextToDock(ACH,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFY,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,AFY,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFY,ADK,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,AFY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ACZ,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,ABB,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACX,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ACH,ADF)
[STACK] CHECK CONDITION: LastFerry(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACE,ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACH,ACE,ACU)
[STACK] CHECK CONDITION: NextToFerry(AFY,ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFY,AAK,ACH)
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ADF,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ACZ,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,AAC,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFY,AEH)
[STACK] CHECK CONDITION: LastFerry(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAK,AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFY,AAK,ACH)
[STACK] CHECK CONDITION: NextToFerry(AAQ,AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAQ,H,AFY)
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AAQ,null)
[STACK] CHECK CONDITION: NextToDock(AAQ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,C,null)
[STACK] CHECK CONDITION: NextToDock(C,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,X,null)
[STACK] CHECK CONDITION: NextToDock(X,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ACZ,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,ABB,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACX,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ACE,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,ABI,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AAE,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,AFV,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,AFM,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,L,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,X,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,AFI,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,ACN,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,C,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,ABL,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AAQ,AFZ)
[STACK] CHECK CONDITION: LastFerry(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(H,AAQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAQ,H,AFY)
[STACK] CHECK CONDITION: NextToFerry(AGI,AAQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AGI,AAQ)
[STACK] CHECK CONDITION: LastFerry(AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AGI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABS,AGI,null)
[STACK] CHECK CONDITION: NextToDock(AGI,ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADI,ABS,null)
[STACK] CHECK CONDITION: NextToDock(ABS,ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,ADI,null)
[STACK] CHECK CONDITION: NextToDock(ADI,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFD,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFP,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,B,null)
[STACK] CHECK CONDITION: NextToDock(B,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,X,null)
[STACK] CHECK CONDITION: NextToDock(X,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,AAH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ABH,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFI,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,X,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,ACR,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AFM,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,AAJ,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AAE,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,ADD,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ACX,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ADF,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ACZ,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,AAC,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AAK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,ABK,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AES,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABR,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,AFF,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,B,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,AFP,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFP,AAZ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,AFP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,ABV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFL,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AAS,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,ACF,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,AFD,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFD,ACD,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,ADI,AFD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADI,ABS,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABS,AGI,ADI)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AGI,AAQ)
[STACK] CHECK CONDITION: NextToFerry(ABX,AGI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABX,ADO,AGI)
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AET,ABX,null)
[STACK] CHECK CONDITION: NextToDock(ABX,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAO,AET,null)
[STACK] CHECK CONDITION: NextToDock(AET,AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AAO,null)
[STACK] CHECK CONDITION: NextToDock(AAO,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(I,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,I,null)
[STACK] CHECK CONDITION: NextToDock(I,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Q,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,Q,null)
[STACK] CHECK CONDITION: NextToDock(Q,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(E,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,E,null)
[STACK] CHECK CONDITION: NextToDock(E,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,M,null)
[STACK] CHECK CONDITION: NextToDock(M,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,K,null)
[STACK] CHECK CONDITION: NextToDock(K,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,H,null)
[STACK] CHECK CONDITION: NextToDock(H,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,C,null)
[STACK] CHECK CONDITION: NextToDock(C,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,X,null)
[STACK] CHECK CONDITION: NextToDock(X,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,G,null)
[STACK] CHECK CONDITION: NextToDock(G,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFP,B,null)
[STACK] CHECK CONDITION: NextToDock(B,AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,A,null)
[STACK] CHECK CONDITION: NextToDock(A,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFD,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADI,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(ABS,ADI)
[STACK] CHECK CONDITION: NextToDock(ADI,ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(ABS,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADI,ACD,ABS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,AFD,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFD,AAD,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,A,AFD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,ACF,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AAS,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,AFL,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFW,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,ABV,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFA,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AAZ,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFP,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFP,B,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,ACC,AFP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,G,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,ABG,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AES,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,ABK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AAK,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,ADK,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ACZ,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,ABB,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACX,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ACE,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,ABI,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AAE,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,AFV,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,AFM,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,L,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,X,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,AFI,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,ACN,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,C,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,ABL,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,H,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,ADL,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADY,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,AEI,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,K,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,M,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,AEQ,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ABA,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,E,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(E,ACO,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AAA,E)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,AFJ,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,Q,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Q,ABQ,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,I,Q)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(I,AEP,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,AFN,I)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AAO,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAO,AET,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AET,ABX,AAO)
[STACK] CHECK CONDITION: LastFerry(AGI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADO,ABX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABX,ADO,AGI)
[STACK] CHECK CONDITION: NextToFerry(ACX,ABX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACX,ADF,ABX)
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,X,null)
[STACK] CHECK CONDITION: NextToDock(X,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,H,null)
[STACK] CHECK CONDITION: NextToDock(H,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,K,null)
[STACK] CHECK CONDITION: NextToDock(K,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,M,null)
[STACK] CHECK CONDITION: NextToDock(M,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(E,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,E,null)
[STACK] CHECK CONDITION: NextToDock(E,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Q,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,Q,null)
[STACK] CHECK CONDITION: NextToDock(Q,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(I,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,I,null)
[STACK] CHECK CONDITION: NextToDock(I,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAO,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AET,AAO,null)
[STACK] CHECK CONDITION: NextToDock(AAO,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AET,AAO,ADO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAO,AFN,AET)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AEP,AAO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,I,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(I,ABQ,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,Q,I)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Q,ACL,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,Q)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AAA,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,ACO,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,E,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(E,ABA,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,AEQ,E)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,M,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,K,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,ADU,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,ADY,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,S,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,H,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,AFG,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,AAH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ABH,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFI,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,X,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,ACR,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AFM,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,AAJ,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AAE,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,ADD,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ACX,AEF)
[STACK] CHECK CONDITION: LastFerry(ABX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACX,ADF,ABX)
[STACK] CHECK CONDITION: NextToFerry(AFM,ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFM,L,ACX)
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,ABI,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AAE,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,AFV,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,AFM,ACV)
[STACK] CHECK CONDITION: LastFerry(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(L,AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFM,L,ACX)
[STACK] CHECK CONDITION: NextToFerry(ACZ,AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACZ,AAC,AFM)
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AAE,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,ADD,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ADF,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ACZ,AEM)
[STACK] CHECK CONDITION: LastFerry(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAC,ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACZ,AAC,AFM)
[STACK] CHECK CONDITION: NextToFerry(AAE,ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAE,AFV,ACZ)
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACE,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,ABI,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AAE,AER)
[STACK] CHECK CONDITION: LastFerry(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFV,AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAE,AFV,ACZ)
[STACK] CHECK CONDITION: NextToFerry(AAK,AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAK,ABK,AAE)
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AFE,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AAG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ADF,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AAC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AAK,AEH)
[STACK] CHECK CONDITION: LastFerry(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABK,AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAK,ABK,AAE)
[STACK] CHECK CONDITION: NextToFerry(AFE,AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFE,ABI,AAK)
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ABB,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACE,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AFE,AAM)
[STACK] CHECK CONDITION: LastFerry(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABI,AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFE,ABI,AAK)
[STACK] CHECK CONDITION: NextToFerry(AFI,AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFI,ACN,AFE)
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,X,null)
[STACK] CHECK CONDITION: NextToDock(X,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,X,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,AFI,ACR)
[STACK] CHECK CONDITION: LastFerry(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACN,AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFI,ACN,AFE)
[STACK] CHECK CONDITION: NextToFerry(AES,AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AES,ABR,AFI)
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,F,null)
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,ACR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AAG,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ADF,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AAC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,F,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AES,ADK)
[STACK] CHECK CONDITION: LastFerry(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABR,AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AES,ABR,AFI)
[STACK] CHECK CONDITION: NextToFerry(AFP,AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFP,AAZ,AES)
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,B,null)
[STACK] CHECK CONDITION: NextToDock(B,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,AFF,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,B,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,AFP,ACC)
[STACK] CHECK CONDITION: LastFerry(AES)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAZ,AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFP,AAZ,AES)
[STACK] CHECK CONDITION: NextToFerry(X,AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(X,ACN,AFP)
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,X,null)
[STACK] CHECK CONDITION: NextToDock(X,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,G,null)
[STACK] CHECK CONDITION: NextToDock(G,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,ACC,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,G,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,ABG,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,AAC,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,ABB,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACE,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,ABI,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,X,ADX)
[STACK] CHECK CONDITION: LastFerry(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACN,X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(X,ACN,AFP)
[STACK] CHECK CONDITION: NextToFerry(AAC,X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAC,F,X)
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ABO,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AEB,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,R,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,ADW,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AAG,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ADF,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ACA,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AAC,AEM)
[STACK] CHECK CONDITION: LastFerry(X)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(F,AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAC,F,X)
[STACK] CHECK CONDITION: NextToFerry(AFD,AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFD,ACD,AAC)
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,B,null)
[STACK] CHECK CONDITION: NextToDock(B,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,U,null)
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,U,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,ABC,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,AFF,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,B,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,AAZ,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,ABV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFL,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AAS,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,ACF,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,AFD,A)
[STACK] CHECK CONDITION: LastFerry(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACD,AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFD,ACD,AAC)
[STACK] CHECK CONDITION: NextToFerry(E,AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(E,ACO,AFD)
[STACK] CHECK CONDITION: FirstDock(E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,E,null)
[STACK] CHECK CONDITION: NextToDock(E,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,M,null)
[STACK] CHECK CONDITION: NextToDock(M,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,K,null)
[STACK] CHECK CONDITION: NextToDock(K,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,H,null)
[STACK] CHECK CONDITION: NextToDock(H,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,C,null)
[STACK] CHECK CONDITION: NextToDock(C,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,F,null)
[STACK] CHECK CONDITION: NextToDock(F,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,U,null)
[STACK] CHECK CONDITION: NextToDock(U,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,G,null)
[STACK] CHECK CONDITION: NextToDock(G,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,B,null)
[STACK] CHECK CONDITION: NextToDock(B,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,A,null)
[STACK] CHECK CONDITION: NextToDock(A,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,A,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,ACF,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AAS,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,AFL,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFW,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,ABV,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFA,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AAZ,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,B,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,ACC,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,B)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,G,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,ABG,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,U,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,F,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,ABB,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,AEG,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ACE,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,AEF,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,AAM,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,ABI,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AGE,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,R,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ABF,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,AAI,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AAB,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AFC,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEY,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,ADX,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,C,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,ABL,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,H,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,ADL,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADY,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,AEI,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,K,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,M,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,AEQ,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ABA,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,E,AEQ)
[STACK] CHECK CONDITION: LastFerry(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACO,E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(E,ACO,AFD)
[STACK] CHECK CONDITION: NextToFerry(AEY,E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEY,ABO,E)
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,H,null)
[STACK] CHECK CONDITION: NextToDock(H,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,K,null)
[STACK] CHECK CONDITION: NextToDock(K,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,M,null)
[STACK] CHECK CONDITION: NextToDock(M,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,AEQ,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,M,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,K,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,ADU,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,ADY,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,S,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,H,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,AFG,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,AAH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ABH,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,AEY,ACR)
[STACK] CHECK CONDITION: LastFerry(E)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEY,ABO,E)
[STACK] CHECK CONDITION: NextToFerry(AAB,AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAB,AEB,AEY)
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AAB,ABJ)
[STACK] CHECK CONDITION: LastFerry(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEB,AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAB,AEB,AEY)
[STACK] CHECK CONDITION: NextToFerry(ABF,AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABF,R,AAB)
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ABF,AEO)
[STACK] CHECK CONDITION: LastFerry(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(R,ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABF,R,AAB)
[STACK] CHECK CONDITION: NextToFerry(AGE,ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGE,ADW,ABF)
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AGE,AAI)
[STACK] CHECK CONDITION: LastFerry(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADW,AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGE,ADW,ABF)
[STACK] CHECK CONDITION: NextToFerry(ACE,AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACE,ADF,AGE)
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,J,null)
[STACK] CHECK CONDITION: NextToDock(J,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AAG,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,ABY,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,J,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ACE,AFT)
[STACK] CHECK CONDITION: LastFerry(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACE,ADF,AGE)
[STACK] CHECK CONDITION: NextToFerry(ABP,ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABP,ACA,ACE)
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ABP,AGN)
[STACK] CHECK CONDITION: LastFerry(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACA,ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABP,ACA,ACE)
[STACK] CHECK CONDITION: NextToFerry(ABY,ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABY,AAM,ABP)
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,ABY,AGD)
[STACK] CHECK CONDITION: LastFerry(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAM,ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABY,AAM,ABP)
[STACK] CHECK CONDITION: NextToFerry(K,ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(K,M,ABY)
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,K,null)
[STACK] CHECK CONDITION: NextToDock(K,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,H,null)
[STACK] CHECK CONDITION: NextToDock(H,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,C,null)
[STACK] CHECK CONDITION: NextToDock(C,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,ABI,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AAI,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,D,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,C,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,ABL,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,H,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,ADL,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADY,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,AEI,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,K,AGB)
[STACK] CHECK CONDITION: LastFerry(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(M,K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(K,M,ABY)
[STACK] CHECK CONDITION: NextToFerry(Q,K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Q,ABQ,K)
[STACK] CHECK CONDITION: FirstDock(Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,Q,null)
[STACK] CHECK CONDITION: NextToDock(Q,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,AEQ,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ABA,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,ACO,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AAA,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,AFJ,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,Q,AFJ)
[STACK] CHECK CONDITION: LastFerry(K)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABQ,Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Q,ABQ,K)
[STACK] CHECK CONDITION: NextToFerry(F,Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(F,U,Q)
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,F,null)
[STACK] CHECK CONDITION: NextToDock(F,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,H,null)
[STACK] CHECK CONDITION: NextToDock(H,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,M,null)
[STACK] CHECK CONDITION: NextToDock(M,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AAA,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,ACO,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,ABA,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,AEQ,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,M,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,ADU,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,ADY,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,S,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,H,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,AFG,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,AAH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ABH,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ADC,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,AEV,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,R,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ADW,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AAG,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,F,AEM)
[STACK] CHECK CONDITION: LastFerry(Q)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(U,F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(F,U,Q)
[STACK] CHECK CONDITION: NextToFerry(U,F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(U,ABC,F)
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(F)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABC,U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(U,ABC,F)
[STACK] CHECK CONDITION: NextToFerry(G,U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(G,AFF,U)
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,G,null)
[STACK] CHECK CONDITION: NextToDock(G,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,G,Y)
[STACK] CHECK CONDITION: LastFerry(U)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFF,G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(G,AFF,U)
[STACK] CHECK CONDITION: NextToFerry(ADC,G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADC,D,G)
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEK,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEA,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AGL,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,AEG,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,ABI,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AAI,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ADC,L)
[STACK] CHECK CONDITION: LastFerry(G)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(D,ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADC,D,G)
[STACK] CHECK CONDITION: NextToFerry(H,ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(H,ADL,ADC)
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,H,null)
[STACK] CHECK CONDITION: NextToDock(H,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,C,null)
[STACK] CHECK CONDITION: NextToDock(C,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,C,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,ABL,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,C)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,H,AFZ)
[STACK] CHECK CONDITION: LastFerry(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADL,H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(H,ADL,ADC)
[STACK] CHECK CONDITION: NextToFerry(ADY,H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADY,AEI,H)
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADY,ADL)
[STACK] CHECK CONDITION: LastFerry(H)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEI,ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADY,AEI,H)
[STACK] CHECK CONDITION: NextToFerry(C,ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(C,AAH,ADY)
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,C,null)
[STACK] CHECK CONDITION: NextToDock(C,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,C,AGM)
[STACK] CHECK CONDITION: LastFerry(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAH,C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(C,AAH,ADY)
[STACK] CHECK CONDITION: NextToFerry(M,C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(M,AEQ,C)
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,M,null)
[STACK] CHECK CONDITION: NextToDock(M,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,ADL,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,M,AGB)
[STACK] CHECK CONDITION: LastFerry(C)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEQ,M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(M,AEQ,C)
[STACK] CHECK CONDITION: NextToFerry(B,M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(B,AAZ,M)
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,B,null)
[STACK] CHECK CONDITION: NextToDock(B,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFZ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AAH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,ABH,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,R,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ADW,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AAG,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAP,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AEW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ACM,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,AEK,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACS,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,AEL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,B,AGJ)
[STACK] CHECK CONDITION: LastFerry(M)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAZ,B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(B,AAZ,M)
[STACK] CHECK CONDITION: NextToFerry(ACS,B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACS,AEK,B)
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,ACS,Y)
[STACK] CHECK CONDITION: LastFerry(B)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEK,ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACS,AEK,B)
[STACK] CHECK CONDITION: NextToFerry(ACM,ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACM,AEA,ACS)
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ACM,AEL)
[STACK] CHECK CONDITION: LastFerry(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEA,ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACM,AEA,ACS)
[STACK] CHECK CONDITION: NextToFerry(AAP,ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAP,AGL,ACM)
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AAP,ABM)
[STACK] CHECK CONDITION: LastFerry(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAP,AGL,ACM)
[STACK] CHECK CONDITION: NextToFerry(AAH,AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAH,ABL,AAP)
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,AEG,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,ABI,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,AGK,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AAI,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AAH,AFR)
[STACK] CHECK CONDITION: LastFerry(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABL,AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAH,ABL,AAP)
[STACK] CHECK CONDITION: NextToFerry(AFG,AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFG,ADL,AAH)
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFG,ADA)
[STACK] CHECK CONDITION: LastFerry(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADL,AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFG,ADL,AAH)
[STACK] CHECK CONDITION: NextToFerry(ABI,AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABI,AAG,AFG)
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,R,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ADW,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ABI,ADH)
[STACK] CHECK CONDITION: LastFerry(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAG,ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABI,AAG,AFG)
[STACK] CHECK CONDITION: NextToFerry(AAS,ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAS,ACF,ABI)
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,Z,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEL,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,ABV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFL,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AAS,AFW)
[STACK] CHECK CONDITION: LastFerry(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACF,AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAS,ACF,ABI)
[STACK] CHECK CONDITION: NextToFerry(ABA,AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABA,ACO,AAS)
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFW,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,ABV,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFA,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AAZ,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,AEK,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AGL,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,AEG,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,AGD,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,J,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AAI,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AEQ,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ABA,ADU)
[STACK] CHECK CONDITION: LastFerry(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACO,ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABA,ACO,AAS)
[STACK] CHECK CONDITION: NextToFerry(AGD,ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGD,Z,ABA)
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ADU,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,R,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ADW,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGD,AAM)
[STACK] CHECK CONDITION: LastFerry(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Z,AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGD,Z,ABA)
[STACK] CHECK CONDITION: NextToFerry(ABS,AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(ABS,AGD)
[STACK] CHECK CONDITION: LastFerry(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADI,ABS,null)
[STACK] CHECK CONDITION: NextToDock(ABS,ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,ADI,null)
[STACK] CHECK CONDITION: NextToDock(ADI,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AFT,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AEF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AEZ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEL,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,Y,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,ABV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFL,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,ACF,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,ACD,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,ADI,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADI,ABS,ACD)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(ABS,AGD)
[STACK] CHECK CONDITION: NextToFerry(AFT,ABS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFT,AEN,ABS)
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,A,null)
[STACK] CHECK CONDITION: NextToDock(A,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(ADI,ACD)
[STACK] CHECK CONDITION: NextToDock(ACD,ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(ADI,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,AAD,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,A,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,ACF,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AFL,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFW,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,ABV,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFA,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AAZ,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEL,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,AEK,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AGL,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AFS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,ADZ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,AEG,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AFT,ADF)
[STACK] CHECK CONDITION: LastFerry(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEN,AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFT,AEN,ABS)
[STACK] CHECK CONDITION: NextToFerry(AFS,AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFS,AEZ,AFT)
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ADP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFS,AGA)
[STACK] CHECK CONDITION: LastFerry(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEZ,AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFS,AEZ,AFT)
[STACK] CHECK CONDITION: NextToFerry(AEL,AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEL,Y,AFS)
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEL,AEA)
[STACK] CHECK CONDITION: LastFerry(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Y,AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEL,Y,AFS)
[STACK] CHECK CONDITION: NextToFerry(AAA,AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAA,AFJ,AEL)
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AGL,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACA,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,AEG,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,ACW,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,AAI,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,ABT,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACN,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,ADU,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AEQ,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ACO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AAA,AEQ)
[STACK] CHECK CONDITION: LastFerry(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFJ,AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAA,AFJ,AEL)
[STACK] CHECK CONDITION: NextToFerry(ACA,AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACA,ADP,AAA)
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,R,null)
[STACK] CHECK CONDITION: NextToDock(R,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,P,null)
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AEQ,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ADU,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGB,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,P,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACR,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ADX,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AED,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AGR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,R,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,ADW,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AFQ,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AAX,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ACA,AGN)
[STACK] CHECK CONDITION: LastFerry(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADP,ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACA,ADP,AAA)
[STACK] CHECK CONDITION: NextToFerry(AFQ,ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFQ,ACW,ACA)
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AFQ,ACI)
[STACK] CHECK CONDITION: LastFerry(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACW,AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFQ,ACW,ACA)
[STACK] CHECK CONDITION: NextToFerry(R,AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(R,AAI,AFQ)
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,R,null)
[STACK] CHECK CONDITION: NextToDock(R,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,R,AEC)
[STACK] CHECK CONDITION: LastFerry(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAI,R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(R,AAI,AFQ)
[STACK] CHECK CONDITION: NextToFerry(AFA,R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFA,ABV,R)
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,Y,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFA,ACC)
[STACK] CHECK CONDITION: LastFerry(R)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABV,AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFA,ABV,R)
[STACK] CHECK CONDITION: NextToFerry(AED,AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AED,ABT,AFA)
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEK,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AGL,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AED,ABJ)
[STACK] CHECK CONDITION: LastFerry(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABT,AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AED,ABT,AFA)
[STACK] CHECK CONDITION: NextToFerry(AFW,AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFW,AFL,AED)
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,AGF,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADS,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,V,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,Y,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ABV,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFW,AAZ)
[STACK] CHECK CONDITION: LastFerry(AED)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFL,AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFW,AFL,AED)
[STACK] CHECK CONDITION: NextToFerry(ACR,AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACR,ACN,AFW)
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AAZ,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEK,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AGL,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACK,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,AAT,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,ADJ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABR,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACR,ABO)
[STACK] CHECK CONDITION: LastFerry(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACN,ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACR,ACN,AFW)
[STACK] CHECK CONDITION: NextToFerry(ABR,ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABR,AGF,ACR)
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACY,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AEH,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABR,ADK)
[STACK] CHECK CONDITION: LastFerry(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGF,ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABR,AGF,ACR)
[STACK] CHECK CONDITION: NextToFerry(AGB,ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGB,ADU,ABR)
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFX,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFU,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACI,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,AAX,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,ADA,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,AFZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGB,AGG)
[STACK] CHECK CONDITION: LastFerry(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADU,AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGB,ADU,ABR)
[STACK] CHECK CONDITION: NextToFerry(I,AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(I,AEP,AGB)
[STACK] CHECK CONDITION: FirstDock(I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,I,null)
[STACK] CHECK CONDITION: NextToDock(I,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AEQ,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ACO,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AFJ,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,ABQ,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,I,ACL)
[STACK] CHECK CONDITION: LastFerry(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEP,I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(I,AEP,AGB)
[STACK] CHECK CONDITION: NextToFerry(ADA,I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADA,P,I)
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,ACL,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AEQ,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,ADU,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGO,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADA,ADL)
[STACK] CHECK CONDITION: LastFerry(I)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(P,ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADA,P,I)
[STACK] CHECK CONDITION: NextToFerry(AEQ,ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEQ,ACO,ADA)
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,ADU,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AEQ,AGO)
[STACK] CHECK CONDITION: LastFerry(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACO,AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEQ,ACO,ADA)
[STACK] CHECK CONDITION: NextToFerry(AAO,AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAO,AET,AEQ)
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AAO,null)
[STACK] CHECK CONDITION: NextToDock(AAO,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,AFJ,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,ABQ,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,AEP,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,AFN,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AAO,AEP)
[STACK] CHECK CONDITION: LastFerry(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AET,AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAO,AET,AEQ)
[STACK] CHECK CONDITION: NextToFerry(ACI,AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACI,ACY,AAO)
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AEP,AET)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,ABQ,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,ACL,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,ADU,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGO,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,P,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AGQ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACI,ACW)
[STACK] CHECK CONDITION: LastFerry(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACY,ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACI,ACY,AAO)
[STACK] CHECK CONDITION: NextToFerry(AFX,ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFX,AEH,ACI)
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFX,ABC)
[STACK] CHECK CONDITION: LastFerry(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEH,AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFX,AEH,ACI)
[STACK] CHECK CONDITION: NextToFerry(ACO,AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACO,AFJ,AFX)
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,ADW,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,ABO,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFR,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,P,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,AFZ,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,ADU,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,ACO,AGO)
[STACK] CHECK CONDITION: LastFerry(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFJ,ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACO,AFJ,AFX)
[STACK] CHECK CONDITION: NextToFerry(P,ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(P,AGQ,ACO)
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,P,null)
[STACK] CHECK CONDITION: NextToDock(P,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,AGO,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,P,ADL)
[STACK] CHECK CONDITION: LastFerry(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGQ,P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(P,AGQ,ACO)
[STACK] CHECK CONDITION: NextToFerry(AAT,P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAT,ADS,P)
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,D,null)
[STACK] CHECK CONDITION: NextToDock(D,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFH,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,ACN,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,D,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,AEV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AEC,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AAL,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AGF,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AAT,AEZ)
[STACK] CHECK CONDITION: LastFerry(P)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADS,AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAT,ADS,P)
[STACK] CHECK CONDITION: NextToFerry(AEC,AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEC,ADW,AAT)
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,W,null)
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFU,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,W,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AEC,O)
[STACK] CHECK CONDITION: LastFerry(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADW,AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEC,ADW,AAT)
[STACK] CHECK CONDITION: NextToFerry(ACK,AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACK,V,AEC)
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,AFO,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,ADR,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AGF,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AFB,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADS,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACK,ADS)
[STACK] CHECK CONDITION: LastFerry(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(V,ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACK,V,AEC)
[STACK] CHECK CONDITION: NextToFerry(AFO,ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFO,W,ACK)
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ADJ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGF,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,ABK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFU,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,AFO,ABE)
[STACK] CHECK CONDITION: LastFerry(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(W,AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFO,W,ACK)
[STACK] CHECK CONDITION: NextToFerry(AGF,AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGF,AFB,AFO)
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AGF,ADK)
[STACK] CHECK CONDITION: LastFerry(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFB,AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGF,AFB,AFO)
[STACK] CHECK CONDITION: NextToFerry(D,AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(D,ABO,AGF)
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,D,null)
[STACK] CHECK CONDITION: NextToDock(D,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFU,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,W,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ACB,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,D,L)
[STACK] CHECK CONDITION: LastFerry(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(D,ABO,AGF)
[STACK] CHECK CONDITION: NextToFerry(ACD,D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACD,ADI,D)
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ADM,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,AEJ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ADR,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AFB,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADS,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,ABM,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,Y,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,ABG,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AGJ,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ABV,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AFL,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,ACF,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,ACD,A)
[STACK] CHECK CONDITION: LastFerry(D)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADI,ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACD,ADI,D)
[STACK] CHECK CONDITION: NextToFerry(AEW,ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEW,AGL,ACD)
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(A,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,A,null)
[STACK] CHECK CONDITION: NextToDock(A,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,A,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(A,ACF,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AFL,A)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,ABV,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,AAZ,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAW,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,ABD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,Y,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,AEK,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AEW,ABW)
[STACK] CHECK CONDITION: LastFerry(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEW,AGL,ACD)
[STACK] CHECK CONDITION: NextToFerry(ADM,AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADM,ACB,AEW)
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ADJ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFU,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,W,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,ADF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ADM,AAR)
[STACK] CHECK CONDITION: LastFerry(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACB,ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADM,ACB,AEW)
[STACK] CHECK CONDITION: NextToFerry(Y,ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Y,ABG,ADM)
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AGN,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AEG,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ADR,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AFB,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADS,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,Y,AEA)
[STACK] CHECK CONDITION: LastFerry(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABG,Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Y,ABG,ADM)
[STACK] CHECK CONDITION: NextToFerry(AGN,Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGN,ADF,Y)
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ADJ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AFU,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,W,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AGN,ADP)
[STACK] CHECK CONDITION: LastFerry(Y)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGN,ADF,Y)
[STACK] CHECK CONDITION: NextToFerry(AAW,AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAW,AGJ,AGN)
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ADR,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ABE,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AEH,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,ADK,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,AFB,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADS,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ACJ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAV,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AAW,ACG)
[STACK] CHECK CONDITION: LastFerry(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGJ,AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAW,AGJ,AGN)
[STACK] CHECK CONDITION: NextToFerry(AEH,AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEH,AFU,AAW)
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAF,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AEE,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADS,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ADJ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ADK,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AEH,ABK)
[STACK] CHECK CONDITION: LastFerry(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFU,AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEH,AFU,AAW)
[STACK] CHECK CONDITION: NextToFerry(ABK,AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABK,AFB,AEH)
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABK,AFU)
[STACK] CHECK CONDITION: LastFerry(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFB,ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABK,AFB,AEH)
[STACK] CHECK CONDITION: NextToFerry(ADR,ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADR,W,ABK)
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADR,ABN)
[STACK] CHECK CONDITION: LastFerry(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(W,ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADR,W,ABK)
[STACK] CHECK CONDITION: NextToFerry(ADS,ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADS,ACJ,ADR)
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ADK,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADS,AEZ)
[STACK] CHECK CONDITION: LastFerry(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACJ,ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADS,ACJ,ADR)
[STACK] CHECK CONDITION: NextToFerry(AFH,ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFH,AFR,ADS)
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ADV,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ABO,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFH,ADX)
[STACK] CHECK CONDITION: LastFerry(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFR,AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFH,AFR,ADS)
[STACK] CHECK CONDITION: NextToFerry(AAF,AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAF,AAV,AFH)
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEV,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,ADF,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,T,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,ACP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ADK,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AAF,ADN)
[STACK] CHECK CONDITION: LastFerry(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAF,AAV,AFH)
[STACK] CHECK CONDITION: NextToFerry(T,AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(T,ADV,AAF)
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,T,null)
[STACK] CHECK CONDITION: NextToDock(T,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,ADN,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ABW,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,T,W)
[STACK] CHECK CONDITION: LastFerry(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADV,T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(T,ADV,AAF)
[STACK] CHECK CONDITION: NextToFerry(ADU,T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADU,AFJ,T)
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEF,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEN,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ACV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ABO,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,ADU,AGG)
[STACK] CHECK CONDITION: LastFerry(T)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFJ,ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADU,AFJ,T)
[STACK] CHECK CONDITION: NextToFerry(AEF,ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEF,ADF,ADU)
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEV,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AFK,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,ABT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEF,ADB)
[STACK] CHECK CONDITION: LastFerry(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEF,ADF,ADU)
[STACK] CHECK CONDITION: NextToFerry(AEE,AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEE,AAV,AEF)
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,ACP,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ADK,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEA,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,AEK,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AEE,AFF)
[STACK] CHECK CONDITION: LastFerry(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEE,AAV,AEF)
[STACK] CHECK CONDITION: NextToFerry(AEA,AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEA,ABW,AEE)
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEA,ABG)
[STACK] CHECK CONDITION: LastFerry(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABW,AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEA,ABW,AEE)
[STACK] CHECK CONDITION: NextToFerry(AFK,AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFK,ACV,AEA)
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADV,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,N,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AFK,AGR)
[STACK] CHECK CONDITION: LastFerry(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACV,AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFK,ACV,AEA)
[STACK] CHECK CONDITION: NextToFerry(ABQ,AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABQ,AEP,AFK)
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ABO,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGO,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AFJ,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,ABQ,AFJ)
[STACK] CHECK CONDITION: LastFerry(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEP,ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABQ,AEP,AFK)
[STACK] CHECK CONDITION: NextToFerry(ADV,ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADV,ACP,ABQ)
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AGO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGG,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AEI,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEV,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,L,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADV,ADP)
[STACK] CHECK CONDITION: LastFerry(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACP,ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADV,ACP,ABQ)
[STACK] CHECK CONDITION: NextToFerry(ABV,ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABV,AFL,ADV)
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ADK,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AGL,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AAV,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ABD,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,AGJ,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ABV,ACC)
[STACK] CHECK CONDITION: LastFerry(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFL,ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABV,AFL,ADV)
[STACK] CHECK CONDITION: NextToFerry(AGG,ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGG,AGO,ABV)
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ABD,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ACG,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,AAV,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ADN,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAY,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,V,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,N,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AEV,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,ABO,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,S,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AGG,S)
[STACK] CHECK CONDITION: LastFerry(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGO,AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGG,AGO,ABV)
[STACK] CHECK CONDITION: NextToFerry(AEV,AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEV,L,AGG)
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,S,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ADL,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,AFZ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,AEV,ADX)
[STACK] CHECK CONDITION: LastFerry(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(L,AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEV,L,AGG)
[STACK] CHECK CONDITION: NextToFerry(AAY,AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAY,AGL,AEV)
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAM,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ACP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ADK,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AAY,ACJ)
[STACK] CHECK CONDITION: LastFerry(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAY,AGL,AEV)
[STACK] CHECK CONDITION: NextToFerry(ACG,AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACG,ABD,AAY)
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AAV,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ACG,ADN)
[STACK] CHECK CONDITION: LastFerry(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABD,ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACG,ABD,AAY)
[STACK] CHECK CONDITION: NextToFerry(ADL,ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADL,S,ACG)
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ADN,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,V,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFU,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,ABC,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,N,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,Z,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAG,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AGK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AFV,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABT,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,ADL,AGQ)
[STACK] CHECK CONDITION: LastFerry(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(S,ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADL,S,ACG)
[STACK] CHECK CONDITION: NextToFerry(AAG,ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAG,AAM,ADL)
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,AGR,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,ABJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADD,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,AER,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAG,ADH)
[STACK] CHECK CONDITION: LastFerry(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAM,AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAG,AAM,ADL)
[STACK] CHECK CONDITION: NextToFerry(AFU,AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFU,ADK,AAG)
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADT,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ACP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,AFU,ABB)
[STACK] CHECK CONDITION: LastFerry(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADK,AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFU,ADK,AAG)
[STACK] CHECK CONDITION: NextToFerry(ADT,AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADT,Z,AFU)
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,N,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADT,AEN)
[STACK] CHECK CONDITION: LastFerry(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Z,ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADT,Z,AFU)
[STACK] CHECK CONDITION: NextToFerry(ABD,ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABD,AGJ,ADT)
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ACP,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ADK,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AGL,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AAV,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ABD,ADN)
[STACK] CHECK CONDITION: LastFerry(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGJ,ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABD,AGJ,ADT)
[STACK] CHECK CONDITION: NextToFerry(ADD,ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADD,AFV,ABD)
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ADN,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,AFF,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,V,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,AEZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,ADZ,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABC,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,N,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,ADP,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AGK,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,ADD,AGP)
[STACK] CHECK CONDITION: LastFerry(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFV,ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADD,AFV,ABD)
[STACK] CHECK CONDITION: NextToFerry(AGR,ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGR,ABT,ADD)
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AGR,AFC)
[STACK] CHECK CONDITION: LastFerry(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABT,AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGR,ABT,ADD)
[STACK] CHECK CONDITION: NextToFerry(AEI,AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEI,AGO,AGR)
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,S,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AEI,AFZ)
[STACK] CHECK CONDITION: LastFerry(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGO,AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEI,AGO,AGR)
[STACK] CHECK CONDITION: NextToFerry(N,AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(N,ACP,AEI)
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,N,null)
[STACK] CHECK CONDITION: NextToDock(N,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AFZ,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAM,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,J,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,N,AEG)
[STACK] CHECK CONDITION: LastFerry(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACP,N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(N,ACP,AEI)
[STACK] CHECK CONDITION: NextToFerry(ADO,N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(ADO,N)
[STACK] CHECK CONDITION: LastFerry(N)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AET,ADO,null)
[STACK] CHECK CONDITION: NextToDock(ADO,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AET,null)
[STACK] CHECK CONDITION: NextToDock(AET,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAM,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AGK,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,AGM,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AFZ,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,S,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AGO,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AFJ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AEP,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,AFN,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AET,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AET,ADO,AFN)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(ADO,N)
[STACK] CHECK CONDITION: NextToFerry(AAM,ADO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAM,J,ADO)
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(AET,AFN)
[STACK] CHECK CONDITION: NextToDock(AFN,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(AET,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AEP,AET)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,ACL,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AGO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,S,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AFZ,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AGQ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,ABZ,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABL,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABH,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AAI,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAM,ADH)
[STACK] CHECK CONDITION: LastFerry(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(J,AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAM,J,ADO)
[STACK] CHECK CONDITION: NextToFerry(AEZ,AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEZ,ADJ,AAM)
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABC,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ADK,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AEZ,AGA)
[STACK] CHECK CONDITION: LastFerry(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADJ,AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEZ,ADJ,AAM)
[STACK] CHECK CONDITION: NextToFerry(ABC,AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABC,ABB,AEZ)
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABC,AFB)
[STACK] CHECK CONDITION: LastFerry(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABC,ABB,AEZ)
[STACK] CHECK CONDITION: NextToFerry(ABL,ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABL,AGM,ABC)
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AEO,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AGH,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABL,AFR)
[STACK] CHECK CONDITION: LastFerry(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGM,ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABL,AGM,ABC)
[STACK] CHECK CONDITION: NextToFerry(AGQ,ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGQ,AFZ,ABL)
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AEU,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGQ,AAN)
[STACK] CHECK CONDITION: LastFerry(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFZ,AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGQ,AFZ,ABL)
[STACK] CHECK CONDITION: NextToFerry(AEO,AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEO,AAI,AGQ)
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,ABU,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,AGM,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AEO,AGP)
[STACK] CHECK CONDITION: LastFerry(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAI,AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEO,AAI,AGQ)
[STACK] CHECK CONDITION: NextToFerry(ADN,AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADN,AAV,AEO)
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ADK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,AGL,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ADN,ABG)
[STACK] CHECK CONDITION: LastFerry(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADN,AAV,AEO)
[STACK] CHECK CONDITION: NextToFerry(ABU,ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABU,AEU,ADN)
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,V,null)
[STACK] CHECK CONDITION: NextToDock(V,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,AGL,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,V,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,ACJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABB,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,AAX,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABU,ABH)
[STACK] CHECK CONDITION: LastFerry(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEU,ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABU,AEU,ADN)
[STACK] CHECK CONDITION: NextToFerry(V,ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(V,AGL,ABU)
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,V,null)
[STACK] CHECK CONDITION: NextToDock(V,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACY,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ADH,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ADK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,V,ADJ)
[STACK] CHECK CONDITION: LastFerry(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(V,AGL,ABU)
[STACK] CHECK CONDITION: NextToFerry(ACY,V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACY,AAX,V)
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABB,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ACY,AGK)
[STACK] CHECK CONDITION: LastFerry(V)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAX,ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACY,AAX,V)
[STACK] CHECK CONDITION: NextToFerry(AFZ,ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFZ,S,ACY)
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAI,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,AEU,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AAN,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AFZ,AAN)
[STACK] CHECK CONDITION: LastFerry(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(S,AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFZ,S,ACY)
[STACK] CHECK CONDITION: NextToFerry(A,AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(A,AAD,AFZ)
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,A,null)
[STACK] CHECK CONDITION: NextToDock(A,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AEU,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AGM,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGH,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,ADW,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,AAL,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ADH,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ADK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,ADZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,AGL,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABM,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABW,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AFF,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,AAV,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AAZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AFL,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,ACF,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,A,AFL)
[STACK] CHECK CONDITION: LastFerry(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAD,A)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(A,AAD,AFZ)
[STACK] CHECK CONDITION: NextToFerry(ABM,A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABM,AGL,A)
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AFL,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AAZ,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,ACC,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,AGJ,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAV,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AFF,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,ABG,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,AEK,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABM,AEK)
[STACK] CHECK CONDITION: LastFerry(A)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABM,AGL,A)
[STACK] CHECK CONDITION: NextToFerry(ADW,ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADW,AAI,ABM)
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ACJ,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGA,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABB,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AAX,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,ADW,O)
[STACK] CHECK CONDITION: LastFerry(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAI,ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADW,AAI,ABM)
[STACK] CHECK CONDITION: NextToFerry(AEU,ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEU,AAN,ADW)
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,L,null)
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGP,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AER,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,L,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ABH,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,AEU,ABH)
[STACK] CHECK CONDITION: LastFerry(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAN,AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEU,AAN,ADW)
[STACK] CHECK CONDITION: NextToFerry(AET,AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AET,AEU)
[STACK] CHECK CONDITION: LastFerry(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AET,null)
[STACK] CHECK CONDITION: NextToDock(AET,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,ABZ,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,S,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AGO,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AFJ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AEP,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,AFN,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AET,AEP)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AET,AEU)
[STACK] CHECK CONDITION: NextToFerry(AGP,AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGP,AGH,AET)
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(AFN,AEP)
[STACK] CHECK CONDITION: NextToDock(AEP,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(AFN,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,ACL,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AGO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,S,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ABZ,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AAN,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AGM,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AFR,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,ACN,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,AAJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,ACV,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGP,AFV)
[STACK] CHECK CONDITION: LastFerry(AET)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGH,AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGP,AGH,AET)
[STACK] CHECK CONDITION: NextToFerry(AGA,AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGA,ADZ,AGP)
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAL,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,AEJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ADH,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AGK,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,AEM,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ADK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AGA,ADK)
[STACK] CHECK CONDITION: LastFerry(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADZ,AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGA,ADZ,AGP)
[STACK] CHECK CONDITION: NextToFerry(ABG,AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABG,AFF,AGA)
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,AGL,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABW,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABG,ABW)
[STACK] CHECK CONDITION: LastFerry(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFF,ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABG,AFF,AGA)
[STACK] CHECK CONDITION: NextToFerry(AAJ,ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAJ,L,ABG)
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,O,null)
[STACK] CHECK CONDITION: NextToDock(O,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AGL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ACJ,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ABB,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABN,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABE,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,ADH,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,AAX,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,ACB,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,O,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAI,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AER,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ADQ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,AAJ,ABT)
[STACK] CHECK CONDITION: LastFerry(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(L,AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAJ,L,ABG)
[STACK] CHECK CONDITION: NextToFerry(AFR,AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFR,ABH,AAJ)
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AFR,ADX)
[STACK] CHECK CONDITION: LastFerry(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABH,AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFR,ABH,AAJ)
[STACK] CHECK CONDITION: NextToFerry(ACB,AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACB,AEJ,AFR)
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ACQ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,AFV,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGH,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAL,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,ACB,AAL)
[STACK] CHECK CONDITION: LastFerry(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEJ,ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACB,AEJ,AFR)
[STACK] CHECK CONDITION: NextToFerry(ACQ,ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACQ,ADQ,ACB)
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAI,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AER,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ACQ,AER)
[STACK] CHECK CONDITION: LastFerry(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADQ,ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACQ,ADQ,ACB)
[STACK] CHECK CONDITION: NextToFerry(ADH,ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADH,AGK,ACQ)
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGH,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAL,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ADH,ACW)
[STACK] CHECK CONDITION: LastFerry(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGK,ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADH,AGK,ACQ)
[STACK] CHECK CONDITION: NextToFerry(ABN,ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABN,AEM,ADH)
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABN,W)
[STACK] CHECK CONDITION: LastFerry(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEM,ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABN,AEM,ADH)
[STACK] CHECK CONDITION: NextToFerry(AAN,ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAN,ABZ,ABN)
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ADP,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADB,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAX,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,O,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAI,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AER,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ABH,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,AAN,ABH)
[STACK] CHECK CONDITION: LastFerry(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABZ,AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAN,ABZ,ABN)
[STACK] CHECK CONDITION: NextToFerry(AFF,AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFF,AAV,AAN)
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ACN,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AEB,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AFV,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AGH,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAL,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AGK,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,AEN,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,ADF,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ACP,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,W,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AEM,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ADK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,AFB,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,AGL,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABW,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AEK,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AFF,ABW)
[STACK] CHECK CONDITION: LastFerry(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFF,AAV,AAN)
[STACK] CHECK CONDITION: NextToFerry(ACC,AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACC,AAZ,AFF)
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACC,AAV)
[STACK] CHECK CONDITION: LastFerry(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAZ,ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACC,AAZ,AFF)
[STACK] CHECK CONDITION: NextToFerry(ADK,ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADK,ABB,ACC)
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAV,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AEK,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,ABW,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,AGL,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ACJ,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ADJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADK,ADZ)
[STACK] CHECK CONDITION: LastFerry(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABB,ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADK,ABB,ACC)
[STACK] CHECK CONDITION: NextToFerry(ABW,ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABW,AEK,ADK)
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ACJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,AGL,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ABW,ACJ)
[STACK] CHECK CONDITION: LastFerry(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEK,ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABW,AEK,ADK)
[STACK] CHECK CONDITION: NextToFerry(ACJ,ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACJ,ADJ,ABW)
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ACJ,AEK)
[STACK] CHECK CONDITION: LastFerry(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADJ,ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACJ,ADJ,ABW)
[STACK] CHECK CONDITION: NextToFerry(ACP,ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACP,ADP,ACJ)
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADZ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABB,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,AEM,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABE,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ACP,ABE)
[STACK] CHECK CONDITION: LastFerry(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADP,ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACP,ADP,ACJ)
[STACK] CHECK CONDITION: NextToFerry(AEN,ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEN,ADB,ACP)
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEN,AEG)
[STACK] CHECK CONDITION: LastFerry(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADB,AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEN,ADB,ACP)
[STACK] CHECK CONDITION: NextToFerry(AEP,AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEP,AFN,AEN)
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAX,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,O,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAI,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AER,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AFV,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADQ,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AFC,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,ABJ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ABH,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABZ,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,S,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AGO,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AFJ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AEP,AFJ)
[STACK] CHECK CONDITION: LastFerry(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEP,AFN,AEN)
[STACK] CHECK CONDITION: NextToFerry(AFC,AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFC,AEB,AEP)
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,S,null)
[STACK] CHECK CONDITION: NextToDock(S,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,AFJ,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AGO,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,S,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ABZ,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGM,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ACN,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFC,ABT)
[STACK] CHECK CONDITION: LastFerry(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEB,AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFC,AEB,AEP)
[STACK] CHECK CONDITION: NextToFerry(AER,AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AER,AGH,AFC)
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AFV,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AER,ADQ)
[STACK] CHECK CONDITION: LastFerry(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGH,AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AER,AGH,AFC)
[STACK] CHECK CONDITION: NextToFerry(ABB,AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABB,AFB,AER)
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAL,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAX,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AGK,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,J,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADF,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,W,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,ABE,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AEM,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABB,ABE)
[STACK] CHECK CONDITION: LastFerry(AER)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFB,ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABB,AFB,AER)
[STACK] CHECK CONDITION: NextToFerry(W,ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(W,ADP,ABB)
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,W,null)
[STACK] CHECK CONDITION: NextToDock(W,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,ABE,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,W,AEM)
[STACK] CHECK CONDITION: LastFerry(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADP,W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(W,ADP,ABB)
[STACK] CHECK CONDITION: NextToFerry(ADJ,W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADJ,AGL,W)
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AEM,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,AFB,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADJ,AFB)
[STACK] CHECK CONDITION: LastFerry(W)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADJ,AGL,W)
[STACK] CHECK CONDITION: NextToFerry(AEM,ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEM,ABE,ADJ)
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AEM,ADZ)
[STACK] CHECK CONDITION: LastFerry(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABE,AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEM,ABE,ADJ)
[STACK] CHECK CONDITION: NextToFerry(ACL,AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACL,AFN,AEM)
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADP,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADF,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADB,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,Z,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AGK,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AAX,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,ACW,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,AAR,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,O,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAI,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AGH,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AFV,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ADQ,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,AEB,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ABJ,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ABH,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,AGM,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABZ,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,S,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,AGO,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AFJ,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,ACL,AGO)
[STACK] CHECK CONDITION: LastFerry(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACL,AFN,AEM)
[STACK] CHECK CONDITION: NextToFerry(AGO,ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGO,S,ACL)
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AGO,AFN)
[STACK] CHECK CONDITION: LastFerry(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(S,AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGO,S,ACL)
[STACK] CHECK CONDITION: NextToFerry(ADQ,AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADQ,AFV,AGO)
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,ABZ,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGM,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABH,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ACN,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AEB,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,ADQ,ABJ)
[STACK] CHECK CONDITION: LastFerry(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFV,ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADQ,AFV,AGO)
[STACK] CHECK CONDITION: NextToFerry(AAI,ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAI,AAL,ADQ)
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AGH,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AAI,AFV)
[STACK] CHECK CONDITION: LastFerry(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAL,AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAI,AAL,ADQ)
[STACK] CHECK CONDITION: NextToFerry(AEB,AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEB,ABJ,AAI)
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AFV,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AEB,AGH)
[STACK] CHECK CONDITION: LastFerry(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABJ,AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEB,ABJ,AAI)
[STACK] CHECK CONDITION: NextToFerry(ABH,AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABH,AGM,AEB)
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ABH,ADX)
[STACK] CHECK CONDITION: LastFerry(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGM,ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABH,AGM,AEB)
[STACK] CHECK CONDITION: NextToFerry(AGH,ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGH,AAL,ABH)
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AGH,ABJ)
[STACK] CHECK CONDITION: LastFerry(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAL,AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGH,AAL,ABH)
[STACK] CHECK CONDITION: NextToFerry(ACW,AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACW,AAX,AGH)
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,O,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,ACW,AEJ)
[STACK] CHECK CONDITION: LastFerry(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAX,ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACW,AAX,AGH)
[STACK] CHECK CONDITION: NextToFerry(AGK,ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGK,J,ACW)
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AGK,AAR)
[STACK] CHECK CONDITION: LastFerry(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(J,AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGK,J,ACW)
[STACK] CHECK CONDITION: NextToFerry(AAZ,AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAZ,AFL,AGK)
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADB,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADF,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AEG,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,ADP,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ABE,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AFB,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGL,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEK,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AAV,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAZ,AAV)
[STACK] CHECK CONDITION: LastFerry(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFL,AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAZ,AFL,AGK)
[STACK] CHECK CONDITION: NextToFerry(AFL,AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFL,ACF,AAZ)
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACF,AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFL,ACF,AAZ)
[STACK] CHECK CONDITION: NextToFerry(AEG,AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEG,ADF,AFL)
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAV,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AEK,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AGL,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ADZ,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABE,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADP,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,AEG,ABE)
[STACK] CHECK CONDITION: LastFerry(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEG,ADF,AFL)
[STACK] CHECK CONDITION: NextToFerry(AEK,AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEK,AAV,AEG)
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ABE,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AFB,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGL,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AEK,ADZ)
[STACK] CHECK CONDITION: LastFerry(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEK,AAV,AEG)
[STACK] CHECK CONDITION: NextToFerry(ADB,AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADB,Z,AEK)
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,ADZ,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABE,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADP,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ADF,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADB,ADP)
[STACK] CHECK CONDITION: LastFerry(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Z,ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADB,Z,AEK)
[STACK] CHECK CONDITION: NextToFerry(ADI,ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(ADI,ADB)
[STACK] CHECK CONDITION: LastFerry(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,ADI,null)
[STACK] CHECK CONDITION: NextToDock(ADI,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADP,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ABE,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AFB,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AGL,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AAV,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACF,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AAD,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,ADI,ACF)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(ADI,ADB)
[STACK] CHECK CONDITION: NextToFerry(AGL,ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGL,ADZ,ADI)
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(AAD,ACF)
[STACK] CHECK CONDITION: NextToDock(ACF,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(AAD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,AGJ,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAV,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGL,AGJ)
[STACK] CHECK CONDITION: LastFerry(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADZ,AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGL,ADZ,ADI)
[STACK] CHECK CONDITION: NextToFerry(AAL,AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAL,AFV,AGL)
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABE,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADP,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ADF,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,Z,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAX,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AAR,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,O,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AAL,AEJ)
[STACK] CHECK CONDITION: LastFerry(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFV,AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAL,AFV,AGL)
[STACK] CHECK CONDITION: NextToFerry(S,AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(S,AFJ,AAL)
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,S,null)
[STACK] CHECK CONDITION: NextToDock(S,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ABJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,AGM,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,ABZ,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,S,AGM)
[STACK] CHECK CONDITION: LastFerry(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFJ,S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(S,AFJ,AAL)
[STACK] CHECK CONDITION: NextToFerry(AGM,S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGM,ACN,S)
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AGM,AFJ)
[STACK] CHECK CONDITION: LastFerry(S)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACN,AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGM,ACN,S)
[STACK] CHECK CONDITION: NextToFerry(AFJ,AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFJ,AFN,AGM)
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,AFJ,ACN)
[STACK] CHECK CONDITION: LastFerry(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFJ,AFN,AGM)
[STACK] CHECK CONDITION: NextToFerry(ACF,AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACF,AAD,AFJ)
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,ACN,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ABO,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABJ,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFV,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,O,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AAX,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,J,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADF,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADP,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ABE,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,AFB,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AAV,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,ACF,AAV)
[STACK] CHECK CONDITION: LastFerry(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAD,ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACF,AAD,AFJ)
[STACK] CHECK CONDITION: NextToFerry(AAX,ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAX,AAR,ACF)
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AAV,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ADZ,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ABE,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ADP,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ADF,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,Z,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAX,Z)
[STACK] CHECK CONDITION: LastFerry(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAR,AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAX,AAR,ACF)
[STACK] CHECK CONDITION: NextToFerry(ABE,AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABE,AFB,AAX)
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADF,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADP,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ABE,ADF)
[STACK] CHECK CONDITION: LastFerry(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFB,ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABE,AFB,AAX)
[STACK] CHECK CONDITION: NextToFerry(ADP,ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADP,ADF,ABE)
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADP,ADF,ABE)
[STACK] CHECK CONDITION: NextToFerry(ABZ,ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABZ,AFN,ADP)
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,Z,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAR,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,O,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AFV,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ABJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABT,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ACV,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ABO,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ADX,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ACN,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ABZ,ADX)
[STACK] CHECK CONDITION: LastFerry(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABZ,AFN,ADP)
[STACK] CHECK CONDITION: NextToFerry(ADX,ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADX,ABO,ABZ)
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ADX,AFN)
[STACK] CHECK CONDITION: LastFerry(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADX,ABO,ABZ)
[STACK] CHECK CONDITION: NextToFerry(ABT,ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABT,ABJ,ADX)
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,L,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,ACV,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABT,L)
[STACK] CHECK CONDITION: LastFerry(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABJ,ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABT,ABJ,ADX)
[STACK] CHECK CONDITION: NextToFerry(L,ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(L,ABO,ABT)
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,L,null)
[STACK] CHECK CONDITION: NextToDock(L,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,L,ABJ)
[STACK] CHECK CONDITION: LastFerry(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(L,ABO,ABT)
[STACK] CHECK CONDITION: NextToFerry(AGJ,L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGJ,AAD,L)
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,J,null)
[STACK] CHECK CONDITION: NextToDock(J,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFV,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,O,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AEJ,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AAR,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,J,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADF,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AFB,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,ADZ,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AAV,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AGJ,ADZ)
[STACK] CHECK CONDITION: LastFerry(L)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAD,AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGJ,AAD,L)
[STACK] CHECK CONDITION: NextToFerry(AFB,AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFB,ADF,AGJ)
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,ADZ,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,AFB,AAV)
[STACK] CHECK CONDITION: LastFerry(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFB,ADF,AGJ)
[STACK] CHECK CONDITION: NextToFerry(ADZ,AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADZ,AAV,AFB)
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADZ,AAV,AFB)
[STACK] CHECK CONDITION: NextToFerry(AEJ,ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEJ,O,ADZ)
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,Z,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,AAR,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AEJ,J)
[STACK] CHECK CONDITION: LastFerry(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(O,AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEJ,O,ADZ)
[STACK] CHECK CONDITION: NextToFerry(AAR,AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAR,J,AEJ)
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(J,AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAR,J,AEJ)
[STACK] CHECK CONDITION: NextToFerry(ACN,AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACN,AFN,AAR)
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AFV,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ABJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ACV,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABO,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ACN,ACV)
[STACK] CHECK CONDITION: LastFerry(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACN,AFN,AAR)
[STACK] CHECK CONDITION: NextToFerry(AAD,ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AAD,ACN)
[STACK] CHECK CONDITION: LastFerry(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,J,null)
[STACK] CHECK CONDITION: NextToDock(J,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ACV,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ABJ,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFV,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,O,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,J,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADF,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AAV,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAD,ADF)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AAD,ACN)
[STACK] CHECK CONDITION: NextToFerry(ACV,AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACV,ABO,AAD)
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,O,null)
[STACK] CHECK CONDITION: NextToDock(O,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(AAV,ADF)
[STACK] CHECK CONDITION: NextToDock(ADF,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(AAV,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,Z,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,O,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AFV,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ABJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ACV,AFV)
[STACK] CHECK CONDITION: LastFerry(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACV,ABO,AAD)
[STACK] CHECK CONDITION: NextToFerry(ABO,ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABO,AFN,ACV)
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABO,AFN,ACV)
[STACK] CHECK CONDITION: NextToFerry(AAV,ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AAV,ABO)
[STACK] CHECK CONDITION: LastFerry(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,J,null)
[STACK] CHECK CONDITION: NextToDock(J,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,O,null)
[STACK] CHECK CONDITION: NextToDock(O,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFV,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,O,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,J,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,Z,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,ADF,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,AAV,Z)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AAV,ABO)
[STACK] CHECK CONDITION: NextToFerry(AFN,AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AFN,AAV)
[STACK] CHECK CONDITION: LastFerry(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,O,null)
[STACK] CHECK CONDITION: NextToDock(O,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,J,null)
[STACK] CHECK CONDITION: NextToDock(J,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(ADF,Z)
[STACK] CHECK CONDITION: NextToDock(Z,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(ADF,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,J,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,O,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,AFV,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,ABJ,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,AFN,AFV)
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AFN,AAV)
[STACK] CHECK CONDITION: NextToFerry(AFV,AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFV,O,AFN)
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(ABJ,AFV)
[STACK] CHECK CONDITION: NextToDock(AFV,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(ABJ,AFV)
[STACK] CHECK CONDITION: LastFerry(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(O,AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFV,O,AFN)
[STACK] CHECK CONDITION: NextToFerry(ABJ,AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(ABJ,AFV)
[STACK] CHECK CONDITION: LastFerry(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(ABJ,AFV)
[STACK] CHECK CONDITION: NextToFerry(O,ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(O,J,ABJ)
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(J,O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(O,J,ABJ)
[STACK] CHECK CONDITION: NextToFerry(J,O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(J,Z,O)
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(O)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Z,J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(J,Z,O)
[STACK] CHECK CONDITION: NextToFerry(Z,J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Z,ADF,J)
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(J)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Z,ADF,J)
[STACK] CHECK CONDITION: NextToFerry(ADF,Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(ADF,Z)
[STACK] CHECK CONDITION: LastFerry(Z)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(ADF,Z)
[STACK] CHECK CONDITION: LastFerry(ADF)
Condition satisfied.
Algorithm has finished! Found plan with 6918 operators.
Plan: ChangeToEmptyLine(ADO,ABX),ChangeLine(ABX,AET,ADO),ChangeLine(AET,AAO,ABX),ChangeLine(AAO,AFN,AET),ChangeLine(AFN,AEP,AAO),ChangeLine(AEP,I,AFN),ChangeLine(I,ABQ,AEP),ChangeLine(ABQ,Q,I),ChangeLine(Q,ACL,ABQ),ChangeLine(ACL,AFJ,Q),ChangeLine(AFJ,AAA,ACL),ChangeLine(AAA,ACO,AFJ),ChangeLine(ACO,E,AAA),ChangeLine(E,ABA,ACO),ChangeLine(ABA,AEQ,E),ChangeLine(AEQ,M,ABA),ChangeLine(M,K,AEQ),ChangeLine(K,ADU,M),ChangeLine(ADU,AGB,K),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,ADY,AGG),ChangeLine(ADY,S,AEI),ChangeLine(S,ADL,ADY),ChangeLine(ADL,H,S),ChangeLine(H,AGC,ADL),BoardFirst2(AGC,AAQ),ChangeLine(AAQ,AFG,H),ChangeLine(AFG,AFZ,AAQ),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),ChangeLine(C,AAH,ABL),ChangeLine(AAH,ACT,C),ChangeLine(ACT,ABH,AAH),ChangeLine(ABH,AFR,ACT),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,AFI,AFH),ChangeLine(AFI,X,ACN),ChangeLine(X,ACR,AFI),ChangeLine(ACR,ADX,X),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AFM,AEV),ChangeLine(AFM,AAJ,L),ChangeLine(AAJ,ACV,AFM),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AAE,ACQ),ChangeLine(AAE,ADD,AFV),ChangeLine(ADD,AER,AAE),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ACH,AEF),ChangeLine(ACH,ACX,ACE),ChangeLine(ACX,ADE,ACH),ChangeLine(ADE,ADF,ACX),ChangeLine(ADF,AGN,ADE),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ACZ,AEM),ChangeLine(ACZ,AAC,ABB),ChangeLine(AAC,F,ACZ),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,AFY,AEH),ChangeLine(AFY,AAK,ADK),ChangeLine(AAK,ACU,AFY),ChangeLine(ACU,ABK,AAK),ChangeLine(ABK,AES,ACU),ChangeLine(AES,ABR,ABK),ChangeLine(ABR,AEX,AES),ChangeLine(AEX,AGF,ABR),ChangeLine(AGF,AFB,AEX),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),ChangeLine(G,AFF,ABG),ChangeLine(AFF,ADN,G),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,ADG,ACG),BoardNextTo2(ADG,AAW,AGC),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,G,ADN),ChangeLine(G,ABG,AFF),ChangeLine(ABG,Y,G),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,AEX,AFB),BoardNextTo2(AEX,ABR,ADG),ChangeLine(ABR,AES,AGF),ChangeLine(AES,ABK,ABR),ChangeLine(ABK,ACU,AES),ChangeLine(ACU,AAK,ABK),ChangeLine(AAK,AFY,ACU),ChangeLine(AFY,ADK,AAK),ChangeLine(ADK,AEH,AFY),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ACZ,F),ChangeLine(ACZ,ABB,AAC),ChangeLine(ABB,AEM,ACZ),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ADE,AGN),ChangeLine(ADE,ACX,ADF),ChangeLine(ACX,ACH,ADE),ChangeLine(ACH,ACE,ACX),ChangeLine(ACE,AEF,ACH),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),ChangeLine(AFE,ABI,AAG),ChangeLine(ABI,AGK,AFE),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AAE,AER),ChangeLine(AAE,AFV,ADD),ChangeLine(AFV,ACQ,AAE),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,AFM,ACV),ChangeLine(AFM,L,AAJ),ChangeLine(L,AEV,AFM),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,X,ADX),ChangeLine(X,AFI,ACR),ChangeLine(AFI,ACN,X),ChangeLine(ACN,AFH,AFI),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,ACT,AFR),BoardNextTo2(ACT,AAH,AEX),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,AFI,AFH),ChangeLine(AFI,X,ACN),ChangeLine(X,ACR,AFI),ChangeLine(ACR,ADX,X),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AFM,AEV),ChangeLine(AFM,AAJ,L),ChangeLine(AAJ,ACV,AFM),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AAE,ACQ),ChangeLine(AAE,ADD,AFV),ChangeLine(ADD,AER,AAE),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ACH,AEF),ChangeLine(ACH,ACX,ACE),ChangeLine(ACX,ADE,ACH),BoardNextTo2(ADE,ADF,ACT),ChangeLine(ADF,AGN,ACX),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ACZ,AEM),ChangeLine(ACZ,AAC,ABB),ChangeLine(AAC,F,ACZ),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,AFY,AEH),ChangeLine(AFY,AAK,ADK),ChangeLine(AAK,ACU,AFY),ChangeLine(ACU,ABK,AAK),ChangeLine(ABK,AES,ACU),ChangeLine(AES,ABR,ABK),ChangeLine(ABR,AGF,AES),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),ChangeLine(G,AFF,ABG),ChangeLine(AFF,ADN,G),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,B,AGJ),ChangeLine(B,AFP,ACC),ChangeLine(AFP,AAZ,B),ChangeLine(AAZ,AFA,AFP),ChangeLine(AFA,ABV,AAZ),ChangeLine(ABV,AFW,AFA),ChangeLine(AFW,AFL,ABV),ChangeLine(AFL,AAS,AFW),ChangeLine(AAS,ACF,AFL),ChangeLine(ACF,A,AAS),ChangeLine(A,AAD,ACF),ChangeLine(AAD,AFD,A),ChangeLine(AFD,ACD,AAD),ChangeLine(ACD,AAU,AFD),BoardNextTo2(AAU,ADI,ADE),ChangeLine(ACD,AFD,ADI),ChangeLine(AFD,AAD,ACD),ChangeLine(AAD,A,AFD),ChangeLine(A,ACF,AAD),ChangeLine(ACF,AAS,A),ChangeLine(AAS,AFL,ACF),ChangeLine(AFL,AFW,AAS),ChangeLine(AFW,ABV,AFL),ChangeLine(ABV,AFA,AFW),ChangeLine(AFA,AAZ,ABV),ChangeLine(AAZ,AFP,AFA),ChangeLine(AFP,B,AAZ),ChangeLine(B,ACC,AFP),ChangeLine(ACC,AGJ,B),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,G,ADN),ChangeLine(G,ABG,AFF),ChangeLine(ABG,Y,G),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,AES,AGF),ChangeLine(AES,ABK,ABR),ChangeLine(ABK,ACU,AES),BoardNextTo2(ACU,AAK,AAU),ChangeLine(AAK,AFY,ABK),ChangeLine(AFY,ADK,AAK),ChangeLine(ADK,AEH,AFY),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ACZ,F),ChangeLine(ACZ,ABB,AAC),ChangeLine(ABB,AEM,ACZ),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACX,AGN),ChangeLine(ACX,ACH,ADF),BoardNextTo2(ACH,ACE,ACU),ChangeLine(ACX,ADF,ACE),ChangeLine(ADF,AGN,ACX),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ACZ,AEM),ChangeLine(ACZ,AAC,ABB),ChangeLine(AAC,F,ACZ),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,AFY,AEH),BoardNextTo2(AFY,AAK,ACH),ChangeLine(ADK,AEH,AAK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ACZ,F),ChangeLine(ACZ,ABB,AAC),ChangeLine(ABB,AEM,ACZ),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACX,AGN),ChangeLine(ACX,ACE,ADF),ChangeLine(ACE,AEF,ACX),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),ChangeLine(AFE,ABI,AAG),ChangeLine(ABI,AGK,AFE),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AAE,AER),ChangeLine(AAE,AFV,ADD),ChangeLine(AFV,ACQ,AAE),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,AFM,ACV),ChangeLine(AFM,L,AAJ),ChangeLine(L,AEV,AFM),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,X,ADX),ChangeLine(X,AFI,ACR),ChangeLine(AFI,ACN,X),ChangeLine(ACN,AFH,AFI),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),ChangeLine(AAH,C,ABH),ChangeLine(C,ABL,AAH),ChangeLine(ABL,AGM,C),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,AAQ,AFZ),BoardNextTo2(AAQ,H,AFY),ChangeLine(AFG,AFZ,H),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),ChangeLine(C,AAH,ABL),ChangeLine(AAH,ABH,C),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,AFI,AFH),ChangeLine(AFI,X,ACN),ChangeLine(X,ACR,AFI),ChangeLine(ACR,ADX,X),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AFM,AEV),ChangeLine(AFM,AAJ,L),ChangeLine(AAJ,ACV,AFM),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AAE,ACQ),ChangeLine(AAE,ADD,AFV),ChangeLine(ADD,AER,AAE),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ACX,AEF),ChangeLine(ACX,ADF,ACE),ChangeLine(ADF,AGN,ACX),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ACZ,AEM),ChangeLine(ACZ,AAC,ABB),ChangeLine(AAC,F,ACZ),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,AAK,AEH),ChangeLine(AAK,ABK,ADK),ChangeLine(ABK,AES,AAK),ChangeLine(AES,ABR,ABK),ChangeLine(ABR,AGF,AES),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),ChangeLine(G,AFF,ABG),ChangeLine(AFF,ADN,G),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,B,AGJ),ChangeLine(B,AFP,ACC),ChangeLine(AFP,AAZ,B),ChangeLine(AAZ,AFA,AFP),ChangeLine(AFA,ABV,AAZ),ChangeLine(ABV,AFW,AFA),ChangeLine(AFW,AFL,ABV),ChangeLine(AFL,AAS,AFW),ChangeLine(AAS,ACF,AFL),ChangeLine(ACF,A,AAS),ChangeLine(A,AAD,ACF),ChangeLine(AAD,AFD,A),ChangeLine(AFD,ACD,AAD),ChangeLine(ACD,ADI,AFD),ChangeLine(ADI,ABS,ACD),ChangeLine(ABS,AGI,ADI),BoardNextTo1(AGI,AAQ),ChangeToEmptyLine(ABS,ADI),ChangeLine(ADI,ACD,ABS),ChangeLine(ACD,AFD,ADI),ChangeLine(AFD,AAD,ACD),ChangeLine(AAD,A,AFD),ChangeLine(A,ACF,AAD),ChangeLine(ACF,AAS,A),ChangeLine(AAS,AFL,ACF),ChangeLine(AFL,AFW,AAS),ChangeLine(AFW,ABV,AFL),ChangeLine(ABV,AFA,AFW),ChangeLine(AFA,AAZ,ABV),ChangeLine(AAZ,AFP,AFA),ChangeLine(AFP,B,AAZ),ChangeLine(B,ACC,AFP),ChangeLine(ACC,AGJ,B),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,G,ADN),ChangeLine(G,ABG,AFF),ChangeLine(ABG,Y,G),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,AES,AGF),ChangeLine(AES,ABK,ABR),ChangeLine(ABK,AAK,AES),ChangeLine(AAK,ADK,ABK),ChangeLine(ADK,AEH,AAK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ACZ,F),ChangeLine(ACZ,ABB,AAC),ChangeLine(ABB,AEM,ACZ),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACX,AGN),ChangeLine(ACX,ACE,ADF),ChangeLine(ACE,AEF,ACX),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),ChangeLine(AFE,ABI,AAG),ChangeLine(ABI,AGK,AFE),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AAE,AER),ChangeLine(AAE,AFV,ADD),ChangeLine(AFV,ACQ,AAE),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,AFM,ACV),ChangeLine(AFM,L,AAJ),ChangeLine(L,AEV,AFM),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,X,ADX),ChangeLine(X,AFI,ACR),ChangeLine(AFI,ACN,X),ChangeLine(ACN,AFH,AFI),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),ChangeLine(AAH,C,ABH),ChangeLine(C,ABL,AAH),ChangeLine(ABL,AGM,C),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,H,AFZ),ChangeLine(H,ADL,AFG),ChangeLine(ADL,S,H),ChangeLine(S,ADY,ADL),ChangeLine(ADY,AEI,S),ChangeLine(AEI,AGG,ADY),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,K,AGB),ChangeLine(K,M,ADU),ChangeLine(M,AEQ,K),ChangeLine(AEQ,ABA,M),ChangeLine(ABA,E,AEQ),ChangeLine(E,ACO,ABA),ChangeLine(ACO,AAA,E),ChangeLine(AAA,AFJ,ACO),ChangeLine(AFJ,ACL,AAA),ChangeLine(ACL,Q,AFJ),ChangeLine(Q,ABQ,ACL),ChangeLine(ABQ,I,Q),ChangeLine(I,AEP,ABQ),ChangeLine(AEP,AFN,I),ChangeLine(AFN,AAO,AEP),ChangeLine(AAO,AET,AFN),ChangeLine(AET,ABX,AAO),BoardNextTo2(ABX,ADO,AGI),ChangeLine(AET,AAO,ADO),ChangeLine(AAO,AFN,AET),ChangeLine(AFN,AEP,AAO),ChangeLine(AEP,I,AFN),ChangeLine(I,ABQ,AEP),ChangeLine(ABQ,Q,I),ChangeLine(Q,ACL,ABQ),ChangeLine(ACL,AFJ,Q),ChangeLine(AFJ,AAA,ACL),ChangeLine(AAA,ACO,AFJ),ChangeLine(ACO,E,AAA),ChangeLine(E,ABA,ACO),ChangeLine(ABA,AEQ,E),ChangeLine(AEQ,M,ABA),ChangeLine(M,K,AEQ),ChangeLine(K,ADU,M),ChangeLine(ADU,AGB,K),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,ADY,AGG),ChangeLine(ADY,S,AEI),ChangeLine(S,ADL,ADY),ChangeLine(ADL,H,S),ChangeLine(H,AFG,ADL),ChangeLine(AFG,AFZ,H),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),ChangeLine(C,AAH,ABL),ChangeLine(AAH,ABH,C),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,AFI,AFH),ChangeLine(AFI,X,ACN),ChangeLine(X,ACR,AFI),ChangeLine(ACR,ADX,X),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AFM,AEV),ChangeLine(AFM,AAJ,L),ChangeLine(AAJ,ACV,AFM),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AAE,ACQ),ChangeLine(AAE,ADD,AFV),ChangeLine(ADD,AER,AAE),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ACX,AEF),BoardNextTo2(ACX,ADF,ABX),ChangeLine(ACE,AEF,ADF),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),ChangeLine(AFE,ABI,AAG),ChangeLine(ABI,AGK,AFE),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AAE,AER),ChangeLine(AAE,AFV,ADD),ChangeLine(AFV,ACQ,AAE),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,AFM,ACV),BoardNextTo2(AFM,L,ACX),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AAE,ACQ),ChangeLine(AAE,ADD,AFV),ChangeLine(ADD,AER,AAE),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ADF,AEF),ChangeLine(ADF,AGN,ACE),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ACZ,AEM),BoardNextTo2(ACZ,AAC,AFM),ChangeLine(ABB,AEM,AAC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACE,AGN),ChangeLine(ACE,AEF,ADF),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),ChangeLine(AFE,ABI,AAG),ChangeLine(ABI,AGK,AFE),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AAE,AER),BoardNextTo2(AAE,AFV,ACZ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AFE,AGK),ChangeLine(AFE,AAG,ABI),ChangeLine(AAG,AAM,AFE),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ADF,AEF),ChangeLine(ADF,AGN,ACE),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,AAC,AEM),ChangeLine(AAC,F,ABB),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,AAK,AEH),BoardNextTo2(AAK,ABK,AAE),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ABB,F),ChangeLine(ABB,AEM,AAC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACE,AGN),ChangeLine(ACE,AEF,ADF),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,AFE,AAM),BoardNextTo2(AFE,ABI,AAK),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,X,ADX),ChangeLine(X,AFI,ACR),BoardNextTo2(AFI,ACN,AFE),ChangeLine(X,ACR,ACN),ChangeLine(ACR,ADX,X),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AAG,AGK),ChangeLine(AAG,AAM,ABI),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ADF,AEF),ChangeLine(ADF,AGN,ACE),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,AAC,AEM),ChangeLine(AAC,F,ABB),ChangeLine(F,U,AAC),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AES,ADK),BoardNextTo2(AES,ABR,AFI),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),ChangeLine(G,AFF,ABG),ChangeLine(AFF,ADN,G),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,B,AGJ),ChangeLine(B,AFP,ACC),BoardNextTo2(AFP,AAZ,AES),ChangeLine(B,ACC,AAZ),ChangeLine(ACC,AGJ,B),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,G,ADN),ChangeLine(G,ABG,AFF),ChangeLine(ABG,Y,G),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,AAC,U),ChangeLine(AAC,ABB,F),ChangeLine(ABB,AEM,AAC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACE,AGN),ChangeLine(ACE,AEF,ADF),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,ABI,AAM),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,X,ADX),BoardNextTo2(X,ACN,AFP),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,AEY,ACR),ChangeLine(AEY,ABO,ADX),ChangeLine(ABO,D,AEY),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),ChangeLine(AAB,AEB,AFC),ChangeLine(AEB,ADQ,AAB),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),ChangeLine(ABF,R,AAI),ChangeLine(R,AGE,ABF),ChangeLine(AGE,ADW,R),ChangeLine(ADW,AEC,AGE),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AAG,AGK),ChangeLine(AAG,AAM,ABI),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),ChangeLine(ACE,ADF,AEF),ChangeLine(ADF,AGN,ACE),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),ChangeLine(ABP,ACA,AEG),ChangeLine(ACA,ADP,ABP),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,AAC,AEM),BoardNextTo2(AAC,F,X),ChangeLine(F,U,ABB),ChangeLine(U,ABC,F),ChangeLine(ABC,AFU,U),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),ChangeLine(G,AFF,ABG),ChangeLine(AFF,ADN,G),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,B,AGJ),ChangeLine(B,AAZ,ACC),ChangeLine(AAZ,AFA,B),ChangeLine(AFA,ABV,AAZ),ChangeLine(ABV,AFW,AFA),ChangeLine(AFW,AFL,ABV),ChangeLine(AFL,AAS,AFW),ChangeLine(AAS,ACF,AFL),ChangeLine(ACF,A,AAS),ChangeLine(A,AAD,ACF),ChangeLine(AAD,AFD,A),BoardNextTo2(AFD,ACD,AAC),ChangeLine(AAD,A,ACD),ChangeLine(A,ACF,AAD),ChangeLine(ACF,AAS,A),ChangeLine(AAS,AFL,ACF),ChangeLine(AFL,AFW,AAS),ChangeLine(AFW,ABV,AFL),ChangeLine(ABV,AFA,AFW),ChangeLine(AFA,AAZ,ABV),ChangeLine(AAZ,B,AFA),ChangeLine(B,ACC,AAZ),ChangeLine(ACC,AGJ,B),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,G,ADN),ChangeLine(G,ABG,AFF),ChangeLine(ABG,Y,G),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,U,AFU),ChangeLine(U,F,ABC),ChangeLine(F,ABB,U),ChangeLine(ABB,AEM,F),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,ABP,ADP),ChangeLine(ABP,AEG,ACA),ChangeLine(AEG,AGN,ABP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,ACE,AGN),ChangeLine(ACE,AEF,ADF),ChangeLine(AEF,AFT,ACE),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),ChangeLine(ABY,AAM,J),ChangeLine(AAM,AAG,ABY),ChangeLine(AAG,ABI,AAM),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AGE,AEC),ChangeLine(AGE,R,ADW),ChangeLine(R,ABF,AGE),ChangeLine(ABF,AAI,R),ChangeLine(AAI,AEO,ABF),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AAB,ADQ),ChangeLine(AAB,AFC,AEB),ChangeLine(AFC,ABJ,AAB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,AEY,D),ChangeLine(AEY,ADX,ABO),ChangeLine(ADX,ACR,AEY),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),ChangeLine(AAH,C,ABH),ChangeLine(C,ABL,AAH),ChangeLine(ABL,AGM,C),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,H,AFZ),ChangeLine(H,ADL,AFG),ChangeLine(ADL,S,H),ChangeLine(S,ADY,ADL),ChangeLine(ADY,AEI,S),ChangeLine(AEI,AGG,ADY),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,K,AGB),ChangeLine(K,M,ADU),ChangeLine(M,AEQ,K),ChangeLine(AEQ,ABA,M),ChangeLine(ABA,E,AEQ),BoardNextTo2(E,ACO,AFD),ChangeLine(ABA,AEQ,ACO),ChangeLine(AEQ,M,ABA),ChangeLine(M,K,AEQ),ChangeLine(K,ADU,M),ChangeLine(ADU,AGB,K),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,ADY,AGG),ChangeLine(ADY,S,AEI),ChangeLine(S,ADL,ADY),ChangeLine(ADL,H,S),ChangeLine(H,AFG,ADL),ChangeLine(AFG,AFZ,H),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),ChangeLine(C,AAH,ABL),ChangeLine(AAH,ABH,C),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,AEY,ACR),BoardNextTo2(AEY,ABO,E),ChangeLine(ABO,D,ADX),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AAB,ABJ),BoardNextTo2(AAB,AEB,AEY),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ABF,AEO),BoardNextTo2(ABF,R,AAB),ChangeLine(R,AGE,AAI),BoardNextTo2(AGE,ADW,ABF),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AAG,AGK),ChangeLine(AAG,AAM,ABI),ChangeLine(AAM,ABY,AAG),ChangeLine(ABY,J,AAM),ChangeLine(J,AGD,ABY),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ACE,AFT),BoardNextTo2(ACE,ADF,AGE),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ABP,AGN),BoardNextTo2(ABP,ACA,ACE),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AFT,ADF),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,ABY,AGD),BoardNextTo2(ABY,AAM,ABP),ChangeLine(AAM,AAG,J),ChangeLine(AAG,ABI,AAM),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),ChangeLine(R,AAI,ADW),ChangeLine(AAI,AEO,R),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ADC,L),ChangeLine(ADC,D,AEV),ChangeLine(D,ABO,ADC),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),ChangeLine(AAH,C,ABH),ChangeLine(C,ABL,AAH),ChangeLine(ABL,AGM,C),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,H,AFZ),ChangeLine(H,ADL,AFG),ChangeLine(ADL,S,H),ChangeLine(S,ADY,ADL),ChangeLine(ADY,AEI,S),ChangeLine(AEI,AGG,ADY),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,K,AGB),BoardNextTo2(K,M,ABY),ChangeLine(M,AEQ,ADU),ChangeLine(AEQ,ABA,M),ChangeLine(ABA,ACO,AEQ),ChangeLine(ACO,AAA,ABA),ChangeLine(AAA,AFJ,ACO),ChangeLine(AFJ,ACL,AAA),ChangeLine(ACL,Q,AFJ),BoardNextTo2(Q,ABQ,K),ChangeLine(ACL,AFJ,ABQ),ChangeLine(AFJ,AAA,ACL),ChangeLine(AAA,ACO,AFJ),ChangeLine(ACO,ABA,AAA),ChangeLine(ABA,AEQ,ACO),ChangeLine(AEQ,M,ABA),ChangeLine(M,ADU,AEQ),ChangeLine(ADU,AGB,M),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,ADY,AGG),ChangeLine(ADY,S,AEI),ChangeLine(S,ADL,ADY),ChangeLine(ADL,H,S),ChangeLine(H,AFG,ADL),ChangeLine(AFG,AFZ,H),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),ChangeLine(C,AAH,ABL),ChangeLine(AAH,ABH,C),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,ABO,ACR),ChangeLine(ABO,D,ADX),ChangeLine(D,ADC,ABO),ChangeLine(ADC,AEV,D),ChangeLine(AEV,L,ADC),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,R,AEO),ChangeLine(R,ADW,AAI),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AAG,AGK),ChangeLine(AAG,AAM,ABI),ChangeLine(AAM,J,AAG),ChangeLine(J,AGD,AAM),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ADF,AFT),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),ChangeLine(ACA,ADP,AEG),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,F,AEM),BoardNextTo2(F,U,Q),BoardNextTo2(U,ABC,F),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,G,Y),BoardNextTo2(G,AFF,U),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),ChangeLine(ACS,AEK,AEL),ChangeLine(AEK,ACM,ACS),ChangeLine(ACM,AEA,AEK),ChangeLine(AEA,ABW,ACM),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),ChangeLine(AAP,AGL,AEW),ChangeLine(AGL,AAY,AAP),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,AEG,ADP),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AFT,ADF),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,AAM,AGD),ChangeLine(AAM,AAG,J),ChangeLine(AAG,ABI,AAM),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),ChangeLine(R,AAI,ADW),ChangeLine(AAI,AEO,R),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ADC,L),BoardNextTo2(ADC,D,G),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),ChangeLine(AAH,C,ABH),ChangeLine(C,ABL,AAH),ChangeLine(ABL,AGM,C),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,H,AFZ),BoardNextTo2(H,ADL,ADC),ChangeLine(ADL,S,AFG),ChangeLine(S,ADY,ADL),BoardNextTo2(ADY,AEI,H),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFG,S),ChangeLine(AFG,AFZ,ADL),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,C,AGM),BoardNextTo2(C,AAH,ADY),ChangeLine(ABL,AGM,AAH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),ChangeLine(AFG,ADL,AFZ),ChangeLine(ADL,S,AFG),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,M,AGB),BoardNextTo2(M,AEQ,C),ChangeLine(ADU,AGB,AEQ),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFG,S),ChangeLine(AFG,AFZ,ADL),ChangeLine(AFZ,ADA,AFG),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,AAH,AGM),ChangeLine(AAH,ABH,ABL),ChangeLine(ABH,AFR,AAH),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,ABO,ACR),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,R,AEO),ChangeLine(R,ADW,AAI),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),ChangeLine(ABI,AAG,AGK),ChangeLine(AAG,AAM,ABI),ChangeLine(AAM,J,AAG),ChangeLine(J,AGD,AAM),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ADF,AFT),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),ChangeLine(ACA,ADP,AEG),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AAP,AAY),ChangeLine(AAP,AEW,AGL),ChangeLine(AEW,ABM,AAP),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,ACM,ABW),ChangeLine(ACM,AEK,AEA),ChangeLine(AEK,ACS,ACM),ChangeLine(ACS,AEL,AEK),ChangeLine(AEL,Y,ACS),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,B,AGJ),BoardNextTo2(B,AAZ,M),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,ACS,Y),BoardNextTo2(ACS,AEK,B),ChangeLine(AEK,ACM,AEL),BoardNextTo2(ACM,AEA,ACS),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AAP,ABM),BoardNextTo2(AAP,AGL,ACM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,AEG,ADP),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AFT,ADF),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,AAM,AGD),ChangeLine(AAM,AAG,J),ChangeLine(AAG,ABI,AAM),ChangeLine(ABI,AGK,AAG),ChangeLine(AGK,ADH,ABI),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),ChangeLine(R,AAI,ADW),ChangeLine(AAI,AEO,R),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,AAH,AFR),BoardNextTo2(AAH,ABL,AAP),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,AFG,ADA),BoardNextTo2(AFG,ADL,AAH),ChangeLine(AFZ,ADA,ADL),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,ABO,ACR),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,R,AEO),ChangeLine(R,ADW,AAI),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,ABI,ADH),BoardNextTo2(ABI,AAG,AFG),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,AGD,AAM),ChangeLine(AGD,Z,J),ChangeLine(Z,ADT,AGD),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ADF,AFT),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),ChangeLine(ACA,ADP,AEG),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,AEL,AEA),ChangeLine(AEL,Y,AEK),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,AFA,ACC),ChangeLine(AFA,ABV,AAZ),ChangeLine(ABV,AFW,AFA),ChangeLine(AFW,AFL,ABV),ChangeLine(AFL,AAS,AFW),BoardNextTo2(AAS,ACF,ABI),ChangeLine(AFL,AFW,ACF),ChangeLine(AFW,ABV,AFL),ChangeLine(ABV,AFA,AFW),ChangeLine(AFA,AAZ,ABV),ChangeLine(AAZ,ACC,AFA),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,AEK,Y),ChangeLine(AEK,AEA,AEL),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AGL,ABM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,AEG,ADP),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AFT,ADF),ChangeLine(AFT,AEN,AEF),ChangeLine(AEN,ADB,AFT),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,AGD,ADT),ChangeLine(AGD,J,Z),ChangeLine(J,AAM,AGD),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),ChangeLine(R,AAI,ADW),ChangeLine(AAI,AEO,R),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,ADL,ADA),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,AEQ,AGB),ChangeLine(AEQ,ABA,ADU),BoardNextTo2(ABA,ACO,AAS),ChangeLine(AEQ,ADU,ACO),ChangeLine(ADU,AGB,AEQ),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,ADA,ADL),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,ABO,ACR),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,R,AEO),ChangeLine(R,ADW,AAI),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,AGD,AAM),BoardNextTo2(AGD,Z,ABA),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AFT,ADB),ChangeLine(AFT,AEF,AEN),ChangeLine(AEF,ADF,AFT),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),ChangeLine(ACA,ADP,AEG),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),ChangeLine(AFS,AEZ,ADZ),ChangeLine(AEZ,ADJ,AFS),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,AEL,AEA),ChangeLine(AEL,Y,AEK),ChangeLine(Y,ABG,AEL),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,AFA,ACC),ChangeLine(AFA,ABV,AAZ),ChangeLine(ABV,AFW,AFA),ChangeLine(AFW,AFL,ABV),ChangeLine(AFL,ACF,AFW),ChangeLine(ACF,A,AFL),ChangeLine(A,AAD,ACF),ChangeLine(AAD,ACD,A),ChangeLine(ACD,ADI,AAD),ChangeLine(ADI,ABS,ACD),BoardNextTo1(ABS,AGD),ChangeToEmptyLine(ADI,ACD),ChangeLine(ACD,AAD,ADI),ChangeLine(AAD,A,ACD),ChangeLine(A,ACF,AAD),ChangeLine(ACF,AFL,A),ChangeLine(AFL,AFW,ACF),ChangeLine(AFW,ABV,AFL),ChangeLine(ABV,AFA,AFW),ChangeLine(AFA,AAZ,ABV),ChangeLine(AAZ,ACC,AFA),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEL,ABG),ChangeLine(AEL,AEK,Y),ChangeLine(AEK,AEA,AEL),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AGL,ABM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,AFS,ADJ),ChangeLine(AFS,ADZ,AEZ),ChangeLine(ADZ,AGA,AFS),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,AEG,ADP),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AFT,ADF),BoardNextTo2(AFT,AEN,ABS),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),ChangeLine(ACA,ADP,AEG),ChangeLine(ADP,N,ACA),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AFS,AGA),BoardNextTo2(AFS,AEZ,AFT),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,AEL,AEA),BoardNextTo2(AEL,Y,AFS),ChangeLine(AEK,AEA,Y),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AGL,ABM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,ACA,N),ChangeLine(ACA,AEG,ADP),ChangeLine(AEG,AGN,ACA),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),ChangeLine(AFQ,ACW,AAX),ChangeLine(ACW,AAR,AFQ),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),ChangeLine(R,AAI,ADW),ChangeLine(AAI,AEO,R),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),ChangeLine(AED,ABT,AGR),ChangeLine(ABT,AFK,AED),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),ChangeLine(ACR,ACN,ADX),ChangeLine(ACN,AFH,ACR),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,ADL,ADA),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),ChangeLine(AGB,ADU,AGO),ChangeLine(ADU,AEQ,AGB),ChangeLine(AEQ,ACO,ADU),ChangeLine(ACO,AAA,AEQ),BoardNextTo2(AAA,AFJ,AEL),ChangeLine(ACO,AEQ,AFJ),ChangeLine(AEQ,ADU,ACO),ChangeLine(ADU,AGB,AEQ),ChangeLine(AGB,AGO,ADU),ChangeLine(AGO,AGG,AGB),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,ADA,ADL),ChangeLine(ADA,P,AFZ),ChangeLine(P,AGQ,ADA),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ACR,AFH),ChangeLine(ACR,ADX,ACN),ChangeLine(ADX,ABO,ACR),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AED,AFK),ChangeLine(AED,AGR,ABT),ChangeLine(AGR,ABJ,AED),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,R,AEO),ChangeLine(R,ADW,AAI),ChangeLine(ADW,AEC,R),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AFQ,AAR),ChangeLine(AFQ,AAX,ACW),ChangeLine(AAX,ACI,AFQ),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ACA,AGN),BoardNextTo2(ACA,ADP,AAA),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,AFQ,ACI),BoardNextTo2(AFQ,ACW,ACA),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,R,AEC),BoardNextTo2(R,AAI,AFQ),ChangeLine(ADW,AEC,AAI),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACI,ACW),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,Y,AEA),ChangeLine(Y,ABG,AEK),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,AFA,ACC),BoardNextTo2(AFA,ABV,R),ChangeLine(AAZ,ACC,ABV),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEK,ABG),ChangeLine(AEK,AEA,Y),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AGL,ABM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,ACW,ACI),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AAI,AEC),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,AED,ABJ),BoardNextTo2(AED,ABT,AFA),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AEC,AAI),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACI,ACW),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),ChangeLine(ABR,AGF,ABK),ChangeLine(AGF,AFB,ABR),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,AAT,AEZ),ChangeLine(AAT,ADS,ADJ),ChangeLine(ADS,ACJ,AAT),ChangeLine(ACJ,ACK,ADS),ChangeLine(ACK,V,ACJ),ChangeLine(V,AAY,ACK),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,Y,AEA),ChangeLine(Y,ABG,AEK),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,ABV,ACC),ChangeLine(ABV,AFW,AAZ),BoardNextTo2(AFW,AFL,AED),ChangeLine(ABV,AAZ,AFL),ChangeLine(AAZ,ACC,ABV),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEK,ABG),ChangeLine(AEK,AEA,Y),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),ChangeLine(AEW,AGL,ABM),ChangeLine(AGL,AAY,AEW),ChangeLine(AAY,V,AGL),ChangeLine(V,ACK,AAY),ChangeLine(ACK,ACJ,V),ChangeLine(ACJ,ADS,ACK),ChangeLine(ADS,AAT,ACJ),ChangeLine(AAT,ADJ,ADS),ChangeLine(ADJ,AEZ,AAT),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABR,AFB),ChangeLine(ABR,ABK,AGF),ChangeLine(ABK,ADK,ABR),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,ACW,ACI),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AAI,AEC),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACR,ABO),BoardNextTo2(ACR,ACN,AFW),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AEC,AAI),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACI,ACW),ChangeLine(ACI,ACY,AAX),ChangeLine(ACY,ADH,ACI),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),ChangeLine(AFX,AEH,AFU),ChangeLine(AEH,ADK,AFX),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,ABR,ADK),BoardNextTo2(ABR,AGF,ACR),ChangeLine(ABK,ADK,AGF),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFX,ADK),ChangeLine(AFX,AFU,AEH),ChangeLine(AFU,ABC,AFX),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,ACI,ADH),ChangeLine(ACI,AAX,ACY),ChangeLine(AAX,ACW,ACI),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AAI,AEC),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFH,ADX),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,ADA,AGQ),ChangeLine(ADA,AFZ,P),ChangeLine(AFZ,ADL,ADA),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AGB,AGG),BoardNextTo2(AGB,ADU,ABR),ChangeLine(ADU,AEQ,AGO),ChangeLine(AEQ,ACO,ADU),ChangeLine(ACO,AFJ,AEQ),ChangeLine(AFJ,ACL,ACO),ChangeLine(ACL,ABQ,AFJ),ChangeLine(ABQ,I,ACL),BoardNextTo2(I,AEP,AGB),ChangeLine(ABQ,ACL,AEP),ChangeLine(ACL,AFJ,ABQ),ChangeLine(AFJ,ACO,ACL),ChangeLine(ACO,AEQ,AFJ),ChangeLine(AEQ,ADU,ACO),ChangeLine(ADU,AGO,AEQ),ChangeLine(AGO,AGG,ADU),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,ADA,ADL),BoardNextTo2(ADA,P,I),ChangeLine(AFZ,ADL,P),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,ADU,AGG),ChangeLine(ADU,AEQ,AGO),BoardNextTo2(AEQ,ACO,ADA),ChangeLine(ACO,AFJ,ADU),ChangeLine(AFJ,ACL,ACO),ChangeLine(ACL,ABQ,AFJ),ChangeLine(ABQ,AEP,ACL),ChangeLine(AEP,AFN,ABQ),ChangeLine(AFN,AAO,AEP),BoardNextTo2(AAO,AET,AEQ),ChangeLine(AFN,AEP,AET),ChangeLine(AEP,ABQ,AFN),ChangeLine(ABQ,ACL,AEP),ChangeLine(ACL,AFJ,ABQ),ChangeLine(AFJ,ACO,ACL),ChangeLine(ACO,ADU,AFJ),ChangeLine(ADU,AGO,ACO),ChangeLine(AGO,AGG,ADU),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,P,ADL),ChangeLine(P,AGQ,AFZ),ChangeLine(AGQ,ABZ,P),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ADX,AFH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AEC,AAI),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACI,ACW),BoardNextTo2(ACI,ACY,AAO),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AFX,ABC),BoardNextTo2(AFX,AEH,ACI),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),ChangeLine(AEC,ADW,AAL),ChangeLine(ADW,AAI,AEC),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),ChangeLine(D,ABO,AEV),ChangeLine(ABO,ADX,D),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFH,ADX),ChangeLine(AFH,AFR,ACN),ChangeLine(AFR,ABH,AFH),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,P,ABZ),ChangeLine(P,AFZ,AGQ),ChangeLine(AFZ,ADL,P),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,ADU,AGG),ChangeLine(ADU,ACO,AGO),BoardNextTo2(ACO,AFJ,AFX),ChangeLine(ADU,AGO,AFJ),ChangeLine(AGO,AGG,ADU),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,P,ADL),BoardNextTo2(P,AGQ,ACO),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,AFH,ABH),ChangeLine(AFH,ACN,AFR),ChangeLine(ACN,ADX,AFH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,D,ADX),ChangeLine(D,AEV,ABO),ChangeLine(AEV,L,D),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AEC,AAI),ChangeLine(AEC,AAL,ADW),ChangeLine(AAL,O,AEC),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AGF,ADK),ChangeLine(AGF,AFB,ABK),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,AAT,AEZ),BoardNextTo2(AAT,ADS,P),ChangeLine(ADJ,AEZ,ADS),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABK,AFB),ChangeLine(ABK,ADK,AGF),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFU,ADK),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),ChangeLine(AFO,W,ADR),ChangeLine(W,ACP,AFO),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AEC,O),BoardNextTo2(AEC,ADW,AAT),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,AFO,ACP),ChangeLine(AFO,ADR,W),ChangeLine(ADR,ABE,AFO),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AGF,ADK),ChangeLine(AGF,AFB,ABK),ChangeLine(AFB,AGA,AGF),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ADS,AEZ),ChangeLine(ADS,ACJ,ADJ),ChangeLine(ACJ,ACK,ADS),BoardNextTo2(ACK,V,AEC),ChangeLine(ACJ,ADS,V),ChangeLine(ADS,ADJ,ACJ),ChangeLine(ADJ,AEZ,ADS),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,AGF,AGA),ChangeLine(AGF,ABK,AFB),ChangeLine(ABK,ADK,AGF),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFU,ADK),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,AFO,ABE),BoardNextTo2(AFO,W,ACK),ChangeLine(ADR,ABE,W),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AGF,ADK),BoardNextTo2(AGF,AFB,AFO),ChangeLine(ABK,ADK,AFB),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFU,ADK),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,W,ABE),ChangeLine(W,ACP,ADR),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),ChangeLine(ADM,ACB,AEJ),ChangeLine(ACB,O,ADM),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,D,L),BoardNextTo2(D,ABO,AGF),ChangeLine(AEV,L,ABO),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,ADM,O),ChangeLine(ADM,AEJ,ACB),ChangeLine(AEJ,AAR,ADM),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,ADR,ACP),ChangeLine(ADR,ABE,W),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AFB,ADK),ChangeLine(AFB,AGA,ABK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ADS,AEZ),ChangeLine(ADS,ACJ,ADJ),ChangeLine(ACJ,V,ADS),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,AEW,AAY),ChangeLine(AEW,ABM,AGL),ChangeLine(ABM,ABW,AEW),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,Y,AEA),ChangeLine(Y,ABG,AEK),ChangeLine(ABG,AFF,Y),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),ChangeLine(AAW,AGJ,ABD),ChangeLine(AGJ,ACC,AAW),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,ABV,ACC),ChangeLine(ABV,AFL,AAZ),ChangeLine(AFL,ACF,ABV),ChangeLine(ACF,A,AFL),ChangeLine(A,AAD,ACF),ChangeLine(AAD,ACD,A),BoardNextTo2(ACD,ADI,D),ChangeLine(AAD,A,ADI),ChangeLine(A,ACF,AAD),ChangeLine(ACF,AFL,A),ChangeLine(AFL,ABV,ACF),ChangeLine(ABV,AAZ,AFL),ChangeLine(AAZ,ACC,ABV),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAW,ACC),ChangeLine(AAW,ABD,AGJ),ChangeLine(ABD,ACG,AAW),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,Y,AFF),ChangeLine(Y,AEK,ABG),ChangeLine(AEK,AEA,Y),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AEW,ABW),BoardNextTo2(AEW,AGL,ACD),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADS,V),ChangeLine(ADS,ADJ,ACJ),ChangeLine(ADJ,AEZ,ADS),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ABK,AGA),ChangeLine(ABK,ADK,AFB),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFU,ADK),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,W,ABE),ChangeLine(W,ACP,ADR),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),ChangeLine(AGN,ADF,AEG),ChangeLine(ADF,AEF,AGN),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ADM,AAR),BoardNextTo2(ADM,ACB,AEW),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AGN,AEF),ChangeLine(AGN,AEG,ADF),ChangeLine(AEG,ADP,AGN),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,ADR,ACP),ChangeLine(ADR,ABE,W),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AFB,ADK),ChangeLine(AFB,AGA,ABK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ADS,AEZ),ChangeLine(ADS,ACJ,ADJ),ChangeLine(ACJ,V,ADS),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,ABM,AAY),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,Y,AEA),BoardNextTo2(Y,ABG,ADM),ChangeLine(AEK,AEA,ABG),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADS,V),ChangeLine(ADS,ADJ,ACJ),ChangeLine(ADJ,AEZ,ADS),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ABK,AGA),ChangeLine(ABK,ADK,AFB),ChangeLine(ADK,AEH,ABK),ChangeLine(AEH,AFU,ADK),ChangeLine(AFU,ABC,AEH),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),ChangeLine(ADR,W,ABE),ChangeLine(W,ACP,ADR),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,AGN,ADP),BoardNextTo2(AGN,ADF,Y),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,ADR,ACP),ChangeLine(ADR,ABE,W),ChangeLine(ABE,ABN,ADR),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,AEH,ABC),ChangeLine(AEH,ADK,AFU),ChangeLine(ADK,ABK,AEH),ChangeLine(ABK,AFB,ADK),ChangeLine(AFB,AGA,ABK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ADS,AEZ),ChangeLine(ADS,ACJ,ADJ),ChangeLine(ACJ,V,ADS),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,ABM,AAY),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,ABG,AEA),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),ChangeLine(AAF,AAV,AEE),ChangeLine(AAV,ACG,AAF),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AAW,ACG),BoardNextTo2(AAW,AGJ,AGN),ChangeLine(ABD,ACG,AGJ),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,AAF,ACG),ChangeLine(AAF,AEE,AAV),ChangeLine(AEE,ADN,AAF),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,AEA,ABG),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADS,V),ChangeLine(ADS,ADJ,ACJ),ChangeLine(ADJ,AEZ,ADS),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ABK,AGA),ChangeLine(ABK,ADK,AFB),ChangeLine(ADK,AEH,ABK),BoardNextTo2(AEH,AFU,AAW),ChangeLine(ADK,ABK,AFU),BoardNextTo2(ABK,AFB,AEH),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,ADR,ABN),BoardNextTo2(ADR,W,ABK),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,ADK,ABC),ChangeLine(ADK,AFB,AFU),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ADS,AEZ),BoardNextTo2(ADS,ACJ,ADR),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,T,W),ChangeLine(T,ADV,ACP),ChangeLine(ADV,N,T),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEF,AEG),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ABO,L),ChangeLine(ABO,ADX,AEV),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFH,ADX),BoardNextTo2(AFH,AFR,ADS),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,AEV,ADX),ChangeLine(AEV,L,ABO),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),ChangeLine(AEF,ADF,AEN),ChangeLine(ADF,AEG,AEF),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,T,N),ChangeLine(T,ACP,ADV),ChangeLine(ACP,W,T),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,ADK,ABC),ChangeLine(ADK,AFB,AFU),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ACJ,AEZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,ABM,AAY),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,ABG,AEA),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),ChangeLine(AEE,AAF,ADN),BoardNextTo2(AAF,AAV,AFH),ChangeLine(AEE,ADN,AAV),ChangeLine(ADN,AFF,AEE),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,AEA,ABG),ChangeLine(AEA,ABW,AEK),ChangeLine(ABW,ABM,AEA),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,T,W),BoardNextTo2(T,ADV,AAF),ChangeLine(ADV,N,ACP),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEF,AEG),ChangeLine(AEF,AEN,ADF),ChangeLine(AEN,ADB,AEF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),ChangeLine(AFK,ACV,ABT),ChangeLine(ACV,AAJ,AFK),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ABO,L),ChangeLine(ABO,ADX,AEV),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,ADL,AGQ),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,ADU,AGG),BoardNextTo2(ADU,AFJ,T),ChangeLine(AGO,AGG,AFJ),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,AGQ,ADL),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,AEV,ADX),ChangeLine(AEV,L,ABO),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,AFK,AAJ),ChangeLine(AFK,ABT,ACV),ChangeLine(ABT,AGR,AFK),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,AEF,ADB),BoardNextTo2(AEF,ADF,ADU),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),ChangeLine(ADV,ACP,N),ChangeLine(ACP,W,ADV),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,ADK,ABC),ChangeLine(ADK,AFB,AFU),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ACJ,AEZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,ABM,AAY),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEA,ABM),ChangeLine(AEA,AEK,ABW),ChangeLine(AEK,ABG,AEA),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AEE,AFF),BoardNextTo2(AEE,AAV,AEF),ChangeLine(ADN,AFF,AAV),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,AEA,ABG),BoardNextTo2(AEA,ABW,AEE),ChangeLine(ABW,ABM,AEK),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADV,W),ChangeLine(ADV,N,ACP),ChangeLine(N,ADP,ADV),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,AFK,AGR),BoardNextTo2(AFK,ACV,AEA),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ABO,L),ChangeLine(ABO,ADX,AEV),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,ADL,AGQ),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),ChangeLine(AGG,AGO,AEI),ChangeLine(AGO,AFJ,AGG),ChangeLine(AFJ,ACL,AGO),ChangeLine(ACL,ABQ,AFJ),BoardNextTo2(ABQ,AEP,AFK),ChangeLine(ACL,AFJ,AEP),ChangeLine(AFJ,AGO,ACL),ChangeLine(AGO,AGG,AFJ),ChangeLine(AGG,AEI,AGO),ChangeLine(AEI,S,AGG),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,AGQ,ADL),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,AEV,ADX),ChangeLine(AEV,L,ABO),ChangeLine(L,AAJ,AEV),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,AGR,ACV),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ADV,ADP),BoardNextTo2(ADV,ACP,ABQ),ChangeLine(ACP,W,N),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,ADK,ABC),ChangeLine(ADK,AFB,AFU),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ACJ,AEZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AAY,ACJ),ChangeLine(AAY,AGL,V),ChangeLine(AGL,ABM,AAY),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEK,ABM),ChangeLine(AEK,ABG,ABW),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AAV,AFF),ChangeLine(AAV,ACG,ADN),ChangeLine(ACG,ABD,AAV),ChangeLine(ABD,AGJ,ACG),ChangeLine(AGJ,ACC,ABD),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,ABV,ACC),BoardNextTo2(ABV,AFL,ADV),ChangeLine(AAZ,ACC,AFL),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,ABD,ACC),ChangeLine(ABD,ACG,AGJ),ChangeLine(ACG,AAV,ABD),ChangeLine(AAV,ADN,ACG),ChangeLine(ADN,AFF,AAV),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,ABW,ABG),ChangeLine(ABW,ABM,AEK),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,AAY,ABM),ChangeLine(AAY,V,AGL),ChangeLine(V,ACJ,AAY),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,N,W),ChangeLine(N,ADP,ACP),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,ACV,AGR),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,AEV,AAJ),ChangeLine(AEV,ABO,L),ChangeLine(ABO,ADX,AEV),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,ADL,AGQ),ChangeLine(ADL,S,AFZ),ChangeLine(S,AEI,ADL),ChangeLine(AEI,AGG,S),BoardNextTo2(AGG,AGO,ABV),ChangeLine(AEI,S,AGO),ChangeLine(S,ADL,AEI),ChangeLine(ADL,AFZ,S),ChangeLine(AFZ,AGQ,ADL),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,AEV,ADX),BoardNextTo2(AEV,L,AGG),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,AGR,ACV),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),ChangeLine(AAG,AAM,AGK),ChangeLine(AAM,J,AAG),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ACP,ADP),ChangeLine(ACP,W,N),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),ChangeLine(AFU,ADK,ABC),ChangeLine(ADK,AFB,AFU),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ACJ,AEZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AAY,ACJ),BoardNextTo2(AAY,AGL,AEV),ChangeLine(AGL,ABM,V),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEK,ABM),ChangeLine(AEK,ABG,ABW),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AAV,AFF),ChangeLine(AAV,ACG,ADN),BoardNextTo2(ACG,ABD,AAY),ChangeLine(AAV,ADN,ABD),ChangeLine(ADN,AFF,AAV),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,ABW,ABG),ChangeLine(ABW,ABM,AEK),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,V,ABM),ChangeLine(V,ACJ,AGL),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,AFU,AFB),ChangeLine(AFU,ABC,ADK),ChangeLine(ABC,ABB,AFU),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,N,W),ChangeLine(N,ADP,ACP),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,ADT,AEN),ChangeLine(ADT,Z,ADB),ChangeLine(Z,J,ADT),ChangeLine(J,AAM,Z),ChangeLine(AAM,AAG,J),ChangeLine(AAG,AGK,AAM),ChangeLine(AGK,ADH,AAG),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),ChangeLine(ADD,AFV,AER),ChangeLine(AFV,ACQ,ADD),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),ChangeLine(AGR,ABT,ABJ),ChangeLine(ABT,ACV,AGR),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,ADL,AGQ),BoardNextTo2(ADL,S,ACG),ChangeLine(AFZ,AGQ,S),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,AGR,ACV),ChangeLine(AGR,ABJ,ABT),ChangeLine(ABJ,AFC,AGR),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,ADD,ACQ),ChangeLine(ADD,AER,AFV),ChangeLine(AER,AGP,ADD),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAG,ADH),BoardNextTo2(AAG,AAM,ADL),ChangeLine(AAM,J,AGK),ChangeLine(J,Z,AAM),ChangeLine(Z,ADT,J),ChangeLine(ADT,ADB,Z),ChangeLine(ADB,AEN,ADT),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ACP,ADP),ChangeLine(ACP,W,N),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,AFU,ABB),BoardNextTo2(AFU,ADK,AAG),ChangeLine(ABC,ABB,ADK),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,N,W),ChangeLine(N,ADP,ACP),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,ADT,AEN),BoardNextTo2(ADT,Z,AFU),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),ChangeLine(N,ACP,ADP),ChangeLine(ACP,W,N),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,ADK,ABB),ChangeLine(ADK,AFB,ABC),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),ChangeLine(AEZ,ADJ,ADZ),ChangeLine(ADJ,ACJ,AEZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AGL,ACJ),ChangeLine(AGL,ABM,V),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEK,ABM),ChangeLine(AEK,ABG,ABW),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),ChangeLine(ADN,AAV,AFF),ChangeLine(AAV,ABD,ADN),BoardNextTo2(ABD,AGJ,ADT),ChangeLine(AAV,ADN,AGJ),ChangeLine(ADN,AFF,AAV),ChangeLine(AFF,ABG,ADN),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,ABW,ABG),ChangeLine(ABW,ABM,AEK),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,V,ABM),ChangeLine(V,ACJ,AGL),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,AEZ,ACJ),ChangeLine(AEZ,ADZ,ADJ),ChangeLine(ADZ,AGA,AEZ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,ABC,AFB),ChangeLine(ABC,ABB,ADK),ChangeLine(ABB,AEM,ABC),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,N,W),ChangeLine(N,ADP,ACP),ChangeLine(ADP,AEG,N),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AAM,Z),ChangeLine(AAM,AGK,J),ChangeLine(AGK,ADH,AAM),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,ADD,AGP),BoardNextTo2(ADD,AFV,ABD),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,AGR,AFC),BoardNextTo2(AGR,ABT,ADD),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,S,AGQ),ChangeLine(S,AEI,AFZ),BoardNextTo2(AEI,AGO,AGR),ChangeLine(S,AFZ,AGO),ChangeLine(AFZ,AGQ,S),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAM,ADH),ChangeLine(AAM,J,AGK),ChangeLine(J,Z,AAM),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,N,AEG),BoardNextTo2(N,ACP,AEI),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AAM,Z),ChangeLine(AAM,AGK,J),ChangeLine(AGK,ADH,AAM),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,AFV,AGP),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),ChangeLine(ABL,AGM,ABH),ChangeLine(AGM,ABU,ABL),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),ChangeLine(AGQ,AFZ,ABZ),ChangeLine(AFZ,S,AGQ),ChangeLine(S,AGO,AFZ),ChangeLine(AGO,AFJ,S),ChangeLine(AFJ,ACL,AGO),ChangeLine(ACL,AEP,AFJ),ChangeLine(AEP,AFN,ACL),ChangeLine(AFN,AET,AEP),ChangeLine(AET,ADO,AFN),BoardNextTo1(ADO,N),ChangeToEmptyLine(AET,AFN),ChangeLine(AFN,AEP,AET),ChangeLine(AEP,ACL,AFN),ChangeLine(ACL,AFJ,AEP),ChangeLine(AFJ,AGO,ACL),ChangeLine(AGO,S,AFJ),ChangeLine(S,AFZ,AGO),ChangeLine(AFZ,AGQ,S),ChangeLine(AGQ,ABZ,AFZ),ChangeLine(ABZ,AAN,AGQ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABL,ABU),ChangeLine(ABL,ABH,AGM),ChangeLine(ABH,AFR,ABL),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),ChangeLine(AEO,AAI,AGH),ChangeLine(AAI,ADW,AEO),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,AAM,ADH),BoardNextTo2(AAM,J,ADO),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ABC,AEM),ChangeLine(ABC,ADK,ABB),ChangeLine(ADK,AFB,ABC),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,AEZ,AGA),BoardNextTo2(AEZ,ADJ,AAM),ChangeLine(ADZ,AGA,ADJ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,ABC,AFB),BoardNextTo2(ABC,ABB,AEZ),ChangeLine(ABB,AEM,ADK),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,ADH,J),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AEO,ADW),ChangeLine(AEO,AGH,AAI),ChangeLine(AGH,AGP,AEO),ChangeLine(AGP,AER,AGH),ChangeLine(AER,AFV,AGP),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,ABL,AFR),BoardNextTo2(ABL,AGM,ABC),ChangeLine(AGM,ABU,ABH),ChangeLine(ABU,AEU,AGM),ChangeLine(AEU,AAN,ABU),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AGQ,AAN),BoardNextTo2(AGQ,AFZ,ABL),ChangeLine(ABZ,AAN,AFZ),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,ABU,AAN),ChangeLine(ABU,AGM,AEU),ChangeLine(AGM,ABH,ABU),ChangeLine(ABH,AFR,AGM),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AEO,AGP),BoardNextTo2(AEO,AAI,AGQ),ChangeLine(AAI,ADW,AGH),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,J,ADH),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ADK,AEM),ChangeLine(ADK,AFB,ABB),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,ADJ,AGA),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,V,ADJ),ChangeLine(V,AGL,ACJ),ChangeLine(AGL,ABM,V),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEK,ABM),ChangeLine(AEK,ABG,ABW),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,ADN,ABG),BoardNextTo2(ADN,AAV,AEO),ChangeLine(AFF,ABG,AAV),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,ABW,ABG),ChangeLine(ABW,ABM,AEK),ChangeLine(ABM,AGL,ABW),ChangeLine(AGL,V,ABM),ChangeLine(V,ACJ,AGL),ChangeLine(ACJ,ADJ,V),ChangeLine(ADJ,ADZ,ACJ),ChangeLine(ADZ,AGA,ADJ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,ABB,AFB),ChangeLine(ABB,AEM,ADK),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,ADH,J),ChangeLine(ADH,ACY,AGK),ChangeLine(ACY,AAX,ADH),ChangeLine(AAX,ACW,ACY),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AGH,ADW),ChangeLine(AGH,AGP,AAI),ChangeLine(AGP,AER,AGH),ChangeLine(AER,AFV,AGP),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,AGM,AFR),ChangeLine(AGM,ABU,ABH),BoardNextTo2(ABU,AEU,ADN),ChangeLine(AGM,ABH,AEU),ChangeLine(ABH,AFR,AGM),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AAI,AGP),ChangeLine(AAI,ADW,AGH),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ACY,ACW),ChangeLine(ACY,ADH,AAX),ChangeLine(ADH,AGK,ACY),ChangeLine(AGK,J,ADH),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ADK,AEM),ChangeLine(ADK,AFB,ABB),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,ADJ,AGA),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,V,ADJ),BoardNextTo2(V,AGL,ABU),ChangeLine(ACJ,ADJ,AGL),ChangeLine(ADJ,ADZ,ACJ),ChangeLine(ADZ,AGA,ADJ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,ABB,AFB),ChangeLine(ABB,AEM,ADK),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,ADH,J),ChangeLine(ADH,ACY,AGK),BoardNextTo2(ACY,AAX,V),ChangeLine(AAX,ACW,ADH),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),ChangeLine(ADW,AAI,AAL),ChangeLine(AAI,AGH,ADW),ChangeLine(AGH,AGP,AAI),ChangeLine(AGP,AER,AGH),ChangeLine(AER,AFV,AGP),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,AGM,AFR),ChangeLine(AGM,AEU,ABH),ChangeLine(AEU,AAN,AGM),ChangeLine(AAN,ABZ,AEU),ChangeLine(ABZ,AFZ,AAN),BoardNextTo2(AFZ,S,ACY),ChangeLine(ABZ,AAN,S),ChangeLine(AAN,AEU,ABZ),ChangeLine(AEU,AGM,AAN),ChangeLine(AGM,ABH,AEU),ChangeLine(ABH,AFR,AGM),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),ChangeLine(AGP,AGH,AER),ChangeLine(AGH,AAI,AGP),ChangeLine(AAI,ADW,AGH),ChangeLine(ADW,AAL,AAI),ChangeLine(AAL,O,ADW),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ADH,ACW),ChangeLine(ADH,AGK,AAX),ChangeLine(AGK,J,ADH),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ADK,AEM),ChangeLine(ADK,AFB,ABB),ChangeLine(AFB,AGA,ADK),ChangeLine(AGA,ADZ,AFB),ChangeLine(ADZ,ADJ,AGA),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,AGL,ADJ),ChangeLine(AGL,ABM,ACJ),ChangeLine(ABM,ABW,AGL),ChangeLine(ABW,AEK,ABM),ChangeLine(AEK,ABG,ABW),ChangeLine(ABG,AFF,AEK),ChangeLine(AFF,AAV,ABG),ChangeLine(AAV,AGJ,AFF),ChangeLine(AGJ,ACC,AAV),ChangeLine(ACC,AAZ,AGJ),ChangeLine(AAZ,AFL,ACC),ChangeLine(AFL,ACF,AAZ),ChangeLine(ACF,A,AFL),BoardNextTo2(A,AAD,AFZ),ChangeLine(ACF,AFL,AAD),ChangeLine(AFL,AAZ,ACF),ChangeLine(AAZ,ACC,AFL),ChangeLine(ACC,AGJ,AAZ),ChangeLine(AGJ,AAV,ACC),ChangeLine(AAV,AFF,AGJ),ChangeLine(AFF,ABG,AAV),ChangeLine(ABG,AEK,AFF),ChangeLine(AEK,ABW,ABG),ChangeLine(ABW,ABM,AEK),BoardNextTo2(ABM,AGL,A),ChangeLine(AGL,ACJ,ABW),ChangeLine(ACJ,ADJ,AGL),ChangeLine(ADJ,ADZ,ACJ),ChangeLine(ADZ,AGA,ADJ),ChangeLine(AGA,AFB,ADZ),ChangeLine(AFB,ADK,AGA),ChangeLine(ADK,ABB,AFB),ChangeLine(ABB,AEM,ADK),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,ADH,J),ChangeLine(ADH,AAX,AGK),ChangeLine(AAX,ACW,ADH),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,ADW,O),BoardNextTo2(ADW,AAI,ABM),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AGP,AAI),ChangeLine(AGP,AER,AGH),ChangeLine(AER,AFV,AGP),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),ChangeLine(AAJ,L,ACV),ChangeLine(L,ABO,AAJ),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),ChangeLine(AFR,ABH,ACN),ChangeLine(ABH,AGM,AFR),ChangeLine(AGM,AEU,ABH),BoardNextTo2(AEU,AAN,ADW),ChangeLine(AAN,ABZ,AGM),ChangeLine(ABZ,S,AAN),ChangeLine(S,AGO,ABZ),ChangeLine(AGO,AFJ,S),ChangeLine(AFJ,ACL,AGO),ChangeLine(ACL,AEP,AFJ),ChangeLine(AEP,AFN,ACL),ChangeLine(AFN,AET,AEP),BoardNextTo1(AET,AEU),ChangeToEmptyLine(AFN,AEP),ChangeLine(AEP,ACL,AFN),ChangeLine(ACL,AFJ,AEP),ChangeLine(AFJ,AGO,ACL),ChangeLine(AGO,S,AFJ),ChangeLine(S,ABZ,AGO),ChangeLine(ABZ,AAN,S),ChangeLine(AAN,AGM,ABZ),ChangeLine(AGM,ABH,AAN),ChangeLine(ABH,AFR,AGM),ChangeLine(AFR,ACN,ABH),ChangeLine(ACN,ADX,AFR),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,AAJ,ABO),ChangeLine(AAJ,ACV,L),ChangeLine(ACV,ABT,AAJ),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGP,AFV),BoardNextTo2(AGP,AGH,AET),ChangeLine(AGH,AAI,AER),ChangeLine(AAI,AAL,AGH),ChangeLine(AAL,O,AAI),ChangeLine(O,ACB,AAL),ChangeLine(ACB,AEJ,O),ChangeLine(AEJ,AAR,ACB),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ADH,ACW),ChangeLine(ADH,AGK,AAX),ChangeLine(AGK,J,ADH),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),ChangeLine(ABN,AEM,ABE),ChangeLine(AEM,ABB,ABN),ChangeLine(ABB,ADK,AEM),ChangeLine(ADK,AFB,ABB),ChangeLine(AFB,AGA,ADK),BoardNextTo2(AGA,ADZ,AGP),ChangeLine(ADZ,ADJ,AFB),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,AGL,ADJ),ChangeLine(AGL,ABW,ACJ),ChangeLine(ABW,AEK,AGL),ChangeLine(AEK,ABG,ABW),BoardNextTo2(ABG,AFF,AGA),ChangeLine(AEK,ABW,AFF),ChangeLine(ABW,AGL,AEK),ChangeLine(AGL,ACJ,ABW),ChangeLine(ACJ,ADJ,AGL),ChangeLine(ADJ,ADZ,ACJ),ChangeLine(ADZ,AFB,ADJ),ChangeLine(AFB,ADK,ADZ),ChangeLine(ADK,ABB,AFB),ChangeLine(ABB,AEM,ADK),ChangeLine(AEM,ABN,ABB),ChangeLine(ABN,ABE,AEM),ChangeLine(ABE,W,ABN),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,ADH,J),ChangeLine(ADH,AAX,AGK),ChangeLine(AAX,ACW,ADH),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,ACB,AAR),ChangeLine(ACB,O,AEJ),ChangeLine(O,AAL,ACB),ChangeLine(AAL,AAI,O),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AER,AAI),ChangeLine(AER,AFV,AGH),ChangeLine(AFV,ACQ,AER),ChangeLine(ACQ,ADQ,AFV),ChangeLine(ADQ,AEB,ACQ),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,AAJ,ABT),BoardNextTo2(AAJ,L,ABG),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AFR,ADX),BoardNextTo2(AFR,ABH,AAJ),ChangeLine(ACN,ADX,ABH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,ACQ,AEB),ChangeLine(ACQ,AFV,ADQ),ChangeLine(AFV,AER,ACQ),ChangeLine(AER,AGH,AFV),ChangeLine(AGH,AAI,AER),ChangeLine(AAI,AAL,AGH),ChangeLine(AAL,O,AAI),ChangeLine(O,ACB,AAL),BoardNextTo2(ACB,AEJ,AFR),ChangeLine(O,AAL,AEJ),ChangeLine(AAL,AAI,O),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AER,AAI),ChangeLine(AER,AFV,AGH),ChangeLine(AFV,ACQ,AER),BoardNextTo2(ACQ,ADQ,ACB),ChangeLine(AFV,AER,ADQ),ChangeLine(AER,AGH,AFV),ChangeLine(AGH,AAI,AER),ChangeLine(AAI,AAL,AGH),ChangeLine(AAL,O,AAI),ChangeLine(O,AEJ,AAL),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,ADH,ACW),BoardNextTo2(ADH,AGK,ACQ),ChangeLine(AGK,J,AAX),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,ABN,W),BoardNextTo2(ABN,AEM,ADH),ChangeLine(ABE,W,AEM),ChangeLine(W,ACP,ABE),ChangeLine(ACP,ADP,W),ChangeLine(ADP,AEG,ACP),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),ChangeLine(AEN,ADB,ADF),ChangeLine(ADB,Z,AEN),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,AAX,J),ChangeLine(AAX,ACW,AGK),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,O,AAR),ChangeLine(O,AAL,AEJ),ChangeLine(AAL,AAI,O),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AER,AAI),ChangeLine(AER,AFV,AGH),ChangeLine(AFV,ADQ,AER),ChangeLine(ADQ,AEB,AFV),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,ABH,ADX),ChangeLine(ABH,AGM,ACN),ChangeLine(AGM,AAN,ABH),BoardNextTo2(AAN,ABZ,ABN),ChangeLine(AGM,ABH,ABZ),ChangeLine(ABH,ACN,AGM),ChangeLine(ACN,ADX,ABH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),ChangeLine(AFC,AEB,ABJ),ChangeLine(AEB,ADQ,AFC),ChangeLine(ADQ,AFV,AEB),ChangeLine(AFV,AER,ADQ),ChangeLine(AER,AGH,AFV),ChangeLine(AGH,AAI,AER),ChangeLine(AAI,AAL,AGH),ChangeLine(AAL,O,AAI),ChangeLine(O,AEJ,AAL),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,AGK,ACW),ChangeLine(AGK,J,AAX),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,AEN,Z),ChangeLine(AEN,ADF,ADB),ChangeLine(ADF,AEG,AEN),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ACP,AEG),ChangeLine(ACP,W,ADP),ChangeLine(W,ABE,ACP),ChangeLine(ABE,AEM,W),ChangeLine(AEM,ABB,ABE),ChangeLine(ABB,ADK,AEM),ChangeLine(ADK,AFB,ABB),ChangeLine(AFB,ADZ,ADK),ChangeLine(ADZ,ADJ,AFB),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,AGL,ADJ),ChangeLine(AGL,ABW,ACJ),ChangeLine(ABW,AEK,AGL),ChangeLine(AEK,AFF,ABW),BoardNextTo2(AFF,AAV,AAN),ChangeLine(AAV,AGJ,AEK),ChangeLine(AGJ,ACC,AAV),BoardNextTo2(ACC,AAZ,AFF),ChangeLine(AGJ,AAV,AAZ),ChangeLine(AAV,AEK,AGJ),ChangeLine(AEK,ABW,AAV),ChangeLine(ABW,AGL,AEK),ChangeLine(AGL,ACJ,ABW),ChangeLine(ACJ,ADJ,AGL),ChangeLine(ADJ,ADZ,ACJ),ChangeLine(ADZ,AFB,ADJ),ChangeLine(AFB,ADK,ADZ),BoardNextTo2(ADK,ABB,ACC),ChangeLine(AFB,ADZ,ABB),ChangeLine(ADZ,ADJ,AFB),ChangeLine(ADJ,ACJ,ADZ),ChangeLine(ACJ,AGL,ADJ),ChangeLine(AGL,ABW,ACJ),BoardNextTo2(ABW,AEK,ADK),ChangeLine(AGL,ACJ,AEK),BoardNextTo2(ACJ,ADJ,ABW),ChangeLine(ADJ,ADZ,AGL),ChangeLine(ADZ,AFB,ADJ),ChangeLine(AFB,ABB,ADZ),ChangeLine(ABB,AEM,AFB),ChangeLine(AEM,ABE,ABB),ChangeLine(ABE,W,AEM),ChangeLine(W,ACP,ABE),BoardNextTo2(ACP,ADP,ACJ),ChangeLine(ADP,AEG,W),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,AEN,AEG),BoardNextTo2(AEN,ADB,ACP),ChangeLine(ADB,Z,ADF),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,AAX,J),ChangeLine(AAX,ACW,AGK),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,O,AAR),ChangeLine(O,AAL,AEJ),ChangeLine(AAL,AAI,O),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AER,AAI),ChangeLine(AER,AFV,AGH),ChangeLine(AFV,ADQ,AER),ChangeLine(ADQ,AEB,AFV),ChangeLine(AEB,AFC,ADQ),ChangeLine(AFC,ABJ,AEB),ChangeLine(ABJ,ABT,AFC),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,ABH,ADX),ChangeLine(ABH,AGM,ACN),ChangeLine(AGM,ABZ,ABH),ChangeLine(ABZ,S,AGM),ChangeLine(S,AGO,ABZ),ChangeLine(AGO,AFJ,S),ChangeLine(AFJ,ACL,AGO),ChangeLine(ACL,AEP,AFJ),BoardNextTo2(AEP,AFN,AEN),ChangeLine(ACL,AFJ,AFN),ChangeLine(AFJ,AGO,ACL),ChangeLine(AGO,S,AFJ),ChangeLine(S,ABZ,AGO),ChangeLine(ABZ,AGM,S),ChangeLine(AGM,ABH,ABZ),ChangeLine(ABH,ACN,AGM),ChangeLine(ACN,ADX,ABH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFC,ABT),BoardNextTo2(AFC,AEB,AEP),ChangeLine(AEB,ADQ,ABJ),ChangeLine(ADQ,AFV,AEB),ChangeLine(AFV,AER,ADQ),BoardNextTo2(AER,AGH,AFC),ChangeLine(AGH,AAI,AFV),ChangeLine(AAI,AAL,AGH),ChangeLine(AAL,O,AAI),ChangeLine(O,AEJ,AAL),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,ACW,AEJ),ChangeLine(ACW,AAX,AAR),ChangeLine(AAX,AGK,ACW),ChangeLine(AGK,J,AAX),ChangeLine(J,Z,AGK),ChangeLine(Z,ADB,J),ChangeLine(ADB,ADF,Z),ChangeLine(ADF,AEG,ADB),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,W,AEG),ChangeLine(W,ABE,ADP),ChangeLine(ABE,AEM,W),ChangeLine(AEM,ABB,ABE),BoardNextTo2(ABB,AFB,AER),ChangeLine(AEM,ABE,AFB),ChangeLine(ABE,W,AEM),BoardNextTo2(W,ADP,ABB),ChangeLine(ABE,AEM,ADP),ChangeLine(AEM,AFB,ABE),ChangeLine(AFB,ADZ,AEM),ChangeLine(ADZ,ADJ,AFB),BoardNextTo2(ADJ,AGL,W),ChangeLine(ADZ,AFB,AGL),ChangeLine(AFB,AEM,ADZ),BoardNextTo2(AEM,ABE,ADJ),ChangeLine(ABE,ADP,AFB),ChangeLine(ADP,AEG,ABE),ChangeLine(AEG,ADF,ADP),ChangeLine(ADF,ADB,AEG),ChangeLine(ADB,Z,ADF),ChangeLine(Z,J,ADB),ChangeLine(J,AGK,Z),ChangeLine(AGK,AAX,J),ChangeLine(AAX,ACW,AGK),ChangeLine(ACW,AAR,AAX),ChangeLine(AAR,AEJ,ACW),ChangeLine(AEJ,O,AAR),ChangeLine(O,AAL,AEJ),ChangeLine(AAL,AAI,O),ChangeLine(AAI,AGH,AAL),ChangeLine(AGH,AFV,AAI),ChangeLine(AFV,ADQ,AGH),ChangeLine(ADQ,AEB,AFV),ChangeLine(AEB,ABJ,ADQ),ChangeLine(ABJ,ABT,AEB),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,ABH,ADX),ChangeLine(ABH,AGM,ACN),ChangeLine(AGM,ABZ,ABH),ChangeLine(ABZ,S,AGM),ChangeLine(S,AGO,ABZ),ChangeLine(AGO,AFJ,S),ChangeLine(AFJ,ACL,AGO),BoardNextTo2(ACL,AFN,AEM),ChangeLine(AFJ,AGO,AFN),BoardNextTo2(AGO,S,ACL),ChangeLine(S,ABZ,AFJ),ChangeLine(ABZ,AGM,S),ChangeLine(AGM,ABH,ABZ),ChangeLine(ABH,ACN,AGM),ChangeLine(ACN,ADX,ABH),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AEB,ABT),ChangeLine(AEB,ADQ,ABJ),BoardNextTo2(ADQ,AFV,AGO),ChangeLine(AFV,AGH,AEB),ChangeLine(AGH,AAI,AFV),BoardNextTo2(AAI,AAL,ADQ),ChangeLine(AGH,AFV,AAL),ChangeLine(AFV,AEB,AGH),BoardNextTo2(AEB,ABJ,AAI),ChangeLine(ABJ,ABT,AFV),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,ABH,ADX),BoardNextTo2(ABH,AGM,AEB),ChangeLine(ACN,ADX,AGM),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFV,ABT),ChangeLine(AFV,AGH,ABJ),BoardNextTo2(AGH,AAL,ABH),ChangeLine(AAL,O,AFV),ChangeLine(O,AEJ,AAL),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,ACW,AEJ),BoardNextTo2(ACW,AAX,AGH),ChangeLine(AAX,AGK,AAR),BoardNextTo2(AGK,J,ACW),ChangeLine(J,Z,AAX),ChangeLine(Z,ADB,J),ChangeLine(ADB,ADF,Z),ChangeLine(ADF,AEG,ADB),ChangeLine(AEG,ADP,ADF),ChangeLine(ADP,ABE,AEG),ChangeLine(ABE,AFB,ADP),ChangeLine(AFB,ADZ,ABE),ChangeLine(ADZ,AGL,AFB),ChangeLine(AGL,AEK,ADZ),ChangeLine(AEK,AAV,AGL),ChangeLine(AAV,AGJ,AEK),ChangeLine(AGJ,AAZ,AAV),BoardNextTo2(AAZ,AFL,AGK),BoardNextTo2(AFL,ACF,AAZ),ChangeLine(AGJ,AAV,ACF),ChangeLine(AAV,AEK,AGJ),ChangeLine(AEK,AGL,AAV),ChangeLine(AGL,ADZ,AEK),ChangeLine(ADZ,AFB,AGL),ChangeLine(AFB,ABE,ADZ),ChangeLine(ABE,ADP,AFB),ChangeLine(ADP,AEG,ABE),BoardNextTo2(AEG,ADF,AFL),ChangeLine(ADP,ABE,ADF),ChangeLine(ABE,AFB,ADP),ChangeLine(AFB,ADZ,ABE),ChangeLine(ADZ,AGL,AFB),ChangeLine(AGL,AEK,ADZ),BoardNextTo2(AEK,AAV,AEG),ChangeLine(AGL,ADZ,AAV),ChangeLine(ADZ,AFB,AGL),ChangeLine(AFB,ABE,ADZ),ChangeLine(ABE,ADP,AFB),ChangeLine(ADP,ADF,ABE),ChangeLine(ADF,ADB,ADP),BoardNextTo2(ADB,Z,AEK),ChangeLine(ADF,ADP,Z),ChangeLine(ADP,ABE,ADF),ChangeLine(ABE,AFB,ADP),ChangeLine(AFB,ADZ,ABE),ChangeLine(ADZ,AGL,AFB),ChangeLine(AGL,AAV,ADZ),ChangeLine(AAV,AGJ,AGL),ChangeLine(AGJ,ACF,AAV),ChangeLine(ACF,AAD,AGJ),ChangeLine(AAD,ADI,ACF),BoardNextTo1(ADI,ADB),ChangeToEmptyLine(AAD,ACF),ChangeLine(ACF,AGJ,AAD),ChangeLine(AGJ,AAV,ACF),ChangeLine(AAV,AGL,AGJ),BoardNextTo2(AGL,ADZ,ADI),ChangeLine(ADZ,AFB,AAV),ChangeLine(AFB,ABE,ADZ),ChangeLine(ABE,ADP,AFB),ChangeLine(ADP,ADF,ABE),ChangeLine(ADF,Z,ADP),ChangeLine(Z,J,ADF),ChangeLine(J,AAX,Z),ChangeLine(AAX,AAR,J),ChangeLine(AAR,AEJ,AAX),ChangeLine(AEJ,O,AAR),ChangeLine(O,AAL,AEJ),BoardNextTo2(AAL,AFV,AGL),ChangeLine(AFV,ABJ,O),ChangeLine(ABJ,ABT,AFV),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,AGM,ADX),ChangeLine(AGM,ABZ,ACN),ChangeLine(ABZ,S,AGM),BoardNextTo2(S,AFJ,AAL),ChangeLine(ABZ,AGM,AFJ),BoardNextTo2(AGM,ACN,S),ChangeLine(ABZ,AFJ,ACN),BoardNextTo2(AFJ,AFN,AGM),ChangeLine(ABZ,ACN,AFN),ChangeLine(ACN,ADX,ABZ),ChangeLine(ADX,ABO,ACN),ChangeLine(ABO,L,ADX),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),ChangeLine(ABT,ABJ,ACV),ChangeLine(ABJ,AFV,ABT),ChangeLine(AFV,O,ABJ),ChangeLine(O,AEJ,AFV),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,AAX,AEJ),ChangeLine(AAX,J,AAR),ChangeLine(J,Z,AAX),ChangeLine(Z,ADF,J),ChangeLine(ADF,ADP,Z),ChangeLine(ADP,ABE,ADF),ChangeLine(ABE,AFB,ADP),ChangeLine(AFB,ADZ,ABE),ChangeLine(ADZ,AAV,AFB),ChangeLine(AAV,AGJ,ADZ),ChangeLine(AGJ,ACF,AAV),BoardNextTo2(ACF,AAD,AFJ),ChangeLine(AGJ,AAV,AAD),ChangeLine(AAV,ADZ,AGJ),ChangeLine(ADZ,AFB,AAV),ChangeLine(AFB,ABE,ADZ),ChangeLine(ABE,ADP,AFB),ChangeLine(ADP,ADF,ABE),ChangeLine(ADF,Z,ADP),ChangeLine(Z,J,ADF),ChangeLine(J,AAX,Z),BoardNextTo2(AAX,AAR,ACF),ChangeLine(J,Z,AAR),ChangeLine(Z,ADF,J),ChangeLine(ADF,ADP,Z),ChangeLine(ADP,ABE,ADF),BoardNextTo2(ABE,AFB,AAX),BoardNextTo2(ADP,ADF,ABE),ChangeLine(ADF,Z,AFB),ChangeLine(Z,J,ADF),ChangeLine(J,AAR,Z),ChangeLine(AAR,AEJ,J),ChangeLine(AEJ,O,AAR),ChangeLine(O,AFV,AEJ),ChangeLine(AFV,ABJ,O),ChangeLine(ABJ,ABT,AFV),ChangeLine(ABT,ACV,ABJ),ChangeLine(ACV,L,ABT),ChangeLine(L,ABO,ACV),ChangeLine(ABO,ADX,L),ChangeLine(ADX,ACN,ABO),ChangeLine(ACN,ABZ,ADX),BoardNextTo2(ABZ,AFN,ADP),ChangeLine(ACN,ADX,AFN),BoardNextTo2(ADX,ABO,ABZ),ChangeLine(ABO,L,ACN),ChangeLine(L,ACV,ABO),ChangeLine(ACV,ABT,L),BoardNextTo2(ABT,ABJ,ADX),ChangeLine(ACV,L,ABJ),BoardNextTo2(L,ABO,ABT),ChangeLine(ACV,ABJ,ABO),ChangeLine(ABJ,AFV,ACV),ChangeLine(AFV,O,ABJ),ChangeLine(O,AEJ,AFV),ChangeLine(AEJ,AAR,O),ChangeLine(AAR,J,AEJ),ChangeLine(J,Z,AAR),ChangeLine(Z,ADF,J),ChangeLine(ADF,AFB,Z),ChangeLine(AFB,ADZ,ADF),ChangeLine(ADZ,AAV,AFB),ChangeLine(AAV,AGJ,ADZ),BoardNextTo2(AGJ,AAD,L),ChangeLine(AAV,ADZ,AAD),ChangeLine(ADZ,AFB,AAV),BoardNextTo2(AFB,ADF,AGJ),BoardNextTo2(ADZ,AAV,AFB),ChangeLine(ADF,Z,AAV),ChangeLine(Z,J,ADF),ChangeLine(J,AAR,Z),ChangeLine(AAR,AEJ,J),BoardNextTo2(AEJ,O,ADZ),BoardNextTo2(AAR,J,AEJ),ChangeLine(O,AFV,J),ChangeLine(AFV,ABJ,O),ChangeLine(ABJ,ACV,AFV),ChangeLine(ACV,ABO,ABJ),ChangeLine(ABO,ACN,ACV),BoardNextTo2(ACN,AFN,AAR),ChangeLine(ABO,ACV,AFN),ChangeLine(ACV,ABJ,ABO),ChangeLine(ABJ,AFV,ACV),ChangeLine(AFV,O,ABJ),ChangeLine(O,J,AFV),ChangeLine(J,Z,O),ChangeLine(Z,ADF,J),ChangeLine(ADF,AAV,Z),ChangeLine(AAV,AAD,ADF),BoardNextTo1(AAD,ACN),ChangeToEmptyLine(AAV,ADF),ChangeLine(ADF,Z,AAV),ChangeLine(Z,J,ADF),ChangeLine(J,O,Z),ChangeLine(O,AFV,J),ChangeLine(AFV,ABJ,O),ChangeLine(ABJ,ACV,AFV),BoardNextTo2(ACV,ABO,AAD),BoardNextTo2(ABO,AFN,ACV),ChangeLine(ABJ,AFV,AFN),ChangeLine(AFV,O,ABJ),ChangeLine(O,J,AFV),ChangeLine(J,Z,O),ChangeLine(Z,ADF,J),ChangeLine(ADF,AAV,Z),BoardNextTo1(AAV,ABO),ChangeToEmptyLine(ADF,Z),ChangeLine(Z,J,ADF),ChangeLine(J,O,Z),ChangeLine(O,AFV,J),ChangeLine(AFV,ABJ,O),ChangeLine(ABJ,AFN,AFV),BoardNextTo1(AFN,AAV),ChangeToEmptyLine(ABJ,AFV),BoardNextTo2(AFV,O,AFN),BoardNextTo1(ABJ,AFV),BoardNextTo2(O,J,ABJ),BoardNextTo2(J,Z,O),BoardNextTo2(Z,ADF,J),BoardNextTo1(ADF,Z)
Successfully written output file.
