[STACK] CHECK CONDITION: FirstFerry(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardFirst1(A)
[STACK] CHECK CONDITION: LastDock(A)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(B,A,null)
[STACK] CHECK CONDITION: NextToDock(A,B)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(C,B,null)
[STACK] CHECK CONDITION: NextToDock(B,C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(D,C,null)
[STACK] CHECK CONDITION: NextToDock(C,D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(E,D,null)
[STACK] CHECK CONDITION: NextToDock(D,E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(F,E,null)
[STACK] CHECK CONDITION: NextToDock(E,F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(G,F,null)
[STACK] CHECK CONDITION: NextToDock(F,G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(H,G,null)
[STACK] CHECK CONDITION: NextToDock(G,H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(I,H,null)
[STACK] CHECK CONDITION: NextToDock(H,I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(J,I,null)
[STACK] CHECK CONDITION: NextToDock(I,J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(K,J,null)
[STACK] CHECK CONDITION: NextToDock(J,K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(L,K,null)
[STACK] CHECK CONDITION: NextToDock(K,L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(M,L,null)
[STACK] CHECK CONDITION: NextToDock(L,M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(N,M,null)
[STACK] CHECK CONDITION: NextToDock(M,N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(O,N,null)
[STACK] CHECK CONDITION: NextToDock(N,O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(P,O,null)
[STACK] CHECK CONDITION: NextToDock(O,P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Q,P,null)
[STACK] CHECK CONDITION: NextToDock(P,Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(R,Q,null)
[STACK] CHECK CONDITION: NextToDock(Q,R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(S,R,null)
[STACK] CHECK CONDITION: NextToDock(R,S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(T,S,null)
[STACK] CHECK CONDITION: NextToDock(S,T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(U,T,null)
[STACK] CHECK CONDITION: NextToDock(T,U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(V,U,null)
[STACK] CHECK CONDITION: NextToDock(U,V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(W,V,null)
[STACK] CHECK CONDITION: NextToDock(V,W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(X,W,null)
[STACK] CHECK CONDITION: NextToDock(W,X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Y,X,null)
[STACK] CHECK CONDITION: NextToDock(X,Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(Z,Y,null)
[STACK] CHECK CONDITION: NextToDock(Y,Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAA,Z,null)
[STACK] CHECK CONDITION: NextToDock(Z,AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAB,AAA,null)
[STACK] CHECK CONDITION: NextToDock(AAA,AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAC,AAB,null)
[STACK] CHECK CONDITION: NextToDock(AAB,AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAD,AAC,null)
[STACK] CHECK CONDITION: NextToDock(AAC,AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAE,AAD,null)
[STACK] CHECK CONDITION: NextToDock(AAD,AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAF,AAE,null)
[STACK] CHECK CONDITION: NextToDock(AAE,AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAG,AAF,null)
[STACK] CHECK CONDITION: NextToDock(AAF,AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAH,AAG,null)
[STACK] CHECK CONDITION: NextToDock(AAG,AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAI,AAH,null)
[STACK] CHECK CONDITION: NextToDock(AAH,AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAJ,AAI,null)
[STACK] CHECK CONDITION: NextToDock(AAI,AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAK,AAJ,null)
[STACK] CHECK CONDITION: NextToDock(AAJ,AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAL,AAK,null)
[STACK] CHECK CONDITION: NextToDock(AAK,AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAM,AAL,null)
[STACK] CHECK CONDITION: NextToDock(AAL,AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAN,AAM,null)
[STACK] CHECK CONDITION: NextToDock(AAM,AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAO,AAN,null)
[STACK] CHECK CONDITION: NextToDock(AAN,AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAP,AAO,null)
[STACK] CHECK CONDITION: NextToDock(AAO,AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAQ,AAP,null)
[STACK] CHECK CONDITION: NextToDock(AAP,AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAR,AAQ,null)
[STACK] CHECK CONDITION: NextToDock(AAQ,AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAS,AAR,null)
[STACK] CHECK CONDITION: NextToDock(AAR,AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAT,AAS,null)
[STACK] CHECK CONDITION: NextToDock(AAS,AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAU,AAT,null)
[STACK] CHECK CONDITION: NextToDock(AAT,AAU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAV,AAU,null)
[STACK] CHECK CONDITION: NextToDock(AAU,AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAW,AAV,null)
[STACK] CHECK CONDITION: NextToDock(AAV,AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAX,AAW,null)
[STACK] CHECK CONDITION: NextToDock(AAW,AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAY,AAX,null)
[STACK] CHECK CONDITION: NextToDock(AAX,AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AAZ,AAY,null)
[STACK] CHECK CONDITION: NextToDock(AAY,AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABA,AAZ,null)
[STACK] CHECK CONDITION: NextToDock(AAZ,ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABB,ABA,null)
[STACK] CHECK CONDITION: NextToDock(ABA,ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABC,ABB,null)
[STACK] CHECK CONDITION: NextToDock(ABB,ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABD,ABC,null)
[STACK] CHECK CONDITION: NextToDock(ABC,ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABE,ABD,null)
[STACK] CHECK CONDITION: NextToDock(ABD,ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABF,ABE,null)
[STACK] CHECK CONDITION: NextToDock(ABE,ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABG,ABF,null)
[STACK] CHECK CONDITION: NextToDock(ABF,ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABH,ABG,null)
[STACK] CHECK CONDITION: NextToDock(ABG,ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABI,ABH,null)
[STACK] CHECK CONDITION: NextToDock(ABH,ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABJ,ABI,null)
[STACK] CHECK CONDITION: NextToDock(ABI,ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABK,ABJ,null)
[STACK] CHECK CONDITION: NextToDock(ABJ,ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABL,ABK,null)
[STACK] CHECK CONDITION: NextToDock(ABK,ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABM,ABL,null)
[STACK] CHECK CONDITION: NextToDock(ABL,ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABN,ABM,null)
[STACK] CHECK CONDITION: NextToDock(ABM,ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABO,ABN,null)
[STACK] CHECK CONDITION: NextToDock(ABN,ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABP,ABO,null)
[STACK] CHECK CONDITION: NextToDock(ABO,ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABQ,ABP,null)
[STACK] CHECK CONDITION: NextToDock(ABP,ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABR,ABQ,null)
[STACK] CHECK CONDITION: NextToDock(ABQ,ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABS,ABR,null)
[STACK] CHECK CONDITION: NextToDock(ABR,ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABT,ABS,null)
[STACK] CHECK CONDITION: NextToDock(ABS,ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABU,ABT,null)
[STACK] CHECK CONDITION: NextToDock(ABT,ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABV,ABU,null)
[STACK] CHECK CONDITION: NextToDock(ABU,ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABW,ABV,null)
[STACK] CHECK CONDITION: NextToDock(ABV,ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABX,ABW,null)
[STACK] CHECK CONDITION: NextToDock(ABW,ABX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABY,ABX,null)
[STACK] CHECK CONDITION: NextToDock(ABX,ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ABZ,ABY,null)
[STACK] CHECK CONDITION: NextToDock(ABY,ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACA,ABZ,null)
[STACK] CHECK CONDITION: NextToDock(ABZ,ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACB,ACA,null)
[STACK] CHECK CONDITION: NextToDock(ACA,ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACC,ACB,null)
[STACK] CHECK CONDITION: NextToDock(ACB,ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACD,ACC,null)
[STACK] CHECK CONDITION: NextToDock(ACC,ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACE,ACD,null)
[STACK] CHECK CONDITION: NextToDock(ACD,ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACF,ACE,null)
[STACK] CHECK CONDITION: NextToDock(ACE,ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACG,ACF,null)
[STACK] CHECK CONDITION: NextToDock(ACF,ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACH,ACG,null)
[STACK] CHECK CONDITION: NextToDock(ACG,ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACI,ACH,null)
[STACK] CHECK CONDITION: NextToDock(ACH,ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACJ,ACI,null)
[STACK] CHECK CONDITION: NextToDock(ACI,ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACK,ACJ,null)
[STACK] CHECK CONDITION: NextToDock(ACJ,ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACL,ACK,null)
[STACK] CHECK CONDITION: NextToDock(ACK,ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACM,ACL,null)
[STACK] CHECK CONDITION: NextToDock(ACL,ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACN,ACM,null)
[STACK] CHECK CONDITION: NextToDock(ACM,ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACO,ACN,null)
[STACK] CHECK CONDITION: NextToDock(ACN,ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACP,ACO,null)
[STACK] CHECK CONDITION: NextToDock(ACO,ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACQ,ACP,null)
[STACK] CHECK CONDITION: NextToDock(ACP,ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACR,ACQ,null)
[STACK] CHECK CONDITION: NextToDock(ACQ,ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACS,ACR,null)
[STACK] CHECK CONDITION: NextToDock(ACR,ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACT,ACS,null)
[STACK] CHECK CONDITION: NextToDock(ACS,ACT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACU,ACT,null)
[STACK] CHECK CONDITION: NextToDock(ACT,ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACV,ACU,null)
[STACK] CHECK CONDITION: NextToDock(ACU,ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACW,ACV,null)
[STACK] CHECK CONDITION: NextToDock(ACV,ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACX,ACW,null)
[STACK] CHECK CONDITION: NextToDock(ACW,ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACY,ACX,null)
[STACK] CHECK CONDITION: NextToDock(ACX,ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ACZ,ACY,null)
[STACK] CHECK CONDITION: NextToDock(ACY,ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADA,ACZ,null)
[STACK] CHECK CONDITION: NextToDock(ACZ,ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADB,ADA,null)
[STACK] CHECK CONDITION: NextToDock(ADA,ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADC,ADB,null)
[STACK] CHECK CONDITION: NextToDock(ADB,ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADD,ADC,null)
[STACK] CHECK CONDITION: NextToDock(ADC,ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADE,ADD,null)
[STACK] CHECK CONDITION: NextToDock(ADD,ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADF,ADE,null)
[STACK] CHECK CONDITION: NextToDock(ADE,ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADG,ADF,null)
[STACK] CHECK CONDITION: NextToDock(ADF,ADG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADH,ADG,null)
[STACK] CHECK CONDITION: NextToDock(ADG,ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADI,ADH,null)
[STACK] CHECK CONDITION: NextToDock(ADH,ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADJ,ADI,null)
[STACK] CHECK CONDITION: NextToDock(ADI,ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADK,ADJ,null)
[STACK] CHECK CONDITION: NextToDock(ADJ,ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADL,ADK,null)
[STACK] CHECK CONDITION: NextToDock(ADK,ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADM,ADL,null)
[STACK] CHECK CONDITION: NextToDock(ADL,ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADN,ADM,null)
[STACK] CHECK CONDITION: NextToDock(ADM,ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADO,ADN,null)
[STACK] CHECK CONDITION: NextToDock(ADN,ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADP,ADO,null)
[STACK] CHECK CONDITION: NextToDock(ADO,ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADQ,ADP,null)
[STACK] CHECK CONDITION: NextToDock(ADP,ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADR,ADQ,null)
[STACK] CHECK CONDITION: NextToDock(ADQ,ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADS,ADR,null)
[STACK] CHECK CONDITION: NextToDock(ADR,ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADT,ADS,null)
[STACK] CHECK CONDITION: NextToDock(ADS,ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADU,ADT,null)
[STACK] CHECK CONDITION: NextToDock(ADT,ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADV,ADU,null)
[STACK] CHECK CONDITION: NextToDock(ADU,ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADW,ADV,null)
[STACK] CHECK CONDITION: NextToDock(ADV,ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADX,ADW,null)
[STACK] CHECK CONDITION: NextToDock(ADW,ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADY,ADX,null)
[STACK] CHECK CONDITION: NextToDock(ADX,ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ADZ,ADY,null)
[STACK] CHECK CONDITION: NextToDock(ADY,ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEA,ADZ,null)
[STACK] CHECK CONDITION: NextToDock(ADZ,AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEB,AEA,null)
[STACK] CHECK CONDITION: NextToDock(AEA,AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEC,AEB,null)
[STACK] CHECK CONDITION: NextToDock(AEB,AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AED,AEC,null)
[STACK] CHECK CONDITION: NextToDock(AEC,AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEE,AED,null)
[STACK] CHECK CONDITION: NextToDock(AED,AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEF,AEE,null)
[STACK] CHECK CONDITION: NextToDock(AEE,AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEG,AEF,null)
[STACK] CHECK CONDITION: NextToDock(AEF,AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEH,AEG,null)
[STACK] CHECK CONDITION: NextToDock(AEG,AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEI,AEH,null)
[STACK] CHECK CONDITION: NextToDock(AEH,AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEJ,AEI,null)
[STACK] CHECK CONDITION: NextToDock(AEI,AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEK,AEJ,null)
[STACK] CHECK CONDITION: NextToDock(AEJ,AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEL,AEK,null)
[STACK] CHECK CONDITION: NextToDock(AEK,AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEM,AEL,null)
[STACK] CHECK CONDITION: NextToDock(AEL,AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEN,AEM,null)
[STACK] CHECK CONDITION: NextToDock(AEM,AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEO,AEN,null)
[STACK] CHECK CONDITION: NextToDock(AEN,AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEP,AEO,null)
[STACK] CHECK CONDITION: NextToDock(AEO,AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEQ,AEP,null)
[STACK] CHECK CONDITION: NextToDock(AEP,AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AER,AEQ,null)
[STACK] CHECK CONDITION: NextToDock(AEQ,AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AES,AER,null)
[STACK] CHECK CONDITION: NextToDock(AER,AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AET,AES,null)
[STACK] CHECK CONDITION: NextToDock(AES,AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEU,AET,null)
[STACK] CHECK CONDITION: NextToDock(AET,AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEV,AEU,null)
[STACK] CHECK CONDITION: NextToDock(AEU,AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEW,AEV,null)
[STACK] CHECK CONDITION: NextToDock(AEV,AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEX,AEW,null)
[STACK] CHECK CONDITION: NextToDock(AEW,AEX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEY,AEX,null)
[STACK] CHECK CONDITION: NextToDock(AEX,AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AEZ,AEY,null)
[STACK] CHECK CONDITION: NextToDock(AEY,AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFA,AEZ,null)
[STACK] CHECK CONDITION: NextToDock(AEZ,AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFB,AFA,null)
[STACK] CHECK CONDITION: NextToDock(AFA,AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFC,AFB,null)
[STACK] CHECK CONDITION: NextToDock(AFB,AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFD,AFC,null)
[STACK] CHECK CONDITION: NextToDock(AFC,AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFE,AFD,null)
[STACK] CHECK CONDITION: NextToDock(AFD,AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFF,AFE,null)
[STACK] CHECK CONDITION: NextToDock(AFE,AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFG,AFF,null)
[STACK] CHECK CONDITION: NextToDock(AFF,AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFH,AFG,null)
[STACK] CHECK CONDITION: NextToDock(AFG,AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFI,AFH,null)
[STACK] CHECK CONDITION: NextToDock(AFH,AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFJ,AFI,null)
[STACK] CHECK CONDITION: NextToDock(AFI,AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFK,AFJ,null)
[STACK] CHECK CONDITION: NextToDock(AFJ,AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFL,AFK,null)
[STACK] CHECK CONDITION: NextToDock(AFK,AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFM,AFL,null)
[STACK] CHECK CONDITION: NextToDock(AFL,AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFN,AFM,null)
[STACK] CHECK CONDITION: NextToDock(AFM,AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFO,AFN,null)
[STACK] CHECK CONDITION: NextToDock(AFN,AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFP,AFO,null)
[STACK] CHECK CONDITION: NextToDock(AFO,AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFQ,AFP,null)
[STACK] CHECK CONDITION: NextToDock(AFP,AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFR,AFQ,null)
[STACK] CHECK CONDITION: NextToDock(AFQ,AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFS,AFR,null)
[STACK] CHECK CONDITION: NextToDock(AFR,AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFT,AFS,null)
[STACK] CHECK CONDITION: NextToDock(AFS,AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFU,AFT,null)
[STACK] CHECK CONDITION: NextToDock(AFT,AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFV,AFU,null)
[STACK] CHECK CONDITION: NextToDock(AFU,AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFW,AFV,null)
[STACK] CHECK CONDITION: NextToDock(AFV,AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFX,AFW,null)
[STACK] CHECK CONDITION: NextToDock(AFW,AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFY,AFX,null)
[STACK] CHECK CONDITION: NextToDock(AFX,AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AFZ,AFY,null)
[STACK] CHECK CONDITION: NextToDock(AFY,AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGA,AFZ,null)
[STACK] CHECK CONDITION: NextToDock(AFZ,AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGB,AGA,null)
[STACK] CHECK CONDITION: NextToDock(AGA,AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGC,AGB,null)
[STACK] CHECK CONDITION: NextToDock(AGB,AGC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGD,AGC,null)
[STACK] CHECK CONDITION: NextToDock(AGC,AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGE,AGD,null)
[STACK] CHECK CONDITION: NextToDock(AGD,AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGF,AGE,null)
[STACK] CHECK CONDITION: NextToDock(AGE,AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGG,AGF,null)
[STACK] CHECK CONDITION: NextToDock(AGF,AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGH,AGG,null)
[STACK] CHECK CONDITION: NextToDock(AGG,AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGI,AGH,null)
[STACK] CHECK CONDITION: NextToDock(AGH,AGI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGJ,AGI,null)
[STACK] CHECK CONDITION: NextToDock(AGI,AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGK,AGJ,null)
[STACK] CHECK CONDITION: NextToDock(AGJ,AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGL,AGK,null)
[STACK] CHECK CONDITION: NextToDock(AGK,AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGM,AGL,null)
[STACK] CHECK CONDITION: NextToDock(AGL,AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGN,AGM,null)
[STACK] CHECK CONDITION: NextToDock(AGM,AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGO,AGN,null)
[STACK] CHECK CONDITION: NextToDock(AGN,AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGP,AGO,null)
[STACK] CHECK CONDITION: NextToDock(AGO,AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGQ,AGP,null)
[STACK] CHECK CONDITION: NextToDock(AGP,AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGR,AGQ,null)
[STACK] CHECK CONDITION: NextToDock(AGQ,AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGS,AGR,null)
[STACK] CHECK CONDITION: NextToDock(AGR,AGS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGT,AGS,null)
[STACK] CHECK CONDITION: NextToDock(AGS,AGT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGU,AGT,null)
[STACK] CHECK CONDITION: NextToDock(AGT,AGU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGV,AGU,null)
[STACK] CHECK CONDITION: NextToDock(AGU,AGV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGW,AGV,null)
[STACK] CHECK CONDITION: NextToDock(AGV,AGW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGX,AGW,null)
[STACK] CHECK CONDITION: NextToDock(AGW,AGX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGY,AGX,null)
[STACK] CHECK CONDITION: NextToDock(AGX,AGY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AGZ,AGY,null)
[STACK] CHECK CONDITION: NextToDock(AGY,AGZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHA,AGZ,null)
[STACK] CHECK CONDITION: NextToDock(AGZ,AHA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHB,AHA,null)
[STACK] CHECK CONDITION: NextToDock(AHA,AHB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHC,AHB,null)
[STACK] CHECK CONDITION: NextToDock(AHB,AHC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHD,AHC,null)
[STACK] CHECK CONDITION: NextToDock(AHC,AHD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHE,AHD,null)
[STACK] CHECK CONDITION: NextToDock(AHD,AHE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHF,AHE,null)
[STACK] CHECK CONDITION: NextToDock(AHE,AHF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHG,AHF,null)
[STACK] CHECK CONDITION: NextToDock(AHF,AHG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHH,AHG,null)
[STACK] CHECK CONDITION: NextToDock(AHG,AHH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHI,AHH,null)
[STACK] CHECK CONDITION: NextToDock(AHH,AHI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHJ,AHI,null)
[STACK] CHECK CONDITION: NextToDock(AHI,AHJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHK,AHJ,null)
[STACK] CHECK CONDITION: NextToDock(AHJ,AHK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHL,AHK,null)
[STACK] CHECK CONDITION: NextToDock(AHK,AHL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHM,AHL,null)
[STACK] CHECK CONDITION: NextToDock(AHL,AHM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHN,AHM,null)
[STACK] CHECK CONDITION: NextToDock(AHM,AHN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHO,AHN,null)
[STACK] CHECK CONDITION: NextToDock(AHN,AHO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHP,AHO,null)
[STACK] CHECK CONDITION: NextToDock(AHO,AHP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHQ,AHP,null)
[STACK] CHECK CONDITION: NextToDock(AHP,AHQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHR,AHQ,null)
[STACK] CHECK CONDITION: NextToDock(AHQ,AHR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHS,AHR,null)
[STACK] CHECK CONDITION: NextToDock(AHR,AHS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHT,AHS,null)
[STACK] CHECK CONDITION: NextToDock(AHS,AHT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHU,AHT,null)
[STACK] CHECK CONDITION: NextToDock(AHT,AHU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHV,AHU,null)
[STACK] CHECK CONDITION: NextToDock(AHU,AHV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHW,AHV,null)
[STACK] CHECK CONDITION: NextToDock(AHV,AHW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHX,AHW,null)
[STACK] CHECK CONDITION: NextToDock(AHW,AHX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHY,AHX,null)
[STACK] CHECK CONDITION: NextToDock(AHX,AHY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AHZ,AHY,null)
[STACK] CHECK CONDITION: NextToDock(AHY,AHZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIA,AHZ,null)
[STACK] CHECK CONDITION: NextToDock(AHZ,AIA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIB,AIA,null)
[STACK] CHECK CONDITION: NextToDock(AIA,AIB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIC,AIB,null)
[STACK] CHECK CONDITION: NextToDock(AIB,AIC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AID,AIC,null)
[STACK] CHECK CONDITION: NextToDock(AIC,AID)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AID)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIE,AID,null)
[STACK] CHECK CONDITION: NextToDock(AID,AIE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIF,AIE,null)
[STACK] CHECK CONDITION: NextToDock(AIE,AIF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIG,AIF,null)
[STACK] CHECK CONDITION: NextToDock(AIF,AIG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIH,AIG,null)
[STACK] CHECK CONDITION: NextToDock(AIG,AIH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AII,AIH,null)
[STACK] CHECK CONDITION: NextToDock(AIH,AII)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AII)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIJ,AII,null)
[STACK] CHECK CONDITION: NextToDock(AII,AIJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIK,AIJ,null)
[STACK] CHECK CONDITION: NextToDock(AIJ,AIK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIL,AIK,null)
[STACK] CHECK CONDITION: NextToDock(AIK,AIL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIM,AIL,null)
[STACK] CHECK CONDITION: NextToDock(AIL,AIM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIN,AIM,null)
[STACK] CHECK CONDITION: NextToDock(AIM,AIN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIO,AIN,null)
[STACK] CHECK CONDITION: NextToDock(AIN,AIO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIP,AIO,null)
[STACK] CHECK CONDITION: NextToDock(AIO,AIP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIQ,AIP,null)
[STACK] CHECK CONDITION: NextToDock(AIP,AIQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIR,AIQ,null)
[STACK] CHECK CONDITION: NextToDock(AIQ,AIR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIS,AIR,null)
[STACK] CHECK CONDITION: NextToDock(AIR,AIS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIT,AIS,null)
[STACK] CHECK CONDITION: NextToDock(AIS,AIT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIU,AIT,null)
[STACK] CHECK CONDITION: NextToDock(AIT,AIU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIV,AIU,null)
[STACK] CHECK CONDITION: NextToDock(AIU,AIV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIW,AIV,null)
[STACK] CHECK CONDITION: NextToDock(AIV,AIW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIX,AIW,null)
[STACK] CHECK CONDITION: NextToDock(AIW,AIX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIY,AIX,null)
[STACK] CHECK CONDITION: NextToDock(AIX,AIY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AIZ,AIY,null)
[STACK] CHECK CONDITION: NextToDock(AIY,AIZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJA,AIZ,null)
[STACK] CHECK CONDITION: NextToDock(AIZ,AJA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJB,AJA,null)
[STACK] CHECK CONDITION: NextToDock(AJA,AJB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJC,AJB,null)
[STACK] CHECK CONDITION: NextToDock(AJB,AJC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJD,AJC,null)
[STACK] CHECK CONDITION: NextToDock(AJC,AJD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJE,AJD,null)
[STACK] CHECK CONDITION: NextToDock(AJD,AJE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJF,AJE,null)
[STACK] CHECK CONDITION: NextToDock(AJE,AJF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJG,AJF,null)
[STACK] CHECK CONDITION: NextToDock(AJF,AJG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJH,AJG,null)
[STACK] CHECK CONDITION: NextToDock(AJG,AJH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJI,AJH,null)
[STACK] CHECK CONDITION: NextToDock(AJH,AJI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJJ,AJI,null)
[STACK] CHECK CONDITION: NextToDock(AJI,AJJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJK,AJJ,null)
[STACK] CHECK CONDITION: NextToDock(AJJ,AJK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJL,AJK,null)
[STACK] CHECK CONDITION: NextToDock(AJK,AJL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJM,AJL,null)
[STACK] CHECK CONDITION: NextToDock(AJL,AJM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJN,AJM,null)
[STACK] CHECK CONDITION: NextToDock(AJM,AJN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJO,AJN,null)
[STACK] CHECK CONDITION: NextToDock(AJN,AJO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJP,AJO,null)
[STACK] CHECK CONDITION: NextToDock(AJO,AJP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJQ,AJP,null)
[STACK] CHECK CONDITION: NextToDock(AJP,AJQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJR,AJQ,null)
[STACK] CHECK CONDITION: NextToDock(AJQ,AJR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJS,AJR,null)
[STACK] CHECK CONDITION: NextToDock(AJR,AJS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJT,AJS,null)
[STACK] CHECK CONDITION: NextToDock(AJS,AJT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJU,AJT,null)
[STACK] CHECK CONDITION: NextToDock(AJT,AJU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJV,AJU,null)
[STACK] CHECK CONDITION: NextToDock(AJU,AJV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJW,AJV,null)
[STACK] CHECK CONDITION: NextToDock(AJV,AJW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJX,AJW,null)
[STACK] CHECK CONDITION: NextToDock(AJW,AJX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJY,AJX,null)
[STACK] CHECK CONDITION: NextToDock(AJX,AJY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AJZ,AJY,null)
[STACK] CHECK CONDITION: NextToDock(AJY,AJZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKA,AJZ,null)
[STACK] CHECK CONDITION: NextToDock(AJZ,AKA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKB,AKA,null)
[STACK] CHECK CONDITION: NextToDock(AKA,AKB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKC,AKB,null)
[STACK] CHECK CONDITION: NextToDock(AKB,AKC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKD,AKC,null)
[STACK] CHECK CONDITION: NextToDock(AKC,AKD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKE,AKD,null)
[STACK] CHECK CONDITION: NextToDock(AKD,AKE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKF,AKE,null)
[STACK] CHECK CONDITION: NextToDock(AKE,AKF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKG,AKF,null)
[STACK] CHECK CONDITION: NextToDock(AKF,AKG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKH,AKG,null)
[STACK] CHECK CONDITION: NextToDock(AKG,AKH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKI,AKH,null)
[STACK] CHECK CONDITION: NextToDock(AKH,AKI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKJ,AKI,null)
[STACK] CHECK CONDITION: NextToDock(AKI,AKJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKK,AKJ,null)
[STACK] CHECK CONDITION: NextToDock(AKJ,AKK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKL,AKK,null)
[STACK] CHECK CONDITION: NextToDock(AKK,AKL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKM,AKL,null)
[STACK] CHECK CONDITION: NextToDock(AKL,AKM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKN,AKM,null)
[STACK] CHECK CONDITION: NextToDock(AKM,AKN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKO,AKN,null)
[STACK] CHECK CONDITION: NextToDock(AKN,AKO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKP,AKO,null)
[STACK] CHECK CONDITION: NextToDock(AKO,AKP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKQ,AKP,null)
[STACK] CHECK CONDITION: NextToDock(AKP,AKQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKR,AKQ,null)
[STACK] CHECK CONDITION: NextToDock(AKQ,AKR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKS,AKR,null)
[STACK] CHECK CONDITION: NextToDock(AKR,AKS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKT,AKS,null)
[STACK] CHECK CONDITION: NextToDock(AKS,AKT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKU,AKT,null)
[STACK] CHECK CONDITION: NextToDock(AKT,AKU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKV,AKU,null)
[STACK] CHECK CONDITION: NextToDock(AKU,AKV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKW,AKV,null)
[STACK] CHECK CONDITION: NextToDock(AKV,AKW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKX,AKW,null)
[STACK] CHECK CONDITION: NextToDock(AKW,AKX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKY,AKX,null)
[STACK] CHECK CONDITION: NextToDock(AKX,AKY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AKZ,AKY,null)
[STACK] CHECK CONDITION: NextToDock(AKY,AKZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALA,AKZ,null)
[STACK] CHECK CONDITION: NextToDock(AKZ,ALA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALB,ALA,null)
[STACK] CHECK CONDITION: NextToDock(ALA,ALB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALC,ALB,null)
[STACK] CHECK CONDITION: NextToDock(ALB,ALC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALD,ALC,null)
[STACK] CHECK CONDITION: NextToDock(ALC,ALD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALE,ALD,null)
[STACK] CHECK CONDITION: NextToDock(ALD,ALE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALF,ALE,null)
[STACK] CHECK CONDITION: NextToDock(ALE,ALF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALG,ALF,null)
[STACK] CHECK CONDITION: NextToDock(ALF,ALG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALH,ALG,null)
[STACK] CHECK CONDITION: NextToDock(ALG,ALH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALI,ALH,null)
[STACK] CHECK CONDITION: NextToDock(ALH,ALI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALJ,ALI,null)
[STACK] CHECK CONDITION: NextToDock(ALI,ALJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALK,ALJ,null)
[STACK] CHECK CONDITION: NextToDock(ALJ,ALK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALL,ALK,null)
[STACK] CHECK CONDITION: NextToDock(ALK,ALL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALM,ALL,null)
[STACK] CHECK CONDITION: NextToDock(ALL,ALM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALN,ALM,null)
[STACK] CHECK CONDITION: NextToDock(ALM,ALN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALO,ALN,null)
[STACK] CHECK CONDITION: NextToDock(ALN,ALO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALP,ALO,null)
[STACK] CHECK CONDITION: NextToDock(ALO,ALP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALQ,ALP,null)
[STACK] CHECK CONDITION: NextToDock(ALP,ALQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALR,ALQ,null)
[STACK] CHECK CONDITION: NextToDock(ALQ,ALR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALS,ALR,null)
[STACK] CHECK CONDITION: NextToDock(ALR,ALS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALT,ALS,null)
[STACK] CHECK CONDITION: NextToDock(ALS,ALT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALU,ALT,null)
[STACK] CHECK CONDITION: NextToDock(ALT,ALU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALV,ALU,null)
[STACK] CHECK CONDITION: NextToDock(ALU,ALV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALW,ALV,null)
[STACK] CHECK CONDITION: NextToDock(ALV,ALW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALX,ALW,null)
[STACK] CHECK CONDITION: NextToDock(ALW,ALX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALY,ALX,null)
[STACK] CHECK CONDITION: NextToDock(ALX,ALY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ALZ,ALY,null)
[STACK] CHECK CONDITION: NextToDock(ALY,ALZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMA,ALZ,null)
[STACK] CHECK CONDITION: NextToDock(ALZ,AMA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMB,AMA,null)
[STACK] CHECK CONDITION: NextToDock(AMA,AMB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMC,AMB,null)
[STACK] CHECK CONDITION: NextToDock(AMB,AMC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMD,AMC,null)
[STACK] CHECK CONDITION: NextToDock(AMC,AMD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AME,AMD,null)
[STACK] CHECK CONDITION: NextToDock(AMD,AME)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AME)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMF,AME,null)
[STACK] CHECK CONDITION: NextToDock(AME,AMF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMG,AMF,null)
[STACK] CHECK CONDITION: NextToDock(AMF,AMG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMH,AMG,null)
[STACK] CHECK CONDITION: NextToDock(AMG,AMH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMI,AMH,null)
[STACK] CHECK CONDITION: NextToDock(AMH,AMI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMJ,AMI,null)
[STACK] CHECK CONDITION: NextToDock(AMI,AMJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMK,AMJ,null)
[STACK] CHECK CONDITION: NextToDock(AMJ,AMK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AML,AMK,null)
[STACK] CHECK CONDITION: NextToDock(AMK,AML)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AML)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMM,AML,null)
[STACK] CHECK CONDITION: NextToDock(AML,AMM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMN,AMM,null)
[STACK] CHECK CONDITION: NextToDock(AMM,AMN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMO,AMN,null)
[STACK] CHECK CONDITION: NextToDock(AMN,AMO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMP,AMO,null)
[STACK] CHECK CONDITION: NextToDock(AMO,AMP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMQ,AMP,null)
[STACK] CHECK CONDITION: NextToDock(AMP,AMQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMR,AMQ,null)
[STACK] CHECK CONDITION: NextToDock(AMQ,AMR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMS,AMR,null)
[STACK] CHECK CONDITION: NextToDock(AMR,AMS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMT,AMS,null)
[STACK] CHECK CONDITION: NextToDock(AMS,AMT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMU,AMT,null)
[STACK] CHECK CONDITION: NextToDock(AMT,AMU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMV,AMU,null)
[STACK] CHECK CONDITION: NextToDock(AMU,AMV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMW,AMV,null)
[STACK] CHECK CONDITION: NextToDock(AMV,AMW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMX,AMW,null)
[STACK] CHECK CONDITION: NextToDock(AMW,AMX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMY,AMX,null)
[STACK] CHECK CONDITION: NextToDock(AMX,AMY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AMZ,AMY,null)
[STACK] CHECK CONDITION: NextToDock(AMY,AMZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANA,AMZ,null)
[STACK] CHECK CONDITION: NextToDock(AMZ,ANA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANB,ANA,null)
[STACK] CHECK CONDITION: NextToDock(ANA,ANB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANC,ANB,null)
[STACK] CHECK CONDITION: NextToDock(ANB,ANC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AND,ANC,null)
[STACK] CHECK CONDITION: NextToDock(ANC,AND)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AND)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANE,AND,null)
[STACK] CHECK CONDITION: NextToDock(AND,ANE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANF,ANE,null)
[STACK] CHECK CONDITION: NextToDock(ANE,ANF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANG,ANF,null)
[STACK] CHECK CONDITION: NextToDock(ANF,ANG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANH,ANG,null)
[STACK] CHECK CONDITION: NextToDock(ANG,ANH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANI,ANH,null)
[STACK] CHECK CONDITION: NextToDock(ANH,ANI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANJ,ANI,null)
[STACK] CHECK CONDITION: NextToDock(ANI,ANJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANK,ANJ,null)
[STACK] CHECK CONDITION: NextToDock(ANJ,ANK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANL,ANK,null)
[STACK] CHECK CONDITION: NextToDock(ANK,ANL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANM,ANL,null)
[STACK] CHECK CONDITION: NextToDock(ANL,ANM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANN,ANM,null)
[STACK] CHECK CONDITION: NextToDock(ANM,ANN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANO,ANN,null)
[STACK] CHECK CONDITION: NextToDock(ANN,ANO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANP,ANO,null)
[STACK] CHECK CONDITION: NextToDock(ANO,ANP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANQ,ANP,null)
[STACK] CHECK CONDITION: NextToDock(ANP,ANQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANR,ANQ,null)
[STACK] CHECK CONDITION: NextToDock(ANQ,ANR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANS,ANR,null)
[STACK] CHECK CONDITION: NextToDock(ANR,ANS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANT,ANS,null)
[STACK] CHECK CONDITION: NextToDock(ANS,ANT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANU,ANT,null)
[STACK] CHECK CONDITION: NextToDock(ANT,ANU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANV,ANU,null)
[STACK] CHECK CONDITION: NextToDock(ANU,ANV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANW,ANV,null)
[STACK] CHECK CONDITION: NextToDock(ANV,ANW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANX,ANW,null)
[STACK] CHECK CONDITION: NextToDock(ANW,ANX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANY,ANX,null)
[STACK] CHECK CONDITION: NextToDock(ANX,ANY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ANZ,ANY,null)
[STACK] CHECK CONDITION: NextToDock(ANY,ANZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOA,ANZ,null)
[STACK] CHECK CONDITION: NextToDock(ANZ,AOA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOB,AOA,null)
[STACK] CHECK CONDITION: NextToDock(AOA,AOB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOC,AOB,null)
[STACK] CHECK CONDITION: NextToDock(AOB,AOC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOD,AOC,null)
[STACK] CHECK CONDITION: NextToDock(AOC,AOD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOE,AOD,null)
[STACK] CHECK CONDITION: NextToDock(AOD,AOE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOF,AOE,null)
[STACK] CHECK CONDITION: NextToDock(AOE,AOF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOG,AOF,null)
[STACK] CHECK CONDITION: NextToDock(AOF,AOG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOH,AOG,null)
[STACK] CHECK CONDITION: NextToDock(AOG,AOH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOI,AOH,null)
[STACK] CHECK CONDITION: NextToDock(AOH,AOI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOJ,AOI,null)
[STACK] CHECK CONDITION: NextToDock(AOI,AOJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOK,AOJ,null)
[STACK] CHECK CONDITION: NextToDock(AOJ,AOK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOL,AOK,null)
[STACK] CHECK CONDITION: NextToDock(AOK,AOL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOM,AOL,null)
[STACK] CHECK CONDITION: NextToDock(AOL,AOM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AON,AOM,null)
[STACK] CHECK CONDITION: NextToDock(AOM,AON)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AON)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOO,AON,null)
[STACK] CHECK CONDITION: NextToDock(AON,AOO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOP,AOO,null)
[STACK] CHECK CONDITION: NextToDock(AOO,AOP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOQ,AOP,null)
[STACK] CHECK CONDITION: NextToDock(AOP,AOQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOR,AOQ,null)
[STACK] CHECK CONDITION: NextToDock(AOQ,AOR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOS,AOR,null)
[STACK] CHECK CONDITION: NextToDock(AOR,AOS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOT,AOS,null)
[STACK] CHECK CONDITION: NextToDock(AOS,AOT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOU,AOT,null)
[STACK] CHECK CONDITION: NextToDock(AOT,AOU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOV,AOU,null)
[STACK] CHECK CONDITION: NextToDock(AOU,AOV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOW,AOV,null)
[STACK] CHECK CONDITION: NextToDock(AOV,AOW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOX,AOW,null)
[STACK] CHECK CONDITION: NextToDock(AOW,AOX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOY,AOX,null)
[STACK] CHECK CONDITION: NextToDock(AOX,AOY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AOZ,AOY,null)
[STACK] CHECK CONDITION: NextToDock(AOY,AOZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APA,AOZ,null)
[STACK] CHECK CONDITION: NextToDock(AOZ,APA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APB,APA,null)
[STACK] CHECK CONDITION: NextToDock(APA,APB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APC,APB,null)
[STACK] CHECK CONDITION: NextToDock(APB,APC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APD,APC,null)
[STACK] CHECK CONDITION: NextToDock(APC,APD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APE,APD,null)
[STACK] CHECK CONDITION: NextToDock(APD,APE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APF,APE,null)
[STACK] CHECK CONDITION: NextToDock(APE,APF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APG,APF,null)
[STACK] CHECK CONDITION: NextToDock(APF,APG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APH,APG,null)
[STACK] CHECK CONDITION: NextToDock(APG,APH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(API,APH,null)
[STACK] CHECK CONDITION: NextToDock(APH,API)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(API)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APJ,API,null)
[STACK] CHECK CONDITION: NextToDock(API,APJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APK,APJ,null)
[STACK] CHECK CONDITION: NextToDock(APJ,APK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APL,APK,null)
[STACK] CHECK CONDITION: NextToDock(APK,APL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APM,APL,null)
[STACK] CHECK CONDITION: NextToDock(APL,APM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APN,APM,null)
[STACK] CHECK CONDITION: NextToDock(APM,APN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APO,APN,null)
[STACK] CHECK CONDITION: NextToDock(APN,APO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APP,APO,null)
[STACK] CHECK CONDITION: NextToDock(APO,APP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APQ,APP,null)
[STACK] CHECK CONDITION: NextToDock(APP,APQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APR,APQ,null)
[STACK] CHECK CONDITION: NextToDock(APQ,APR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APS,APR,null)
[STACK] CHECK CONDITION: NextToDock(APR,APS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APT,APS,null)
[STACK] CHECK CONDITION: NextToDock(APS,APT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APU,APT,null)
[STACK] CHECK CONDITION: NextToDock(APT,APU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APV,APU,null)
[STACK] CHECK CONDITION: NextToDock(APU,APV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APW,APV,null)
[STACK] CHECK CONDITION: NextToDock(APV,APW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APX,APW,null)
[STACK] CHECK CONDITION: NextToDock(APW,APX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APY,APX,null)
[STACK] CHECK CONDITION: NextToDock(APX,APY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(APZ,APY,null)
[STACK] CHECK CONDITION: NextToDock(APY,APZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQA,APZ,null)
[STACK] CHECK CONDITION: NextToDock(APZ,AQA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQB,AQA,null)
[STACK] CHECK CONDITION: NextToDock(AQA,AQB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQC,AQB,null)
[STACK] CHECK CONDITION: NextToDock(AQB,AQC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQD,AQC,null)
[STACK] CHECK CONDITION: NextToDock(AQC,AQD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQE,AQD,null)
[STACK] CHECK CONDITION: NextToDock(AQD,AQE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQF,AQE,null)
[STACK] CHECK CONDITION: NextToDock(AQE,AQF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQG,AQF,null)
[STACK] CHECK CONDITION: NextToDock(AQF,AQG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQH,AQG,null)
[STACK] CHECK CONDITION: NextToDock(AQG,AQH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQI,AQH,null)
[STACK] CHECK CONDITION: NextToDock(AQH,AQI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQJ,AQI,null)
[STACK] CHECK CONDITION: NextToDock(AQI,AQJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQK,AQJ,null)
[STACK] CHECK CONDITION: NextToDock(AQJ,AQK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQL,AQK,null)
[STACK] CHECK CONDITION: NextToDock(AQK,AQL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQM,AQL,null)
[STACK] CHECK CONDITION: NextToDock(AQL,AQM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQN,AQM,null)
[STACK] CHECK CONDITION: NextToDock(AQM,AQN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQO,AQN,null)
[STACK] CHECK CONDITION: NextToDock(AQN,AQO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQP,AQO,null)
[STACK] CHECK CONDITION: NextToDock(AQO,AQP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQQ,AQP,null)
[STACK] CHECK CONDITION: NextToDock(AQP,AQQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQR,AQQ,null)
[STACK] CHECK CONDITION: NextToDock(AQQ,AQR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQS,AQR,null)
[STACK] CHECK CONDITION: NextToDock(AQR,AQS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQT,AQS,null)
[STACK] CHECK CONDITION: NextToDock(AQS,AQT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQU,AQT,null)
[STACK] CHECK CONDITION: NextToDock(AQT,AQU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQV,AQU,null)
[STACK] CHECK CONDITION: NextToDock(AQU,AQV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQW,AQV,null)
[STACK] CHECK CONDITION: NextToDock(AQV,AQW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQX,AQW,null)
[STACK] CHECK CONDITION: NextToDock(AQW,AQX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQY,AQX,null)
[STACK] CHECK CONDITION: NextToDock(AQX,AQY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AQZ,AQY,null)
[STACK] CHECK CONDITION: NextToDock(AQY,AQZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARA,AQZ,null)
[STACK] CHECK CONDITION: NextToDock(AQZ,ARA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARB,ARA,null)
[STACK] CHECK CONDITION: NextToDock(ARA,ARB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARC,ARB,null)
[STACK] CHECK CONDITION: NextToDock(ARB,ARC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARD,ARC,null)
[STACK] CHECK CONDITION: NextToDock(ARC,ARD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARE,ARD,null)
[STACK] CHECK CONDITION: NextToDock(ARD,ARE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARF,ARE,null)
[STACK] CHECK CONDITION: NextToDock(ARE,ARF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARG,ARF,null)
[STACK] CHECK CONDITION: NextToDock(ARF,ARG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARH,ARG,null)
[STACK] CHECK CONDITION: NextToDock(ARG,ARH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARI,ARH,null)
[STACK] CHECK CONDITION: NextToDock(ARH,ARI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARJ,ARI,null)
[STACK] CHECK CONDITION: NextToDock(ARI,ARJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARK,ARJ,null)
[STACK] CHECK CONDITION: NextToDock(ARJ,ARK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARL,ARK,null)
[STACK] CHECK CONDITION: NextToDock(ARK,ARL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARM,ARL,null)
[STACK] CHECK CONDITION: NextToDock(ARL,ARM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARN,ARM,null)
[STACK] CHECK CONDITION: NextToDock(ARM,ARN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARO,ARN,null)
[STACK] CHECK CONDITION: NextToDock(ARN,ARO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARP,ARO,null)
[STACK] CHECK CONDITION: NextToDock(ARO,ARP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARQ,ARP,null)
[STACK] CHECK CONDITION: NextToDock(ARP,ARQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARR,ARQ,null)
[STACK] CHECK CONDITION: NextToDock(ARQ,ARR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARS,ARR,null)
[STACK] CHECK CONDITION: NextToDock(ARR,ARS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ART,ARS,null)
[STACK] CHECK CONDITION: NextToDock(ARS,ART)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ART)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARU,ART,null)
[STACK] CHECK CONDITION: NextToDock(ART,ARU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARV,ARU,null)
[STACK] CHECK CONDITION: NextToDock(ARU,ARV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARW,ARV,null)
[STACK] CHECK CONDITION: NextToDock(ARV,ARW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARX,ARW,null)
[STACK] CHECK CONDITION: NextToDock(ARW,ARX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARY,ARX,null)
[STACK] CHECK CONDITION: NextToDock(ARX,ARY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ARZ,ARY,null)
[STACK] CHECK CONDITION: NextToDock(ARY,ARZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASA,ARZ,null)
[STACK] CHECK CONDITION: NextToDock(ARZ,ASA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASB,ASA,null)
[STACK] CHECK CONDITION: NextToDock(ASA,ASB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASC,ASB,null)
[STACK] CHECK CONDITION: NextToDock(ASB,ASC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASD,ASC,null)
[STACK] CHECK CONDITION: NextToDock(ASC,ASD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASE,ASD,null)
[STACK] CHECK CONDITION: NextToDock(ASD,ASE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASF,ASE,null)
[STACK] CHECK CONDITION: NextToDock(ASE,ASF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASG,ASF,null)
[STACK] CHECK CONDITION: NextToDock(ASF,ASG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASH,ASG,null)
[STACK] CHECK CONDITION: NextToDock(ASG,ASH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASI,ASH,null)
[STACK] CHECK CONDITION: NextToDock(ASH,ASI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASJ,ASI,null)
[STACK] CHECK CONDITION: NextToDock(ASI,ASJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASK,ASJ,null)
[STACK] CHECK CONDITION: NextToDock(ASJ,ASK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASL,ASK,null)
[STACK] CHECK CONDITION: NextToDock(ASK,ASL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASM,ASL,null)
[STACK] CHECK CONDITION: NextToDock(ASL,ASM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASN,ASM,null)
[STACK] CHECK CONDITION: NextToDock(ASM,ASN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASO,ASN,null)
[STACK] CHECK CONDITION: NextToDock(ASN,ASO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASP,ASO,null)
[STACK] CHECK CONDITION: NextToDock(ASO,ASP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASQ,ASP,null)
[STACK] CHECK CONDITION: NextToDock(ASP,ASQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASR,ASQ,null)
[STACK] CHECK CONDITION: NextToDock(ASQ,ASR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASS,ASR,null)
[STACK] CHECK CONDITION: NextToDock(ASR,ASS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AST,ASS,null)
[STACK] CHECK CONDITION: NextToDock(ASS,AST)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AST)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASU,AST,null)
[STACK] CHECK CONDITION: NextToDock(AST,ASU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASV,ASU,null)
[STACK] CHECK CONDITION: NextToDock(ASU,ASV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASW,ASV,null)
[STACK] CHECK CONDITION: NextToDock(ASV,ASW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASX,ASW,null)
[STACK] CHECK CONDITION: NextToDock(ASW,ASX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASY,ASX,null)
[STACK] CHECK CONDITION: NextToDock(ASX,ASY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ASZ,ASY,null)
[STACK] CHECK CONDITION: NextToDock(ASY,ASZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATA,ASZ,null)
[STACK] CHECK CONDITION: NextToDock(ASZ,ATA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATB,ATA,null)
[STACK] CHECK CONDITION: NextToDock(ATA,ATB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATC,ATB,null)
[STACK] CHECK CONDITION: NextToDock(ATB,ATC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATD,ATC,null)
[STACK] CHECK CONDITION: NextToDock(ATC,ATD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATE,ATD,null)
[STACK] CHECK CONDITION: NextToDock(ATD,ATE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATF,ATE,null)
[STACK] CHECK CONDITION: NextToDock(ATE,ATF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATG,ATF,null)
[STACK] CHECK CONDITION: NextToDock(ATF,ATG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATH,ATG,null)
[STACK] CHECK CONDITION: NextToDock(ATG,ATH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATI,ATH,null)
[STACK] CHECK CONDITION: NextToDock(ATH,ATI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATJ,ATI,null)
[STACK] CHECK CONDITION: NextToDock(ATI,ATJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATK,ATJ,null)
[STACK] CHECK CONDITION: NextToDock(ATJ,ATK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATL,ATK,null)
[STACK] CHECK CONDITION: NextToDock(ATK,ATL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATM,ATL,null)
[STACK] CHECK CONDITION: NextToDock(ATL,ATM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATN,ATM,null)
[STACK] CHECK CONDITION: NextToDock(ATM,ATN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATO,ATN,null)
[STACK] CHECK CONDITION: NextToDock(ATN,ATO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATP,ATO,null)
[STACK] CHECK CONDITION: NextToDock(ATO,ATP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATQ,ATP,null)
[STACK] CHECK CONDITION: NextToDock(ATP,ATQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATR,ATQ,null)
[STACK] CHECK CONDITION: NextToDock(ATQ,ATR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATS,ATR,null)
[STACK] CHECK CONDITION: NextToDock(ATR,ATS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATT,ATS,null)
[STACK] CHECK CONDITION: NextToDock(ATS,ATT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATU,ATT,null)
[STACK] CHECK CONDITION: NextToDock(ATT,ATU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATV,ATU,null)
[STACK] CHECK CONDITION: NextToDock(ATU,ATV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATW,ATV,null)
[STACK] CHECK CONDITION: NextToDock(ATV,ATW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATX,ATW,null)
[STACK] CHECK CONDITION: NextToDock(ATW,ATX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATY,ATX,null)
[STACK] CHECK CONDITION: NextToDock(ATX,ATY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(ATZ,ATY,null)
[STACK] CHECK CONDITION: NextToDock(ATY,ATZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUA,ATZ,null)
[STACK] CHECK CONDITION: NextToDock(ATZ,AUA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUB,AUA,null)
[STACK] CHECK CONDITION: NextToDock(AUA,AUB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUC,AUB,null)
[STACK] CHECK CONDITION: NextToDock(AUB,AUC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUD,AUC,null)
[STACK] CHECK CONDITION: NextToDock(AUC,AUD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUE,AUD,null)
[STACK] CHECK CONDITION: NextToDock(AUD,AUE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUF,AUE,null)
[STACK] CHECK CONDITION: NextToDock(AUE,AUF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUG,AUF,null)
[STACK] CHECK CONDITION: NextToDock(AUF,AUG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUH,AUG,null)
[STACK] CHECK CONDITION: NextToDock(AUG,AUH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUI,AUH,null)
[STACK] CHECK CONDITION: NextToDock(AUH,AUI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUJ,AUI,null)
[STACK] CHECK CONDITION: NextToDock(AUI,AUJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUK,AUJ,null)
[STACK] CHECK CONDITION: NextToDock(AUJ,AUK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUL,AUK,null)
[STACK] CHECK CONDITION: NextToDock(AUK,AUL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUM,AUL,null)
[STACK] CHECK CONDITION: NextToDock(AUL,AUM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUN,AUM,null)
[STACK] CHECK CONDITION: NextToDock(AUM,AUN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUO,AUN,null)
[STACK] CHECK CONDITION: NextToDock(AUN,AUO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUP,AUO,null)
[STACK] CHECK CONDITION: NextToDock(AUO,AUP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUQ,AUP,null)
[STACK] CHECK CONDITION: NextToDock(AUP,AUQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUR,AUQ,null)
[STACK] CHECK CONDITION: NextToDock(AUQ,AUR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUS,AUR,null)
[STACK] CHECK CONDITION: NextToDock(AUR,AUS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUT,AUS,null)
[STACK] CHECK CONDITION: NextToDock(AUS,AUT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUU,AUT,null)
[STACK] CHECK CONDITION: NextToDock(AUT,AUU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUV,AUU,null)
[STACK] CHECK CONDITION: NextToDock(AUU,AUV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUW,AUV,null)
[STACK] CHECK CONDITION: NextToDock(AUV,AUW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUX,AUW,null)
[STACK] CHECK CONDITION: NextToDock(AUW,AUX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUY,AUX,null)
[STACK] CHECK CONDITION: NextToDock(AUX,AUY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AUZ,AUY,null)
[STACK] CHECK CONDITION: NextToDock(AUY,AUZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVA,AUZ,null)
[STACK] CHECK CONDITION: NextToDock(AUZ,AVA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVB,AVA,null)
[STACK] CHECK CONDITION: NextToDock(AVA,AVB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVC,AVB,null)
[STACK] CHECK CONDITION: NextToDock(AVB,AVC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVD,AVC,null)
[STACK] CHECK CONDITION: NextToDock(AVC,AVD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVE,AVD,null)
[STACK] CHECK CONDITION: NextToDock(AVD,AVE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVF,AVE,null)
[STACK] CHECK CONDITION: NextToDock(AVE,AVF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVG,AVF,null)
[STACK] CHECK CONDITION: NextToDock(AVF,AVG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVH,AVG,null)
[STACK] CHECK CONDITION: NextToDock(AVG,AVH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVI,AVH,null)
[STACK] CHECK CONDITION: NextToDock(AVH,AVI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVJ,AVI,null)
[STACK] CHECK CONDITION: NextToDock(AVI,AVJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVK,AVJ,null)
[STACK] CHECK CONDITION: NextToDock(AVJ,AVK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVL,AVK,null)
[STACK] CHECK CONDITION: NextToDock(AVK,AVL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVM,AVL,null)
[STACK] CHECK CONDITION: NextToDock(AVL,AVM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVN,AVM,null)
[STACK] CHECK CONDITION: NextToDock(AVM,AVN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVO,AVN,null)
[STACK] CHECK CONDITION: NextToDock(AVN,AVO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVP,AVO,null)
[STACK] CHECK CONDITION: NextToDock(AVO,AVP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVQ,AVP,null)
[STACK] CHECK CONDITION: NextToDock(AVP,AVQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVR,AVQ,null)
[STACK] CHECK CONDITION: NextToDock(AVQ,AVR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVS,AVR,null)
[STACK] CHECK CONDITION: NextToDock(AVR,AVS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVT,AVS,null)
[STACK] CHECK CONDITION: NextToDock(AVS,AVT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVU,AVT,null)
[STACK] CHECK CONDITION: NextToDock(AVT,AVU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVV,AVU,null)
[STACK] CHECK CONDITION: NextToDock(AVU,AVV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVW,AVV,null)
[STACK] CHECK CONDITION: NextToDock(AVV,AVW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVX,AVW,null)
[STACK] CHECK CONDITION: NextToDock(AVW,AVX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVY,AVX,null)
[STACK] CHECK CONDITION: NextToDock(AVX,AVY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AVZ,AVY,null)
[STACK] CHECK CONDITION: NextToDock(AVY,AVZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeLine(AWA,AVZ,null)
[STACK] CHECK CONDITION: NextToDock(AVZ,AWA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AWA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: ChangeToEmptyLine(AWB,AWA)
[STACK] CHECK CONDITION: NextToDock(AWA,AWB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AWB)
Condition satisfied.
[STACK] CHECK CONDITION: ExistsEmptyLine()
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeToEmptyLine(AWB,AWA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AWB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AWB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AWA,AVZ,AWB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AWA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AWA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVZ,AVY,AWA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVY,AVX,AVZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVX,AVW,AVY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVW,AVV,AVX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVV,AVU,AVW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVU,AVT,AVV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVT,AVS,AVU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVS,AVR,AVT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVR,AVQ,AVS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVQ,AVP,AVR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVP,AVO,AVQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVO,AVN,AVP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVN,AVM,AVO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVM,AVL,AVN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVL,AVK,AVM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVK,AVJ,AVL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVJ,AVI,AVK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVI,AVH,AVJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVH,AVG,AVI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVG,AVF,AVH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVF,AVE,AVG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVE,AVD,AVF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVD,AVC,AVE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVC,AVB,AVD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVB,AVA,AVC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AVA,AUZ,AVB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AVA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AVA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUZ,AUY,AVA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUY,AUX,AUZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUX,AUW,AUY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUW,AUV,AUX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUV,AUU,AUW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUU,AUT,AUV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUT,AUS,AUU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUS,AUR,AUT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUR,AUQ,AUS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUQ,AUP,AUR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUP,AUO,AUQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUO,AUN,AUP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUN,AUM,AUO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUM,AUL,AUN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUL,AUK,AUM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUK,AUJ,AUL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUJ,AUI,AUK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUI,AUH,AUJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUH,AUG,AUI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUG,AUF,AUH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUF,AUE,AUG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUE,AUD,AUF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUD,AUC,AUE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUC,AUB,AUD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUB,AUA,AUC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AUA,ATZ,AUB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AUA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AUA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATZ,ATY,AUA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATY,ATX,ATZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATX,ATW,ATY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATW,ATV,ATX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATV,ATU,ATW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATU,ATT,ATV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATT,ATS,ATU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATS,ATR,ATT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATR,ATQ,ATS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATQ,ATP,ATR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATP,ATO,ATQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATO,ATN,ATP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATN,ATM,ATO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATM,ATL,ATN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATL,ATK,ATM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATK,ATJ,ATL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATJ,ATI,ATK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATI,ATH,ATJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATH,ATG,ATI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATG,ATF,ATH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATF,ATE,ATG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATE,ATD,ATF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATD,ATC,ATE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATC,ATB,ATD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATB,ATA,ATC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ATA,ASZ,ATB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ATA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ATA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASZ,ASY,ATA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASY,ASX,ASZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASX,ASW,ASY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASW,ASV,ASX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASV,ASU,ASW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASU,AST,ASV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AST,ASS,ASU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AST)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AST)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASS,ASR,AST)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASR,ASQ,ASS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASQ,ASP,ASR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASP,ASO,ASQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASO,ASN,ASP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASN,ASM,ASO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASM,ASL,ASN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASL,ASK,ASM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASK,ASJ,ASL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASJ,ASI,ASK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASI,ASH,ASJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASH,ASG,ASI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASG,ASF,ASH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASF,ASE,ASG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASE,ASD,ASF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASD,ASC,ASE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASC,ASB,ASD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASB,ASA,ASC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ASA,ARZ,ASB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ASA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ASA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARZ,ARY,ASA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARY,ARX,ARZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARX,ARW,ARY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARW,ARV,ARX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARV,ARU,ARW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARU,ART,ARV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ART,ARS,ARU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ART)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ART)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARS,ARR,ART)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARR,ARQ,ARS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARQ,ARP,ARR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARP,ARO,ARQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARO,ARN,ARP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARN,ARM,ARO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARM,ARL,ARN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARL,ARK,ARM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARK,ARJ,ARL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARJ,ARI,ARK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARI,ARH,ARJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARH,ARG,ARI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARG,ARF,ARH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARF,ARE,ARG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARE,ARD,ARF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARD,ARC,ARE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARC,ARB,ARD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARB,ARA,ARC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ARA,AQZ,ARB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ARA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ARA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQZ,AQY,ARA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQY,AQX,AQZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQX,AQW,AQY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQW,AQV,AQX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQV,AQU,AQW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQU,AQT,AQV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQT,AQS,AQU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQS,AQR,AQT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQR,AQQ,AQS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQQ,AQP,AQR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQP,AQO,AQQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQO,AQN,AQP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQN,AQM,AQO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQM,AQL,AQN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQL,AQK,AQM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQK,AQJ,AQL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQJ,AQI,AQK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQI,AQH,AQJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQH,AQG,AQI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQG,AQF,AQH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQF,AQE,AQG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQE,AQD,AQF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQD,AQC,AQE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQC,AQB,AQD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQB,AQA,AQC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AQA,APZ,AQB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AQA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AQA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APZ,APY,AQA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APY,APX,APZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APX,APW,APY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APW,APV,APX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APV,APU,APW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APU,APT,APV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APT,APS,APU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APS,APR,APT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APR,APQ,APS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APQ,APP,APR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APP,APO,APQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APO,APN,APP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APN,APM,APO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APM,APL,APN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APL,APK,APM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APK,APJ,APL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APJ,API,APK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(API,APH,APJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(API)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(API)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APH,APG,API)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APG,APF,APH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APF,APE,APG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APE,APD,APF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APD,APC,APE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APC,APB,APD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APB,APA,APC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(APA,AOZ,APB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(APA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(APA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOZ,AOY,APA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOY,AOX,AOZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOX,AOW,AOY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOW,AOV,AOX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOV,AOU,AOW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOU,AOT,AOV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOT,AOS,AOU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOS,AOR,AOT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOR,AOQ,AOS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOQ,AOP,AOR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOP,AOO,AOQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOO,AON,AOP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AON,AOM,AOO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AON)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AON)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOM,AOL,AON)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOL,AOK,AOM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOK,AOJ,AOL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOJ,AOI,AOK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOI,AOH,AOJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOH,AOG,AOI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOG,AOF,AOH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOF,AOE,AOG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOE,AOD,AOF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOD,AOC,AOE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOC,AOB,AOD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOB,AOA,AOC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AOA,ANZ,AOB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AOA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AOA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANZ,ANY,AOA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANY,ANX,ANZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANX,ANW,ANY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANW,ANV,ANX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANV,ANU,ANW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANU,ANT,ANV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANT,ANS,ANU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANS,ANR,ANT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANR,ANQ,ANS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANQ,ANP,ANR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANP,ANO,ANQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANO,ANN,ANP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANN,ANM,ANO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANM,ANL,ANN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANL,ANK,ANM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANK,ANJ,ANL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANJ,ANI,ANK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANI,ANH,ANJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANH,ANG,ANI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANG,ANF,ANH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANF,ANE,ANG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANE,AND,ANF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AND,ANC,ANE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AND)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AND)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANC,ANB,AND)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANB,ANA,ANC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ANA,AMZ,ANB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ANA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ANA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMZ,AMY,ANA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMY,AMX,AMZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMX,AMW,AMY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMW,AMV,AMX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMV,AMU,AMW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMU,AMT,AMV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMT,AMS,AMU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMS,AMR,AMT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMR,AMQ,AMS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMQ,AMP,AMR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMP,AMO,AMQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMO,AMN,AMP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMN,AMM,AMO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMM,AML,AMN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AML,AMK,AMM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AML)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AML)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMK,AMJ,AML)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMJ,AMI,AMK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMI,AMH,AMJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMH,AMG,AMI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMG,AMF,AMH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMF,AME,AMG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AME,AMD,AMF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AME)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AME)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMD,AMC,AME)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMC,AMB,AMD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMB,AMA,AMC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AMA,ALZ,AMB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AMA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AMA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALZ,ALY,AMA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALY,ALX,ALZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALX,ALW,ALY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALW,ALV,ALX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALV,ALU,ALW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALU,ALT,ALV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALT,ALS,ALU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALS,ALR,ALT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALR,ALQ,ALS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALQ,ALP,ALR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALP,ALO,ALQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALO,ALN,ALP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALN,ALM,ALO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALM,ALL,ALN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALL,ALK,ALM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALK,ALJ,ALL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALJ,ALI,ALK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALI,ALH,ALJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALH,ALG,ALI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALG,ALF,ALH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALF,ALE,ALG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALE,ALD,ALF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALD,ALC,ALE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALC,ALB,ALD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALB,ALA,ALC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ALA,AKZ,ALB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ALA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ALA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKZ,AKY,ALA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKY,AKX,AKZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKX,AKW,AKY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKW,AKV,AKX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKV,AKU,AKW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKU,AKT,AKV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKT,AKS,AKU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKS,AKR,AKT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKR,AKQ,AKS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKQ,AKP,AKR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKP,AKO,AKQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKO,AKN,AKP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKN,AKM,AKO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKM,AKL,AKN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKL,AKK,AKM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKK,AKJ,AKL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKJ,AKI,AKK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKI,AKH,AKJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKH,AKG,AKI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKG,AKF,AKH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKF,AKE,AKG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKE,AKD,AKF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKD,AKC,AKE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKC,AKB,AKD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKB,AKA,AKC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AKA,AJZ,AKB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AKA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AKA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJZ,AJY,AKA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJY,AJX,AJZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJX,AJW,AJY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJW,AJV,AJX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJV,AJU,AJW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJU,AJT,AJV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJT,AJS,AJU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJS,AJR,AJT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJR,AJQ,AJS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJQ,AJP,AJR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJP,AJO,AJQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJO,AJN,AJP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJN,AJM,AJO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJM,AJL,AJN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJL,AJK,AJM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJK,AJJ,AJL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJJ,AJI,AJK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJI,AJH,AJJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJH,AJG,AJI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJG,AJF,AJH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJF,AJE,AJG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJE,AJD,AJF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJD,AJC,AJE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJC,AJB,AJD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJB,AJA,AJC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AJA,AIZ,AJB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AJA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AJA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIZ,AIY,AJA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIY,AIX,AIZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIX,AIW,AIY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIW,AIV,AIX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIV,AIU,AIW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIU,AIT,AIV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIT,AIS,AIU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIS,AIR,AIT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIR,AIQ,AIS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIQ,AIP,AIR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIP,AIO,AIQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIO,AIN,AIP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIN,AIM,AIO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIM,AIL,AIN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIL,AIK,AIM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIK,AIJ,AIL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIJ,AII,AIK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AII,AIH,AIJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AII)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AII)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIH,AIG,AII)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIG,AIF,AIH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIF,AIE,AIG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIE,AID,AIF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AID,AIC,AIE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AID)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AID)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIC,AIB,AID)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIB,AIA,AIC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AIA,AHZ,AIB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AIA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AIA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHZ,AHY,AIA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHY,AHX,AHZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHX,AHW,AHY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHW,AHV,AHX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHV,AHU,AHW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHU,AHT,AHV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHT,AHS,AHU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHS,AHR,AHT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHR,AHQ,AHS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHQ,AHP,AHR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHP,AHO,AHQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHO,AHN,AHP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHN,AHM,AHO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHM,AHL,AHN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHL,AHK,AHM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHK,AHJ,AHL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHJ,AHI,AHK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHI,AHH,AHJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHH,AHG,AHI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHG,AHF,AHH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHF,AHE,AHG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHE,AHD,AHF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHD,AHC,AHE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHC,AHB,AHD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHB,AHA,AHC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AHA,AGZ,AHB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AHA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AHA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGZ,AGY,AHA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGY,AGX,AGZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGX,AGW,AGY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGW,AGV,AGX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGV,AGU,AGW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGU,AGT,AGV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGT,AGS,AGU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGS,AGR,AGT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGR,AGQ,AGS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGQ,AGP,AGR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGP,AGO,AGQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGO,AGN,AGP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGN,AGM,AGO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGM,AGL,AGN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGL,AGK,AGM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGK,AGJ,AGL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGJ,AGI,AGK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGI,AGH,AGJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGH,AGG,AGI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGG,AGF,AGH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGF,AGE,AGG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGE,AGD,AGF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGD,AGC,AGE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGC,AGB,AGD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGB,AGA,AGC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AGA,AFZ,AGB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFZ,AFY,AGA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFY,AFX,AFZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFX,AFW,AFY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFW,AFV,AFX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFV,AFU,AFW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFU,AFT,AFV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFT,AFS,AFU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFS,AFR,AFT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFR,AFQ,AFS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFQ,AFP,AFR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFP,AFO,AFQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFO,AFN,AFP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFN,AFM,AFO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFM,AFL,AFN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFL,AFK,AFM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFK,AFJ,AFL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFJ,AFI,AFK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFI,AFH,AFJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFH,AFG,AFI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFG,AFF,AFH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFF,AFE,AFG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFE,AFD,AFF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFD,AFC,AFE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFC,AFB,AFD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFB,AFA,AFC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AFA,AEZ,AFB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEZ,AEY,AFA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEY,AEX,AEZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEX,AEW,AEY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEW,AEV,AEX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEV,AEU,AEW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEU,AET,AEV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AET,AES,AEU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AET)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AES,AER,AET)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AES)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AER,AEQ,AES)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AER)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEQ,AEP,AER)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEP,AEO,AEQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEO,AEN,AEP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEN,AEM,AEO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEM,AEL,AEN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEL,AEK,AEM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEK,AEJ,AEL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEJ,AEI,AEK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEI,AEH,AEJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEH,AEG,AEI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEG,AEF,AEH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEF,AEE,AEG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEE,AED,AEF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AED,AEC,AEE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AED)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEC,AEB,AED)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEB,AEA,AEC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AEA,ADZ,AEB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADZ,ADY,AEA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADY,ADX,ADZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADX,ADW,ADY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADW,ADV,ADX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADV,ADU,ADW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADU,ADT,ADV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADT,ADS,ADU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADS,ADR,ADT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADR,ADQ,ADS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADQ,ADP,ADR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADP,ADO,ADQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADO,ADN,ADP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADN,ADM,ADO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADM,ADL,ADN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADL,ADK,ADM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADK,ADJ,ADL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADJ,ADI,ADK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADI,ADH,ADJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADH,ADG,ADI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADG,ADF,ADH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADF,ADE,ADG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADE,ADD,ADF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADD,ADC,ADE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADC,ADB,ADD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADB,ADA,ADC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ADA,ACZ,ADB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACZ,ACY,ADA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACY,ACX,ACZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACX,ACW,ACY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACW,ACV,ACX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACV,ACU,ACW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACU,ACT,ACV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACT,ACS,ACU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACS,ACR,ACT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACR,ACQ,ACS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACQ,ACP,ACR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACP,ACO,ACQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACO,ACN,ACP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACN,ACM,ACO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACM,ACL,ACN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACL,ACK,ACM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACK,ACJ,ACL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACJ,ACI,ACK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACI,ACH,ACJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACH,ACG,ACI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACG,ACF,ACH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACF,ACE,ACG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACE,ACD,ACF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACD,ACC,ACE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACC,ACB,ACD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACB,ACA,ACC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ACA,ABZ,ACB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABZ,ABY,ACA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABY,ABX,ABZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABX,ABW,ABY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABW,ABV,ABX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABV,ABU,ABW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABU,ABT,ABV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABT,ABS,ABU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABS,ABR,ABT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABR,ABQ,ABS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABQ,ABP,ABR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABP,ABO,ABQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABO,ABN,ABP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABN,ABM,ABO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABM,ABL,ABN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABL,ABK,ABM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABK,ABJ,ABL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABJ,ABI,ABK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABI,ABH,ABJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABH,ABG,ABI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABG,ABF,ABH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABF,ABE,ABG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABE,ABD,ABF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABD,ABC,ABE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABC,ABB,ABD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABB,ABA,ABC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(ABA,AAZ,ABB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAZ,AAY,ABA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAY,AAX,AAZ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAX,AAW,AAY)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAW,AAV,AAX)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAV,AAU,AAW)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAU,AAT,AAV)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAU)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAT,AAS,AAU)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAS,AAR,AAT)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAR,AAQ,AAS)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAQ,AAP,AAR)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAP,AAO,AAQ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAO,AAN,AAP)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAN,AAM,AAO)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAM,AAL,AAN)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAL,AAK,AAM)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAK,AAJ,AAL)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAJ,AAI,AAK)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAI,AAH,AAJ)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAH,AAG,AAI)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAG,AAF,AAH)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAF,AAE,AAG)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAE,AAD,AAF)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAD,AAC,AAE)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAC,AAB,AAD)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAB,AAA,AAC)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(AAA,Z,AAB)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Z,Y,AAA)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Z)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Y,X,Z)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Y)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(X,W,Y)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(X)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(W,V,X)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(W)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(V,U,W)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(V)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(U,T,V)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(U)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(T,S,U)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(T)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(S,R,T)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(S)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(R,Q,S)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(R)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(Q,P,R)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(Q)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(P,O,Q)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(P)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(O,N,P)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(O)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(N,M,O)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(N)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(M,L,N)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(M)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(L,K,M)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(L)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(K,J,L)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(K)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(J,I,K)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(J)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(I,H,J)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(I)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(H,G,I)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(H)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(G,F,H)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(G)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(F,E,G)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(F)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(E,D,F)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(E)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(D,C,E)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(D)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(C,B,D)
[STACK] INSTANTIATE AND PROPAGATE: FreeLine(null)
[STACK] CHECK CONDITION: FreeLine(C)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator ChangeLine(B,A,C)
[STACK] APPLY OPERATOR TO STATE: Operator BoardFirst1(A)
[STACK] CHECK CONDITION: NextToFerry(B,A)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(B,C,A)
[STACK] CHECK CONDITION: FirstDock(B)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(A)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(C,B)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(B,C,A)
[STACK] CHECK CONDITION: NextToFerry(C,B)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(C,D,B)
[STACK] CHECK CONDITION: FirstDock(C)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(B)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(D,C)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(C,D,B)
[STACK] CHECK CONDITION: NextToFerry(D,C)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(D,E,C)
[STACK] CHECK CONDITION: FirstDock(D)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(C)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(E,D)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(D,E,C)
[STACK] CHECK CONDITION: NextToFerry(E,D)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(E,F,D)
[STACK] CHECK CONDITION: FirstDock(E)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(D)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(F,E)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(E,F,D)
[STACK] CHECK CONDITION: NextToFerry(F,E)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(F,G,E)
[STACK] CHECK CONDITION: FirstDock(F)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(E)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(G,F)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(F,G,E)
[STACK] CHECK CONDITION: NextToFerry(G,F)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(G,H,F)
[STACK] CHECK CONDITION: FirstDock(G)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(F)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(H,G)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(G,H,F)
[STACK] CHECK CONDITION: NextToFerry(H,G)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(H,I,G)
[STACK] CHECK CONDITION: FirstDock(H)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(G)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(I,H)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(H,I,G)
[STACK] CHECK CONDITION: NextToFerry(I,H)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(I,J,H)
[STACK] CHECK CONDITION: FirstDock(I)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(H)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(J,I)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(I,J,H)
[STACK] CHECK CONDITION: NextToFerry(J,I)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(J,K,I)
[STACK] CHECK CONDITION: FirstDock(J)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(I)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(K,J)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(J,K,I)
[STACK] CHECK CONDITION: NextToFerry(K,J)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(K,L,J)
[STACK] CHECK CONDITION: FirstDock(K)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(J)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(L,K)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(K,L,J)
[STACK] CHECK CONDITION: NextToFerry(L,K)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(L,M,K)
[STACK] CHECK CONDITION: FirstDock(L)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(K)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(M,L)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(L,M,K)
[STACK] CHECK CONDITION: NextToFerry(M,L)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(M,N,L)
[STACK] CHECK CONDITION: FirstDock(M)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(L)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(N,M)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(M,N,L)
[STACK] CHECK CONDITION: NextToFerry(N,M)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(N,O,M)
[STACK] CHECK CONDITION: FirstDock(N)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(M)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(O,N)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(N,O,M)
[STACK] CHECK CONDITION: NextToFerry(O,N)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(O,P,N)
[STACK] CHECK CONDITION: FirstDock(O)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(N)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(P,O)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(O,P,N)
[STACK] CHECK CONDITION: NextToFerry(P,O)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(P,Q,O)
[STACK] CHECK CONDITION: FirstDock(P)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(O)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Q,P)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(P,Q,O)
[STACK] CHECK CONDITION: NextToFerry(Q,P)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Q,R,P)
[STACK] CHECK CONDITION: FirstDock(Q)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(P)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(R,Q)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Q,R,P)
[STACK] CHECK CONDITION: NextToFerry(R,Q)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(R,S,Q)
[STACK] CHECK CONDITION: FirstDock(R)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(Q)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(S,R)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(R,S,Q)
[STACK] CHECK CONDITION: NextToFerry(S,R)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(S,T,R)
[STACK] CHECK CONDITION: FirstDock(S)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(R)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(T,S)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(S,T,R)
[STACK] CHECK CONDITION: NextToFerry(T,S)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(T,U,S)
[STACK] CHECK CONDITION: FirstDock(T)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(S)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(U,T)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(T,U,S)
[STACK] CHECK CONDITION: NextToFerry(U,T)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(U,V,T)
[STACK] CHECK CONDITION: FirstDock(U)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(T)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(V,U)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(U,V,T)
[STACK] CHECK CONDITION: NextToFerry(V,U)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(V,W,U)
[STACK] CHECK CONDITION: FirstDock(V)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(U)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(W,V)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(V,W,U)
[STACK] CHECK CONDITION: NextToFerry(W,V)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(W,X,V)
[STACK] CHECK CONDITION: FirstDock(W)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(V)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(X,W)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(W,X,V)
[STACK] CHECK CONDITION: NextToFerry(X,W)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(X,Y,W)
[STACK] CHECK CONDITION: FirstDock(X)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(W)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Y,X)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(X,Y,W)
[STACK] CHECK CONDITION: NextToFerry(Y,X)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Y,Z,X)
[STACK] CHECK CONDITION: FirstDock(Y)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(X)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(Z,Y)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Y,Z,X)
[STACK] CHECK CONDITION: NextToFerry(Z,Y)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(Z,AAA,Y)
[STACK] CHECK CONDITION: FirstDock(Z)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(Y)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAA,Z)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(Z,AAA,Y)
[STACK] CHECK CONDITION: NextToFerry(AAA,Z)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAA,AAB,Z)
[STACK] CHECK CONDITION: FirstDock(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(Z)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAB,AAA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAA,AAB,Z)
[STACK] CHECK CONDITION: NextToFerry(AAB,AAA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAB,AAC,AAA)
[STACK] CHECK CONDITION: FirstDock(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAC,AAB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAB,AAC,AAA)
[STACK] CHECK CONDITION: NextToFerry(AAC,AAB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAC,AAD,AAB)
[STACK] CHECK CONDITION: FirstDock(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAD,AAC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAC,AAD,AAB)
[STACK] CHECK CONDITION: NextToFerry(AAD,AAC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAD,AAE,AAC)
[STACK] CHECK CONDITION: FirstDock(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAE,AAD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAD,AAE,AAC)
[STACK] CHECK CONDITION: NextToFerry(AAE,AAD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAE,AAF,AAD)
[STACK] CHECK CONDITION: FirstDock(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAF,AAE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAE,AAF,AAD)
[STACK] CHECK CONDITION: NextToFerry(AAF,AAE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAF,AAG,AAE)
[STACK] CHECK CONDITION: FirstDock(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAG,AAF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAF,AAG,AAE)
[STACK] CHECK CONDITION: NextToFerry(AAG,AAF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAG,AAH,AAF)
[STACK] CHECK CONDITION: FirstDock(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAH,AAG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAG,AAH,AAF)
[STACK] CHECK CONDITION: NextToFerry(AAH,AAG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAH,AAI,AAG)
[STACK] CHECK CONDITION: FirstDock(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAI,AAH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAH,AAI,AAG)
[STACK] CHECK CONDITION: NextToFerry(AAI,AAH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAI,AAJ,AAH)
[STACK] CHECK CONDITION: FirstDock(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAJ,AAI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAI,AAJ,AAH)
[STACK] CHECK CONDITION: NextToFerry(AAJ,AAI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAJ,AAK,AAI)
[STACK] CHECK CONDITION: FirstDock(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAK,AAJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAJ,AAK,AAI)
[STACK] CHECK CONDITION: NextToFerry(AAK,AAJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAK,AAL,AAJ)
[STACK] CHECK CONDITION: FirstDock(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAL,AAK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAK,AAL,AAJ)
[STACK] CHECK CONDITION: NextToFerry(AAL,AAK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAL,AAM,AAK)
[STACK] CHECK CONDITION: FirstDock(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAM,AAL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAL,AAM,AAK)
[STACK] CHECK CONDITION: NextToFerry(AAM,AAL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAM,AAN,AAL)
[STACK] CHECK CONDITION: FirstDock(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAN,AAM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAM,AAN,AAL)
[STACK] CHECK CONDITION: NextToFerry(AAN,AAM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAN,AAO,AAM)
[STACK] CHECK CONDITION: FirstDock(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAO,AAN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAN,AAO,AAM)
[STACK] CHECK CONDITION: NextToFerry(AAO,AAN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAO,AAP,AAN)
[STACK] CHECK CONDITION: FirstDock(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAP,AAO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAO,AAP,AAN)
[STACK] CHECK CONDITION: NextToFerry(AAP,AAO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAP,AAQ,AAO)
[STACK] CHECK CONDITION: FirstDock(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAQ,AAP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAP,AAQ,AAO)
[STACK] CHECK CONDITION: NextToFerry(AAQ,AAP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAQ,AAR,AAP)
[STACK] CHECK CONDITION: FirstDock(AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAR,AAQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAQ,AAR,AAP)
[STACK] CHECK CONDITION: NextToFerry(AAR,AAQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAR,AAS,AAQ)
[STACK] CHECK CONDITION: FirstDock(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAS,AAR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAR,AAS,AAQ)
[STACK] CHECK CONDITION: NextToFerry(AAS,AAR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAS,AAT,AAR)
[STACK] CHECK CONDITION: FirstDock(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAT,AAS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAS,AAT,AAR)
[STACK] CHECK CONDITION: NextToFerry(AAT,AAS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAT,AAU,AAS)
[STACK] CHECK CONDITION: FirstDock(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAU,AAT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAT,AAU,AAS)
[STACK] CHECK CONDITION: NextToFerry(AAU,AAT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAU,AAV,AAT)
[STACK] CHECK CONDITION: FirstDock(AAU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAV,AAU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAU,AAV,AAT)
[STACK] CHECK CONDITION: NextToFerry(AAV,AAU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAV,AAW,AAU)
[STACK] CHECK CONDITION: FirstDock(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAW,AAV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAV,AAW,AAU)
[STACK] CHECK CONDITION: NextToFerry(AAW,AAV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAW,AAX,AAV)
[STACK] CHECK CONDITION: FirstDock(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAX,AAW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAW,AAX,AAV)
[STACK] CHECK CONDITION: NextToFerry(AAX,AAW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAX,AAY,AAW)
[STACK] CHECK CONDITION: FirstDock(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAY,AAX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAX,AAY,AAW)
[STACK] CHECK CONDITION: NextToFerry(AAY,AAX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAY,AAZ,AAX)
[STACK] CHECK CONDITION: FirstDock(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AAZ,AAY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAY,AAZ,AAX)
[STACK] CHECK CONDITION: NextToFerry(AAZ,AAY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AAZ,ABA,AAY)
[STACK] CHECK CONDITION: FirstDock(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABA,AAZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AAZ,ABA,AAY)
[STACK] CHECK CONDITION: NextToFerry(ABA,AAZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABA,ABB,AAZ)
[STACK] CHECK CONDITION: FirstDock(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AAZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABB,ABA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABA,ABB,AAZ)
[STACK] CHECK CONDITION: NextToFerry(ABB,ABA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABB,ABC,ABA)
[STACK] CHECK CONDITION: FirstDock(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABC,ABB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABB,ABC,ABA)
[STACK] CHECK CONDITION: NextToFerry(ABC,ABB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABC,ABD,ABB)
[STACK] CHECK CONDITION: FirstDock(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABD,ABC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABC,ABD,ABB)
[STACK] CHECK CONDITION: NextToFerry(ABD,ABC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABD,ABE,ABC)
[STACK] CHECK CONDITION: FirstDock(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABE,ABD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABD,ABE,ABC)
[STACK] CHECK CONDITION: NextToFerry(ABE,ABD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABE,ABF,ABD)
[STACK] CHECK CONDITION: FirstDock(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABF,ABE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABE,ABF,ABD)
[STACK] CHECK CONDITION: NextToFerry(ABF,ABE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABF,ABG,ABE)
[STACK] CHECK CONDITION: FirstDock(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABG,ABF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABF,ABG,ABE)
[STACK] CHECK CONDITION: NextToFerry(ABG,ABF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABG,ABH,ABF)
[STACK] CHECK CONDITION: FirstDock(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABH,ABG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABG,ABH,ABF)
[STACK] CHECK CONDITION: NextToFerry(ABH,ABG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABH,ABI,ABG)
[STACK] CHECK CONDITION: FirstDock(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABI,ABH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABH,ABI,ABG)
[STACK] CHECK CONDITION: NextToFerry(ABI,ABH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABI,ABJ,ABH)
[STACK] CHECK CONDITION: FirstDock(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABJ,ABI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABI,ABJ,ABH)
[STACK] CHECK CONDITION: NextToFerry(ABJ,ABI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABJ,ABK,ABI)
[STACK] CHECK CONDITION: FirstDock(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABK,ABJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABJ,ABK,ABI)
[STACK] CHECK CONDITION: NextToFerry(ABK,ABJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABK,ABL,ABJ)
[STACK] CHECK CONDITION: FirstDock(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABL,ABK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABK,ABL,ABJ)
[STACK] CHECK CONDITION: NextToFerry(ABL,ABK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABL,ABM,ABK)
[STACK] CHECK CONDITION: FirstDock(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABM,ABL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABL,ABM,ABK)
[STACK] CHECK CONDITION: NextToFerry(ABM,ABL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABM,ABN,ABL)
[STACK] CHECK CONDITION: FirstDock(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABN,ABM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABM,ABN,ABL)
[STACK] CHECK CONDITION: NextToFerry(ABN,ABM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABN,ABO,ABM)
[STACK] CHECK CONDITION: FirstDock(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABO,ABN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABN,ABO,ABM)
[STACK] CHECK CONDITION: NextToFerry(ABO,ABN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABO,ABP,ABN)
[STACK] CHECK CONDITION: FirstDock(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABP,ABO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABO,ABP,ABN)
[STACK] CHECK CONDITION: NextToFerry(ABP,ABO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABP,ABQ,ABO)
[STACK] CHECK CONDITION: FirstDock(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABQ,ABP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABP,ABQ,ABO)
[STACK] CHECK CONDITION: NextToFerry(ABQ,ABP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABQ,ABR,ABP)
[STACK] CHECK CONDITION: FirstDock(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABR,ABQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABQ,ABR,ABP)
[STACK] CHECK CONDITION: NextToFerry(ABR,ABQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABR,ABS,ABQ)
[STACK] CHECK CONDITION: FirstDock(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABS,ABR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABR,ABS,ABQ)
[STACK] CHECK CONDITION: NextToFerry(ABS,ABR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABS,ABT,ABR)
[STACK] CHECK CONDITION: FirstDock(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABT,ABS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABS,ABT,ABR)
[STACK] CHECK CONDITION: NextToFerry(ABT,ABS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABT,ABU,ABS)
[STACK] CHECK CONDITION: FirstDock(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABU,ABT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABT,ABU,ABS)
[STACK] CHECK CONDITION: NextToFerry(ABU,ABT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABU,ABV,ABT)
[STACK] CHECK CONDITION: FirstDock(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABV,ABU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABU,ABV,ABT)
[STACK] CHECK CONDITION: NextToFerry(ABV,ABU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABV,ABW,ABU)
[STACK] CHECK CONDITION: FirstDock(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABW,ABV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABV,ABW,ABU)
[STACK] CHECK CONDITION: NextToFerry(ABW,ABV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABW,ABX,ABV)
[STACK] CHECK CONDITION: FirstDock(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABX,ABW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABW,ABX,ABV)
[STACK] CHECK CONDITION: NextToFerry(ABX,ABW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABX,ABY,ABW)
[STACK] CHECK CONDITION: FirstDock(ABX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABY,ABX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABX,ABY,ABW)
[STACK] CHECK CONDITION: NextToFerry(ABY,ABX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABY,ABZ,ABX)
[STACK] CHECK CONDITION: FirstDock(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ABZ,ABY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABY,ABZ,ABX)
[STACK] CHECK CONDITION: NextToFerry(ABZ,ABY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ABZ,ACA,ABY)
[STACK] CHECK CONDITION: FirstDock(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACA,ABZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ABZ,ACA,ABY)
[STACK] CHECK CONDITION: NextToFerry(ACA,ABZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACA,ACB,ABZ)
[STACK] CHECK CONDITION: FirstDock(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ABZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACB,ACA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACA,ACB,ABZ)
[STACK] CHECK CONDITION: NextToFerry(ACB,ACA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACB,ACC,ACA)
[STACK] CHECK CONDITION: FirstDock(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACC,ACB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACB,ACC,ACA)
[STACK] CHECK CONDITION: NextToFerry(ACC,ACB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACC,ACD,ACB)
[STACK] CHECK CONDITION: FirstDock(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACD,ACC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACC,ACD,ACB)
[STACK] CHECK CONDITION: NextToFerry(ACD,ACC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACD,ACE,ACC)
[STACK] CHECK CONDITION: FirstDock(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACE,ACD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACD,ACE,ACC)
[STACK] CHECK CONDITION: NextToFerry(ACE,ACD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACE,ACF,ACD)
[STACK] CHECK CONDITION: FirstDock(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACF,ACE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACE,ACF,ACD)
[STACK] CHECK CONDITION: NextToFerry(ACF,ACE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACF,ACG,ACE)
[STACK] CHECK CONDITION: FirstDock(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACG,ACF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACF,ACG,ACE)
[STACK] CHECK CONDITION: NextToFerry(ACG,ACF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACG,ACH,ACF)
[STACK] CHECK CONDITION: FirstDock(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACH,ACG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACG,ACH,ACF)
[STACK] CHECK CONDITION: NextToFerry(ACH,ACG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACH,ACI,ACG)
[STACK] CHECK CONDITION: FirstDock(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACI,ACH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACH,ACI,ACG)
[STACK] CHECK CONDITION: NextToFerry(ACI,ACH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACI,ACJ,ACH)
[STACK] CHECK CONDITION: FirstDock(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACJ,ACI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACI,ACJ,ACH)
[STACK] CHECK CONDITION: NextToFerry(ACJ,ACI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACJ,ACK,ACI)
[STACK] CHECK CONDITION: FirstDock(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACK,ACJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACJ,ACK,ACI)
[STACK] CHECK CONDITION: NextToFerry(ACK,ACJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACK,ACL,ACJ)
[STACK] CHECK CONDITION: FirstDock(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACL,ACK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACK,ACL,ACJ)
[STACK] CHECK CONDITION: NextToFerry(ACL,ACK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACL,ACM,ACK)
[STACK] CHECK CONDITION: FirstDock(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACM,ACL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACL,ACM,ACK)
[STACK] CHECK CONDITION: NextToFerry(ACM,ACL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACM,ACN,ACL)
[STACK] CHECK CONDITION: FirstDock(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACN,ACM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACM,ACN,ACL)
[STACK] CHECK CONDITION: NextToFerry(ACN,ACM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACN,ACO,ACM)
[STACK] CHECK CONDITION: FirstDock(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACO,ACN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACN,ACO,ACM)
[STACK] CHECK CONDITION: NextToFerry(ACO,ACN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACO,ACP,ACN)
[STACK] CHECK CONDITION: FirstDock(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACP,ACO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACO,ACP,ACN)
[STACK] CHECK CONDITION: NextToFerry(ACP,ACO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACP,ACQ,ACO)
[STACK] CHECK CONDITION: FirstDock(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACQ,ACP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACP,ACQ,ACO)
[STACK] CHECK CONDITION: NextToFerry(ACQ,ACP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACQ,ACR,ACP)
[STACK] CHECK CONDITION: FirstDock(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACR,ACQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACQ,ACR,ACP)
[STACK] CHECK CONDITION: NextToFerry(ACR,ACQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACR,ACS,ACQ)
[STACK] CHECK CONDITION: FirstDock(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACS,ACR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACR,ACS,ACQ)
[STACK] CHECK CONDITION: NextToFerry(ACS,ACR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACS,ACT,ACR)
[STACK] CHECK CONDITION: FirstDock(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACT,ACS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACS,ACT,ACR)
[STACK] CHECK CONDITION: NextToFerry(ACT,ACS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACT,ACU,ACS)
[STACK] CHECK CONDITION: FirstDock(ACT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACU,ACT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACT,ACU,ACS)
[STACK] CHECK CONDITION: NextToFerry(ACU,ACT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACU,ACV,ACT)
[STACK] CHECK CONDITION: FirstDock(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACV,ACU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACU,ACV,ACT)
[STACK] CHECK CONDITION: NextToFerry(ACV,ACU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACV,ACW,ACU)
[STACK] CHECK CONDITION: FirstDock(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACW,ACV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACV,ACW,ACU)
[STACK] CHECK CONDITION: NextToFerry(ACW,ACV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACW,ACX,ACV)
[STACK] CHECK CONDITION: FirstDock(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACX,ACW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACW,ACX,ACV)
[STACK] CHECK CONDITION: NextToFerry(ACX,ACW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACX,ACY,ACW)
[STACK] CHECK CONDITION: FirstDock(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACY,ACX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACX,ACY,ACW)
[STACK] CHECK CONDITION: NextToFerry(ACY,ACX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACY,ACZ,ACX)
[STACK] CHECK CONDITION: FirstDock(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ACZ,ACY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACY,ACZ,ACX)
[STACK] CHECK CONDITION: NextToFerry(ACZ,ACY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ACZ,ADA,ACY)
[STACK] CHECK CONDITION: FirstDock(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADA,ACZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ACZ,ADA,ACY)
[STACK] CHECK CONDITION: NextToFerry(ADA,ACZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADA,ADB,ACZ)
[STACK] CHECK CONDITION: FirstDock(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ACZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADB,ADA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADA,ADB,ACZ)
[STACK] CHECK CONDITION: NextToFerry(ADB,ADA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADB,ADC,ADA)
[STACK] CHECK CONDITION: FirstDock(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADC,ADB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADB,ADC,ADA)
[STACK] CHECK CONDITION: NextToFerry(ADC,ADB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADC,ADD,ADB)
[STACK] CHECK CONDITION: FirstDock(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADD,ADC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADC,ADD,ADB)
[STACK] CHECK CONDITION: NextToFerry(ADD,ADC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADD,ADE,ADC)
[STACK] CHECK CONDITION: FirstDock(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADE,ADD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADD,ADE,ADC)
[STACK] CHECK CONDITION: NextToFerry(ADE,ADD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADE,ADF,ADD)
[STACK] CHECK CONDITION: FirstDock(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADF,ADE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADE,ADF,ADD)
[STACK] CHECK CONDITION: NextToFerry(ADF,ADE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADF,ADG,ADE)
[STACK] CHECK CONDITION: FirstDock(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADG,ADF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADF,ADG,ADE)
[STACK] CHECK CONDITION: NextToFerry(ADG,ADF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADG,ADH,ADF)
[STACK] CHECK CONDITION: FirstDock(ADG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADH,ADG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADG,ADH,ADF)
[STACK] CHECK CONDITION: NextToFerry(ADH,ADG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADH,ADI,ADG)
[STACK] CHECK CONDITION: FirstDock(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADI,ADH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADH,ADI,ADG)
[STACK] CHECK CONDITION: NextToFerry(ADI,ADH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADI,ADJ,ADH)
[STACK] CHECK CONDITION: FirstDock(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADJ,ADI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADI,ADJ,ADH)
[STACK] CHECK CONDITION: NextToFerry(ADJ,ADI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADJ,ADK,ADI)
[STACK] CHECK CONDITION: FirstDock(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADK,ADJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADJ,ADK,ADI)
[STACK] CHECK CONDITION: NextToFerry(ADK,ADJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADK,ADL,ADJ)
[STACK] CHECK CONDITION: FirstDock(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADL,ADK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADK,ADL,ADJ)
[STACK] CHECK CONDITION: NextToFerry(ADL,ADK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADL,ADM,ADK)
[STACK] CHECK CONDITION: FirstDock(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADM,ADL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADL,ADM,ADK)
[STACK] CHECK CONDITION: NextToFerry(ADM,ADL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADM,ADN,ADL)
[STACK] CHECK CONDITION: FirstDock(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADN,ADM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADM,ADN,ADL)
[STACK] CHECK CONDITION: NextToFerry(ADN,ADM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADN,ADO,ADM)
[STACK] CHECK CONDITION: FirstDock(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADO,ADN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADN,ADO,ADM)
[STACK] CHECK CONDITION: NextToFerry(ADO,ADN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADO,ADP,ADN)
[STACK] CHECK CONDITION: FirstDock(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADP,ADO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADO,ADP,ADN)
[STACK] CHECK CONDITION: NextToFerry(ADP,ADO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADP,ADQ,ADO)
[STACK] CHECK CONDITION: FirstDock(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADQ,ADP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADP,ADQ,ADO)
[STACK] CHECK CONDITION: NextToFerry(ADQ,ADP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADQ,ADR,ADP)
[STACK] CHECK CONDITION: FirstDock(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADR,ADQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADQ,ADR,ADP)
[STACK] CHECK CONDITION: NextToFerry(ADR,ADQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADR,ADS,ADQ)
[STACK] CHECK CONDITION: FirstDock(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADS,ADR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADR,ADS,ADQ)
[STACK] CHECK CONDITION: NextToFerry(ADS,ADR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADS,ADT,ADR)
[STACK] CHECK CONDITION: FirstDock(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADT,ADS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADS,ADT,ADR)
[STACK] CHECK CONDITION: NextToFerry(ADT,ADS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADT,ADU,ADS)
[STACK] CHECK CONDITION: FirstDock(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADU,ADT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADT,ADU,ADS)
[STACK] CHECK CONDITION: NextToFerry(ADU,ADT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADU,ADV,ADT)
[STACK] CHECK CONDITION: FirstDock(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADV,ADU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADU,ADV,ADT)
[STACK] CHECK CONDITION: NextToFerry(ADV,ADU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADV,ADW,ADU)
[STACK] CHECK CONDITION: FirstDock(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADW,ADV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADV,ADW,ADU)
[STACK] CHECK CONDITION: NextToFerry(ADW,ADV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADW,ADX,ADV)
[STACK] CHECK CONDITION: FirstDock(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADX,ADW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADW,ADX,ADV)
[STACK] CHECK CONDITION: NextToFerry(ADX,ADW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADX,ADY,ADW)
[STACK] CHECK CONDITION: FirstDock(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADY,ADX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADX,ADY,ADW)
[STACK] CHECK CONDITION: NextToFerry(ADY,ADX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADY,ADZ,ADX)
[STACK] CHECK CONDITION: FirstDock(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ADZ,ADY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADY,ADZ,ADX)
[STACK] CHECK CONDITION: NextToFerry(ADZ,ADY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ADZ,AEA,ADY)
[STACK] CHECK CONDITION: FirstDock(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEA,ADZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ADZ,AEA,ADY)
[STACK] CHECK CONDITION: NextToFerry(AEA,ADZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEA,AEB,ADZ)
[STACK] CHECK CONDITION: FirstDock(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ADZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEB,AEA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEA,AEB,ADZ)
[STACK] CHECK CONDITION: NextToFerry(AEB,AEA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEB,AEC,AEA)
[STACK] CHECK CONDITION: FirstDock(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEC,AEB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEB,AEC,AEA)
[STACK] CHECK CONDITION: NextToFerry(AEC,AEB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEC,AED,AEB)
[STACK] CHECK CONDITION: FirstDock(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AED,AEC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEC,AED,AEB)
[STACK] CHECK CONDITION: NextToFerry(AED,AEC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AED,AEE,AEC)
[STACK] CHECK CONDITION: FirstDock(AED)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEE,AED)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AED,AEE,AEC)
[STACK] CHECK CONDITION: NextToFerry(AEE,AED)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEE,AEF,AED)
[STACK] CHECK CONDITION: FirstDock(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AED)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEF,AEE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEE,AEF,AED)
[STACK] CHECK CONDITION: NextToFerry(AEF,AEE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEF,AEG,AEE)
[STACK] CHECK CONDITION: FirstDock(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEG,AEF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEF,AEG,AEE)
[STACK] CHECK CONDITION: NextToFerry(AEG,AEF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEG,AEH,AEF)
[STACK] CHECK CONDITION: FirstDock(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEH,AEG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEG,AEH,AEF)
[STACK] CHECK CONDITION: NextToFerry(AEH,AEG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEH,AEI,AEG)
[STACK] CHECK CONDITION: FirstDock(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEI,AEH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEH,AEI,AEG)
[STACK] CHECK CONDITION: NextToFerry(AEI,AEH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEI,AEJ,AEH)
[STACK] CHECK CONDITION: FirstDock(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEJ,AEI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEI,AEJ,AEH)
[STACK] CHECK CONDITION: NextToFerry(AEJ,AEI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEJ,AEK,AEI)
[STACK] CHECK CONDITION: FirstDock(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEK,AEJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEJ,AEK,AEI)
[STACK] CHECK CONDITION: NextToFerry(AEK,AEJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEK,AEL,AEJ)
[STACK] CHECK CONDITION: FirstDock(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEL,AEK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEK,AEL,AEJ)
[STACK] CHECK CONDITION: NextToFerry(AEL,AEK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEL,AEM,AEK)
[STACK] CHECK CONDITION: FirstDock(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEM,AEL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEL,AEM,AEK)
[STACK] CHECK CONDITION: NextToFerry(AEM,AEL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEM,AEN,AEL)
[STACK] CHECK CONDITION: FirstDock(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEN,AEM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEM,AEN,AEL)
[STACK] CHECK CONDITION: NextToFerry(AEN,AEM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEN,AEO,AEM)
[STACK] CHECK CONDITION: FirstDock(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEO,AEN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEN,AEO,AEM)
[STACK] CHECK CONDITION: NextToFerry(AEO,AEN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEO,AEP,AEN)
[STACK] CHECK CONDITION: FirstDock(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEP,AEO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEO,AEP,AEN)
[STACK] CHECK CONDITION: NextToFerry(AEP,AEO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEP,AEQ,AEO)
[STACK] CHECK CONDITION: FirstDock(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEQ,AEP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEP,AEQ,AEO)
[STACK] CHECK CONDITION: NextToFerry(AEQ,AEP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEQ,AER,AEP)
[STACK] CHECK CONDITION: FirstDock(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AER,AEQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEQ,AER,AEP)
[STACK] CHECK CONDITION: NextToFerry(AER,AEQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AER,AES,AEQ)
[STACK] CHECK CONDITION: FirstDock(AER)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AES,AER)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AER,AES,AEQ)
[STACK] CHECK CONDITION: NextToFerry(AES,AER)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AES,AET,AER)
[STACK] CHECK CONDITION: FirstDock(AES)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AER)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AET,AES)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AES,AET,AER)
[STACK] CHECK CONDITION: NextToFerry(AET,AES)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AET,AEU,AES)
[STACK] CHECK CONDITION: FirstDock(AET)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AES)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEU,AET)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AET,AEU,AES)
[STACK] CHECK CONDITION: NextToFerry(AEU,AET)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEU,AEV,AET)
[STACK] CHECK CONDITION: FirstDock(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AET)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEV,AEU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEU,AEV,AET)
[STACK] CHECK CONDITION: NextToFerry(AEV,AEU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEV,AEW,AEU)
[STACK] CHECK CONDITION: FirstDock(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEW,AEV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEV,AEW,AEU)
[STACK] CHECK CONDITION: NextToFerry(AEW,AEV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEW,AEX,AEV)
[STACK] CHECK CONDITION: FirstDock(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEX,AEW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEW,AEX,AEV)
[STACK] CHECK CONDITION: NextToFerry(AEX,AEW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEX,AEY,AEW)
[STACK] CHECK CONDITION: FirstDock(AEX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEY,AEX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEX,AEY,AEW)
[STACK] CHECK CONDITION: NextToFerry(AEY,AEX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEY,AEZ,AEX)
[STACK] CHECK CONDITION: FirstDock(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AEZ,AEY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEY,AEZ,AEX)
[STACK] CHECK CONDITION: NextToFerry(AEZ,AEY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AEZ,AFA,AEY)
[STACK] CHECK CONDITION: FirstDock(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFA,AEZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AEZ,AFA,AEY)
[STACK] CHECK CONDITION: NextToFerry(AFA,AEZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFA,AFB,AEZ)
[STACK] CHECK CONDITION: FirstDock(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AEZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFB,AFA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFA,AFB,AEZ)
[STACK] CHECK CONDITION: NextToFerry(AFB,AFA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFB,AFC,AFA)
[STACK] CHECK CONDITION: FirstDock(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFC,AFB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFB,AFC,AFA)
[STACK] CHECK CONDITION: NextToFerry(AFC,AFB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFC,AFD,AFB)
[STACK] CHECK CONDITION: FirstDock(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFD,AFC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFC,AFD,AFB)
[STACK] CHECK CONDITION: NextToFerry(AFD,AFC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFD,AFE,AFC)
[STACK] CHECK CONDITION: FirstDock(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFE,AFD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFD,AFE,AFC)
[STACK] CHECK CONDITION: NextToFerry(AFE,AFD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFE,AFF,AFD)
[STACK] CHECK CONDITION: FirstDock(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFF,AFE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFE,AFF,AFD)
[STACK] CHECK CONDITION: NextToFerry(AFF,AFE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFF,AFG,AFE)
[STACK] CHECK CONDITION: FirstDock(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFG,AFF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFF,AFG,AFE)
[STACK] CHECK CONDITION: NextToFerry(AFG,AFF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFG,AFH,AFF)
[STACK] CHECK CONDITION: FirstDock(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFH,AFG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFG,AFH,AFF)
[STACK] CHECK CONDITION: NextToFerry(AFH,AFG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFH,AFI,AFG)
[STACK] CHECK CONDITION: FirstDock(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFI,AFH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFH,AFI,AFG)
[STACK] CHECK CONDITION: NextToFerry(AFI,AFH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFI,AFJ,AFH)
[STACK] CHECK CONDITION: FirstDock(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFJ,AFI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFI,AFJ,AFH)
[STACK] CHECK CONDITION: NextToFerry(AFJ,AFI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFJ,AFK,AFI)
[STACK] CHECK CONDITION: FirstDock(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFK,AFJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFJ,AFK,AFI)
[STACK] CHECK CONDITION: NextToFerry(AFK,AFJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFK,AFL,AFJ)
[STACK] CHECK CONDITION: FirstDock(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFL,AFK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFK,AFL,AFJ)
[STACK] CHECK CONDITION: NextToFerry(AFL,AFK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFL,AFM,AFK)
[STACK] CHECK CONDITION: FirstDock(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFM,AFL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFL,AFM,AFK)
[STACK] CHECK CONDITION: NextToFerry(AFM,AFL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFM,AFN,AFL)
[STACK] CHECK CONDITION: FirstDock(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFN,AFM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFM,AFN,AFL)
[STACK] CHECK CONDITION: NextToFerry(AFN,AFM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFN,AFO,AFM)
[STACK] CHECK CONDITION: FirstDock(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFO,AFN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFN,AFO,AFM)
[STACK] CHECK CONDITION: NextToFerry(AFO,AFN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFO,AFP,AFN)
[STACK] CHECK CONDITION: FirstDock(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFP,AFO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFO,AFP,AFN)
[STACK] CHECK CONDITION: NextToFerry(AFP,AFO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFP,AFQ,AFO)
[STACK] CHECK CONDITION: FirstDock(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFQ,AFP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFP,AFQ,AFO)
[STACK] CHECK CONDITION: NextToFerry(AFQ,AFP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFQ,AFR,AFP)
[STACK] CHECK CONDITION: FirstDock(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFR,AFQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFQ,AFR,AFP)
[STACK] CHECK CONDITION: NextToFerry(AFR,AFQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFR,AFS,AFQ)
[STACK] CHECK CONDITION: FirstDock(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFS,AFR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFR,AFS,AFQ)
[STACK] CHECK CONDITION: NextToFerry(AFS,AFR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFS,AFT,AFR)
[STACK] CHECK CONDITION: FirstDock(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFT,AFS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFS,AFT,AFR)
[STACK] CHECK CONDITION: NextToFerry(AFT,AFS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFT,AFU,AFS)
[STACK] CHECK CONDITION: FirstDock(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFU,AFT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFT,AFU,AFS)
[STACK] CHECK CONDITION: NextToFerry(AFU,AFT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFU,AFV,AFT)
[STACK] CHECK CONDITION: FirstDock(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFV,AFU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFU,AFV,AFT)
[STACK] CHECK CONDITION: NextToFerry(AFV,AFU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFV,AFW,AFU)
[STACK] CHECK CONDITION: FirstDock(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFW,AFV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFV,AFW,AFU)
[STACK] CHECK CONDITION: NextToFerry(AFW,AFV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFW,AFX,AFV)
[STACK] CHECK CONDITION: FirstDock(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFX,AFW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFW,AFX,AFV)
[STACK] CHECK CONDITION: NextToFerry(AFX,AFW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFX,AFY,AFW)
[STACK] CHECK CONDITION: FirstDock(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFY,AFX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFX,AFY,AFW)
[STACK] CHECK CONDITION: NextToFerry(AFY,AFX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFY,AFZ,AFX)
[STACK] CHECK CONDITION: FirstDock(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AFZ,AFY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFY,AFZ,AFX)
[STACK] CHECK CONDITION: NextToFerry(AFZ,AFY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AFZ,AGA,AFY)
[STACK] CHECK CONDITION: FirstDock(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGA,AFZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AFZ,AGA,AFY)
[STACK] CHECK CONDITION: NextToFerry(AGA,AFZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGA,AGB,AFZ)
[STACK] CHECK CONDITION: FirstDock(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AFZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGB,AGA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGA,AGB,AFZ)
[STACK] CHECK CONDITION: NextToFerry(AGB,AGA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGB,AGC,AGA)
[STACK] CHECK CONDITION: FirstDock(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGC,AGB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGB,AGC,AGA)
[STACK] CHECK CONDITION: NextToFerry(AGC,AGB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGC,AGD,AGB)
[STACK] CHECK CONDITION: FirstDock(AGC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGD,AGC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGC,AGD,AGB)
[STACK] CHECK CONDITION: NextToFerry(AGD,AGC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGD,AGE,AGC)
[STACK] CHECK CONDITION: FirstDock(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGE,AGD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGD,AGE,AGC)
[STACK] CHECK CONDITION: NextToFerry(AGE,AGD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGE,AGF,AGD)
[STACK] CHECK CONDITION: FirstDock(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGF,AGE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGE,AGF,AGD)
[STACK] CHECK CONDITION: NextToFerry(AGF,AGE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGF,AGG,AGE)
[STACK] CHECK CONDITION: FirstDock(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGG,AGF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGF,AGG,AGE)
[STACK] CHECK CONDITION: NextToFerry(AGG,AGF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGG,AGH,AGF)
[STACK] CHECK CONDITION: FirstDock(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGH,AGG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGG,AGH,AGF)
[STACK] CHECK CONDITION: NextToFerry(AGH,AGG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGH,AGI,AGG)
[STACK] CHECK CONDITION: FirstDock(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGI,AGH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGH,AGI,AGG)
[STACK] CHECK CONDITION: NextToFerry(AGI,AGH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGI,AGJ,AGH)
[STACK] CHECK CONDITION: FirstDock(AGI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGJ,AGI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGI,AGJ,AGH)
[STACK] CHECK CONDITION: NextToFerry(AGJ,AGI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGJ,AGK,AGI)
[STACK] CHECK CONDITION: FirstDock(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGK,AGJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGJ,AGK,AGI)
[STACK] CHECK CONDITION: NextToFerry(AGK,AGJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGK,AGL,AGJ)
[STACK] CHECK CONDITION: FirstDock(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGL,AGK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGK,AGL,AGJ)
[STACK] CHECK CONDITION: NextToFerry(AGL,AGK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGL,AGM,AGK)
[STACK] CHECK CONDITION: FirstDock(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGM,AGL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGL,AGM,AGK)
[STACK] CHECK CONDITION: NextToFerry(AGM,AGL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGM,AGN,AGL)
[STACK] CHECK CONDITION: FirstDock(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGN,AGM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGM,AGN,AGL)
[STACK] CHECK CONDITION: NextToFerry(AGN,AGM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGN,AGO,AGM)
[STACK] CHECK CONDITION: FirstDock(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGO,AGN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGN,AGO,AGM)
[STACK] CHECK CONDITION: NextToFerry(AGO,AGN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGO,AGP,AGN)
[STACK] CHECK CONDITION: FirstDock(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGP,AGO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGO,AGP,AGN)
[STACK] CHECK CONDITION: NextToFerry(AGP,AGO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGP,AGQ,AGO)
[STACK] CHECK CONDITION: FirstDock(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGQ,AGP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGP,AGQ,AGO)
[STACK] CHECK CONDITION: NextToFerry(AGQ,AGP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGQ,AGR,AGP)
[STACK] CHECK CONDITION: FirstDock(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGR,AGQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGQ,AGR,AGP)
[STACK] CHECK CONDITION: NextToFerry(AGR,AGQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGR,AGS,AGQ)
[STACK] CHECK CONDITION: FirstDock(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGS,AGR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGR,AGS,AGQ)
[STACK] CHECK CONDITION: NextToFerry(AGS,AGR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGS,AGT,AGR)
[STACK] CHECK CONDITION: FirstDock(AGS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGT,AGS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGS,AGT,AGR)
[STACK] CHECK CONDITION: NextToFerry(AGT,AGS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGT,AGU,AGS)
[STACK] CHECK CONDITION: FirstDock(AGT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGU,AGT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGT,AGU,AGS)
[STACK] CHECK CONDITION: NextToFerry(AGU,AGT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGU,AGV,AGT)
[STACK] CHECK CONDITION: FirstDock(AGU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGV,AGU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGU,AGV,AGT)
[STACK] CHECK CONDITION: NextToFerry(AGV,AGU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGV,AGW,AGU)
[STACK] CHECK CONDITION: FirstDock(AGV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGW,AGV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGV,AGW,AGU)
[STACK] CHECK CONDITION: NextToFerry(AGW,AGV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGW,AGX,AGV)
[STACK] CHECK CONDITION: FirstDock(AGW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGX,AGW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGW,AGX,AGV)
[STACK] CHECK CONDITION: NextToFerry(AGX,AGW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGX,AGY,AGW)
[STACK] CHECK CONDITION: FirstDock(AGX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGY,AGX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGX,AGY,AGW)
[STACK] CHECK CONDITION: NextToFerry(AGY,AGX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGY,AGZ,AGX)
[STACK] CHECK CONDITION: FirstDock(AGY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AGZ,AGY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGY,AGZ,AGX)
[STACK] CHECK CONDITION: NextToFerry(AGZ,AGY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AGZ,AHA,AGY)
[STACK] CHECK CONDITION: FirstDock(AGZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHA,AGZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AGZ,AHA,AGY)
[STACK] CHECK CONDITION: NextToFerry(AHA,AGZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHA,AHB,AGZ)
[STACK] CHECK CONDITION: FirstDock(AHA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AGZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHB,AHA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHA,AHB,AGZ)
[STACK] CHECK CONDITION: NextToFerry(AHB,AHA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHB,AHC,AHA)
[STACK] CHECK CONDITION: FirstDock(AHB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHC,AHB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHB,AHC,AHA)
[STACK] CHECK CONDITION: NextToFerry(AHC,AHB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHC,AHD,AHB)
[STACK] CHECK CONDITION: FirstDock(AHC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHD,AHC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHC,AHD,AHB)
[STACK] CHECK CONDITION: NextToFerry(AHD,AHC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHD,AHE,AHC)
[STACK] CHECK CONDITION: FirstDock(AHD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHE,AHD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHD,AHE,AHC)
[STACK] CHECK CONDITION: NextToFerry(AHE,AHD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHE,AHF,AHD)
[STACK] CHECK CONDITION: FirstDock(AHE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHF,AHE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHE,AHF,AHD)
[STACK] CHECK CONDITION: NextToFerry(AHF,AHE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHF,AHG,AHE)
[STACK] CHECK CONDITION: FirstDock(AHF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHG,AHF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHF,AHG,AHE)
[STACK] CHECK CONDITION: NextToFerry(AHG,AHF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHG,AHH,AHF)
[STACK] CHECK CONDITION: FirstDock(AHG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHH,AHG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHG,AHH,AHF)
[STACK] CHECK CONDITION: NextToFerry(AHH,AHG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHH,AHI,AHG)
[STACK] CHECK CONDITION: FirstDock(AHH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHI,AHH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHH,AHI,AHG)
[STACK] CHECK CONDITION: NextToFerry(AHI,AHH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHI,AHJ,AHH)
[STACK] CHECK CONDITION: FirstDock(AHI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHJ,AHI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHI,AHJ,AHH)
[STACK] CHECK CONDITION: NextToFerry(AHJ,AHI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHJ,AHK,AHI)
[STACK] CHECK CONDITION: FirstDock(AHJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHK,AHJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHJ,AHK,AHI)
[STACK] CHECK CONDITION: NextToFerry(AHK,AHJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHK,AHL,AHJ)
[STACK] CHECK CONDITION: FirstDock(AHK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHL,AHK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHK,AHL,AHJ)
[STACK] CHECK CONDITION: NextToFerry(AHL,AHK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHL,AHM,AHK)
[STACK] CHECK CONDITION: FirstDock(AHL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHM,AHL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHL,AHM,AHK)
[STACK] CHECK CONDITION: NextToFerry(AHM,AHL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHM,AHN,AHL)
[STACK] CHECK CONDITION: FirstDock(AHM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHN,AHM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHM,AHN,AHL)
[STACK] CHECK CONDITION: NextToFerry(AHN,AHM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHN,AHO,AHM)
[STACK] CHECK CONDITION: FirstDock(AHN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHO,AHN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHN,AHO,AHM)
[STACK] CHECK CONDITION: NextToFerry(AHO,AHN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHO,AHP,AHN)
[STACK] CHECK CONDITION: FirstDock(AHO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHP,AHO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHO,AHP,AHN)
[STACK] CHECK CONDITION: NextToFerry(AHP,AHO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHP,AHQ,AHO)
[STACK] CHECK CONDITION: FirstDock(AHP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHQ,AHP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHP,AHQ,AHO)
[STACK] CHECK CONDITION: NextToFerry(AHQ,AHP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHQ,AHR,AHP)
[STACK] CHECK CONDITION: FirstDock(AHQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHR,AHQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHQ,AHR,AHP)
[STACK] CHECK CONDITION: NextToFerry(AHR,AHQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHR,AHS,AHQ)
[STACK] CHECK CONDITION: FirstDock(AHR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHS,AHR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHR,AHS,AHQ)
[STACK] CHECK CONDITION: NextToFerry(AHS,AHR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHS,AHT,AHR)
[STACK] CHECK CONDITION: FirstDock(AHS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHT,AHS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHS,AHT,AHR)
[STACK] CHECK CONDITION: NextToFerry(AHT,AHS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHT,AHU,AHS)
[STACK] CHECK CONDITION: FirstDock(AHT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHU,AHT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHT,AHU,AHS)
[STACK] CHECK CONDITION: NextToFerry(AHU,AHT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHU,AHV,AHT)
[STACK] CHECK CONDITION: FirstDock(AHU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHV,AHU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHU,AHV,AHT)
[STACK] CHECK CONDITION: NextToFerry(AHV,AHU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHV,AHW,AHU)
[STACK] CHECK CONDITION: FirstDock(AHV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHW,AHV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHV,AHW,AHU)
[STACK] CHECK CONDITION: NextToFerry(AHW,AHV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHW,AHX,AHV)
[STACK] CHECK CONDITION: FirstDock(AHW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHX,AHW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHW,AHX,AHV)
[STACK] CHECK CONDITION: NextToFerry(AHX,AHW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHX,AHY,AHW)
[STACK] CHECK CONDITION: FirstDock(AHX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHY,AHX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHX,AHY,AHW)
[STACK] CHECK CONDITION: NextToFerry(AHY,AHX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHY,AHZ,AHX)
[STACK] CHECK CONDITION: FirstDock(AHY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AHZ,AHY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHY,AHZ,AHX)
[STACK] CHECK CONDITION: NextToFerry(AHZ,AHY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AHZ,AIA,AHY)
[STACK] CHECK CONDITION: FirstDock(AHZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIA,AHZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AHZ,AIA,AHY)
[STACK] CHECK CONDITION: NextToFerry(AIA,AHZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIA,AIB,AHZ)
[STACK] CHECK CONDITION: FirstDock(AIA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AHZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIB,AIA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIA,AIB,AHZ)
[STACK] CHECK CONDITION: NextToFerry(AIB,AIA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIB,AIC,AIA)
[STACK] CHECK CONDITION: FirstDock(AIB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIC,AIB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIB,AIC,AIA)
[STACK] CHECK CONDITION: NextToFerry(AIC,AIB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIC,AID,AIB)
[STACK] CHECK CONDITION: FirstDock(AIC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AID,AIC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIC,AID,AIB)
[STACK] CHECK CONDITION: NextToFerry(AID,AIC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AID,AIE,AIC)
[STACK] CHECK CONDITION: FirstDock(AID)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIE,AID)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AID,AIE,AIC)
[STACK] CHECK CONDITION: NextToFerry(AIE,AID)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIE,AIF,AID)
[STACK] CHECK CONDITION: FirstDock(AIE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AID)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIF,AIE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIE,AIF,AID)
[STACK] CHECK CONDITION: NextToFerry(AIF,AIE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIF,AIG,AIE)
[STACK] CHECK CONDITION: FirstDock(AIF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIG,AIF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIF,AIG,AIE)
[STACK] CHECK CONDITION: NextToFerry(AIG,AIF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIG,AIH,AIF)
[STACK] CHECK CONDITION: FirstDock(AIG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIH,AIG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIG,AIH,AIF)
[STACK] CHECK CONDITION: NextToFerry(AIH,AIG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIH,AII,AIG)
[STACK] CHECK CONDITION: FirstDock(AIH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AII,AIH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIH,AII,AIG)
[STACK] CHECK CONDITION: NextToFerry(AII,AIH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AII,AIJ,AIH)
[STACK] CHECK CONDITION: FirstDock(AII)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIJ,AII)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AII,AIJ,AIH)
[STACK] CHECK CONDITION: NextToFerry(AIJ,AII)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIJ,AIK,AII)
[STACK] CHECK CONDITION: FirstDock(AIJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AII)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIK,AIJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIJ,AIK,AII)
[STACK] CHECK CONDITION: NextToFerry(AIK,AIJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIK,AIL,AIJ)
[STACK] CHECK CONDITION: FirstDock(AIK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIL,AIK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIK,AIL,AIJ)
[STACK] CHECK CONDITION: NextToFerry(AIL,AIK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIL,AIM,AIK)
[STACK] CHECK CONDITION: FirstDock(AIL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIM,AIL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIL,AIM,AIK)
[STACK] CHECK CONDITION: NextToFerry(AIM,AIL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIM,AIN,AIL)
[STACK] CHECK CONDITION: FirstDock(AIM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIN,AIM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIM,AIN,AIL)
[STACK] CHECK CONDITION: NextToFerry(AIN,AIM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIN,AIO,AIM)
[STACK] CHECK CONDITION: FirstDock(AIN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIO,AIN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIN,AIO,AIM)
[STACK] CHECK CONDITION: NextToFerry(AIO,AIN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIO,AIP,AIN)
[STACK] CHECK CONDITION: FirstDock(AIO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIP,AIO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIO,AIP,AIN)
[STACK] CHECK CONDITION: NextToFerry(AIP,AIO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIP,AIQ,AIO)
[STACK] CHECK CONDITION: FirstDock(AIP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIQ,AIP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIP,AIQ,AIO)
[STACK] CHECK CONDITION: NextToFerry(AIQ,AIP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIQ,AIR,AIP)
[STACK] CHECK CONDITION: FirstDock(AIQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIR,AIQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIQ,AIR,AIP)
[STACK] CHECK CONDITION: NextToFerry(AIR,AIQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIR,AIS,AIQ)
[STACK] CHECK CONDITION: FirstDock(AIR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIS,AIR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIR,AIS,AIQ)
[STACK] CHECK CONDITION: NextToFerry(AIS,AIR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIS,AIT,AIR)
[STACK] CHECK CONDITION: FirstDock(AIS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIT,AIS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIS,AIT,AIR)
[STACK] CHECK CONDITION: NextToFerry(AIT,AIS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIT,AIU,AIS)
[STACK] CHECK CONDITION: FirstDock(AIT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIU,AIT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIT,AIU,AIS)
[STACK] CHECK CONDITION: NextToFerry(AIU,AIT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIU,AIV,AIT)
[STACK] CHECK CONDITION: FirstDock(AIU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIV,AIU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIU,AIV,AIT)
[STACK] CHECK CONDITION: NextToFerry(AIV,AIU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIV,AIW,AIU)
[STACK] CHECK CONDITION: FirstDock(AIV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIW,AIV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIV,AIW,AIU)
[STACK] CHECK CONDITION: NextToFerry(AIW,AIV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIW,AIX,AIV)
[STACK] CHECK CONDITION: FirstDock(AIW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIX,AIW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIW,AIX,AIV)
[STACK] CHECK CONDITION: NextToFerry(AIX,AIW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIX,AIY,AIW)
[STACK] CHECK CONDITION: FirstDock(AIX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIY,AIX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIX,AIY,AIW)
[STACK] CHECK CONDITION: NextToFerry(AIY,AIX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIY,AIZ,AIX)
[STACK] CHECK CONDITION: FirstDock(AIY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AIZ,AIY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIY,AIZ,AIX)
[STACK] CHECK CONDITION: NextToFerry(AIZ,AIY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AIZ,AJA,AIY)
[STACK] CHECK CONDITION: FirstDock(AIZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJA,AIZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AIZ,AJA,AIY)
[STACK] CHECK CONDITION: NextToFerry(AJA,AIZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJA,AJB,AIZ)
[STACK] CHECK CONDITION: FirstDock(AJA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AIZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJB,AJA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJA,AJB,AIZ)
[STACK] CHECK CONDITION: NextToFerry(AJB,AJA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJB,AJC,AJA)
[STACK] CHECK CONDITION: FirstDock(AJB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJC,AJB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJB,AJC,AJA)
[STACK] CHECK CONDITION: NextToFerry(AJC,AJB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJC,AJD,AJB)
[STACK] CHECK CONDITION: FirstDock(AJC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJD,AJC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJC,AJD,AJB)
[STACK] CHECK CONDITION: NextToFerry(AJD,AJC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJD,AJE,AJC)
[STACK] CHECK CONDITION: FirstDock(AJD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJE,AJD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJD,AJE,AJC)
[STACK] CHECK CONDITION: NextToFerry(AJE,AJD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJE,AJF,AJD)
[STACK] CHECK CONDITION: FirstDock(AJE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJF,AJE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJE,AJF,AJD)
[STACK] CHECK CONDITION: NextToFerry(AJF,AJE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJF,AJG,AJE)
[STACK] CHECK CONDITION: FirstDock(AJF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJG,AJF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJF,AJG,AJE)
[STACK] CHECK CONDITION: NextToFerry(AJG,AJF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJG,AJH,AJF)
[STACK] CHECK CONDITION: FirstDock(AJG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJH,AJG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJG,AJH,AJF)
[STACK] CHECK CONDITION: NextToFerry(AJH,AJG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJH,AJI,AJG)
[STACK] CHECK CONDITION: FirstDock(AJH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJI,AJH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJH,AJI,AJG)
[STACK] CHECK CONDITION: NextToFerry(AJI,AJH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJI,AJJ,AJH)
[STACK] CHECK CONDITION: FirstDock(AJI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJJ,AJI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJI,AJJ,AJH)
[STACK] CHECK CONDITION: NextToFerry(AJJ,AJI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJJ,AJK,AJI)
[STACK] CHECK CONDITION: FirstDock(AJJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJK,AJJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJJ,AJK,AJI)
[STACK] CHECK CONDITION: NextToFerry(AJK,AJJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJK,AJL,AJJ)
[STACK] CHECK CONDITION: FirstDock(AJK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJL,AJK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJK,AJL,AJJ)
[STACK] CHECK CONDITION: NextToFerry(AJL,AJK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJL,AJM,AJK)
[STACK] CHECK CONDITION: FirstDock(AJL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJM,AJL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJL,AJM,AJK)
[STACK] CHECK CONDITION: NextToFerry(AJM,AJL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJM,AJN,AJL)
[STACK] CHECK CONDITION: FirstDock(AJM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJN,AJM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJM,AJN,AJL)
[STACK] CHECK CONDITION: NextToFerry(AJN,AJM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJN,AJO,AJM)
[STACK] CHECK CONDITION: FirstDock(AJN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJO,AJN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJN,AJO,AJM)
[STACK] CHECK CONDITION: NextToFerry(AJO,AJN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJO,AJP,AJN)
[STACK] CHECK CONDITION: FirstDock(AJO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJP,AJO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJO,AJP,AJN)
[STACK] CHECK CONDITION: NextToFerry(AJP,AJO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJP,AJQ,AJO)
[STACK] CHECK CONDITION: FirstDock(AJP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJQ,AJP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJP,AJQ,AJO)
[STACK] CHECK CONDITION: NextToFerry(AJQ,AJP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJQ,AJR,AJP)
[STACK] CHECK CONDITION: FirstDock(AJQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJR,AJQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJQ,AJR,AJP)
[STACK] CHECK CONDITION: NextToFerry(AJR,AJQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJR,AJS,AJQ)
[STACK] CHECK CONDITION: FirstDock(AJR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJS,AJR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJR,AJS,AJQ)
[STACK] CHECK CONDITION: NextToFerry(AJS,AJR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJS,AJT,AJR)
[STACK] CHECK CONDITION: FirstDock(AJS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJT,AJS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJS,AJT,AJR)
[STACK] CHECK CONDITION: NextToFerry(AJT,AJS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJT,AJU,AJS)
[STACK] CHECK CONDITION: FirstDock(AJT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJU,AJT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJT,AJU,AJS)
[STACK] CHECK CONDITION: NextToFerry(AJU,AJT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJU,AJV,AJT)
[STACK] CHECK CONDITION: FirstDock(AJU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJV,AJU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJU,AJV,AJT)
[STACK] CHECK CONDITION: NextToFerry(AJV,AJU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJV,AJW,AJU)
[STACK] CHECK CONDITION: FirstDock(AJV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJW,AJV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJV,AJW,AJU)
[STACK] CHECK CONDITION: NextToFerry(AJW,AJV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJW,AJX,AJV)
[STACK] CHECK CONDITION: FirstDock(AJW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJX,AJW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJW,AJX,AJV)
[STACK] CHECK CONDITION: NextToFerry(AJX,AJW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJX,AJY,AJW)
[STACK] CHECK CONDITION: FirstDock(AJX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJY,AJX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJX,AJY,AJW)
[STACK] CHECK CONDITION: NextToFerry(AJY,AJX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJY,AJZ,AJX)
[STACK] CHECK CONDITION: FirstDock(AJY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AJZ,AJY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJY,AJZ,AJX)
[STACK] CHECK CONDITION: NextToFerry(AJZ,AJY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AJZ,AKA,AJY)
[STACK] CHECK CONDITION: FirstDock(AJZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKA,AJZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AJZ,AKA,AJY)
[STACK] CHECK CONDITION: NextToFerry(AKA,AJZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKA,AKB,AJZ)
[STACK] CHECK CONDITION: FirstDock(AKA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AJZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKB,AKA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKA,AKB,AJZ)
[STACK] CHECK CONDITION: NextToFerry(AKB,AKA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKB,AKC,AKA)
[STACK] CHECK CONDITION: FirstDock(AKB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKC,AKB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKB,AKC,AKA)
[STACK] CHECK CONDITION: NextToFerry(AKC,AKB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKC,AKD,AKB)
[STACK] CHECK CONDITION: FirstDock(AKC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKD,AKC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKC,AKD,AKB)
[STACK] CHECK CONDITION: NextToFerry(AKD,AKC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKD,AKE,AKC)
[STACK] CHECK CONDITION: FirstDock(AKD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKE,AKD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKD,AKE,AKC)
[STACK] CHECK CONDITION: NextToFerry(AKE,AKD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKE,AKF,AKD)
[STACK] CHECK CONDITION: FirstDock(AKE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKF,AKE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKE,AKF,AKD)
[STACK] CHECK CONDITION: NextToFerry(AKF,AKE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKF,AKG,AKE)
[STACK] CHECK CONDITION: FirstDock(AKF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKG,AKF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKF,AKG,AKE)
[STACK] CHECK CONDITION: NextToFerry(AKG,AKF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKG,AKH,AKF)
[STACK] CHECK CONDITION: FirstDock(AKG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKH,AKG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKG,AKH,AKF)
[STACK] CHECK CONDITION: NextToFerry(AKH,AKG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKH,AKI,AKG)
[STACK] CHECK CONDITION: FirstDock(AKH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKI,AKH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKH,AKI,AKG)
[STACK] CHECK CONDITION: NextToFerry(AKI,AKH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKI,AKJ,AKH)
[STACK] CHECK CONDITION: FirstDock(AKI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKJ,AKI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKI,AKJ,AKH)
[STACK] CHECK CONDITION: NextToFerry(AKJ,AKI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKJ,AKK,AKI)
[STACK] CHECK CONDITION: FirstDock(AKJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKK,AKJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKJ,AKK,AKI)
[STACK] CHECK CONDITION: NextToFerry(AKK,AKJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKK,AKL,AKJ)
[STACK] CHECK CONDITION: FirstDock(AKK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKL,AKK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKK,AKL,AKJ)
[STACK] CHECK CONDITION: NextToFerry(AKL,AKK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKL,AKM,AKK)
[STACK] CHECK CONDITION: FirstDock(AKL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKM,AKL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKL,AKM,AKK)
[STACK] CHECK CONDITION: NextToFerry(AKM,AKL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKM,AKN,AKL)
[STACK] CHECK CONDITION: FirstDock(AKM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKN,AKM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKM,AKN,AKL)
[STACK] CHECK CONDITION: NextToFerry(AKN,AKM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKN,AKO,AKM)
[STACK] CHECK CONDITION: FirstDock(AKN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKO,AKN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKN,AKO,AKM)
[STACK] CHECK CONDITION: NextToFerry(AKO,AKN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKO,AKP,AKN)
[STACK] CHECK CONDITION: FirstDock(AKO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKP,AKO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKO,AKP,AKN)
[STACK] CHECK CONDITION: NextToFerry(AKP,AKO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKP,AKQ,AKO)
[STACK] CHECK CONDITION: FirstDock(AKP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKQ,AKP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKP,AKQ,AKO)
[STACK] CHECK CONDITION: NextToFerry(AKQ,AKP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKQ,AKR,AKP)
[STACK] CHECK CONDITION: FirstDock(AKQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKR,AKQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKQ,AKR,AKP)
[STACK] CHECK CONDITION: NextToFerry(AKR,AKQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKR,AKS,AKQ)
[STACK] CHECK CONDITION: FirstDock(AKR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKS,AKR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKR,AKS,AKQ)
[STACK] CHECK CONDITION: NextToFerry(AKS,AKR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKS,AKT,AKR)
[STACK] CHECK CONDITION: FirstDock(AKS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKT,AKS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKS,AKT,AKR)
[STACK] CHECK CONDITION: NextToFerry(AKT,AKS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKT,AKU,AKS)
[STACK] CHECK CONDITION: FirstDock(AKT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKU,AKT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKT,AKU,AKS)
[STACK] CHECK CONDITION: NextToFerry(AKU,AKT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKU,AKV,AKT)
[STACK] CHECK CONDITION: FirstDock(AKU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKV,AKU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKU,AKV,AKT)
[STACK] CHECK CONDITION: NextToFerry(AKV,AKU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKV,AKW,AKU)
[STACK] CHECK CONDITION: FirstDock(AKV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKW,AKV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKV,AKW,AKU)
[STACK] CHECK CONDITION: NextToFerry(AKW,AKV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKW,AKX,AKV)
[STACK] CHECK CONDITION: FirstDock(AKW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKX,AKW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKW,AKX,AKV)
[STACK] CHECK CONDITION: NextToFerry(AKX,AKW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKX,AKY,AKW)
[STACK] CHECK CONDITION: FirstDock(AKX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKY,AKX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKX,AKY,AKW)
[STACK] CHECK CONDITION: NextToFerry(AKY,AKX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKY,AKZ,AKX)
[STACK] CHECK CONDITION: FirstDock(AKY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AKZ,AKY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKY,AKZ,AKX)
[STACK] CHECK CONDITION: NextToFerry(AKZ,AKY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AKZ,ALA,AKY)
[STACK] CHECK CONDITION: FirstDock(AKZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALA,AKZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AKZ,ALA,AKY)
[STACK] CHECK CONDITION: NextToFerry(ALA,AKZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALA,ALB,AKZ)
[STACK] CHECK CONDITION: FirstDock(ALA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AKZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALB,ALA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALA,ALB,AKZ)
[STACK] CHECK CONDITION: NextToFerry(ALB,ALA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALB,ALC,ALA)
[STACK] CHECK CONDITION: FirstDock(ALB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALC,ALB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALB,ALC,ALA)
[STACK] CHECK CONDITION: NextToFerry(ALC,ALB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALC,ALD,ALB)
[STACK] CHECK CONDITION: FirstDock(ALC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALD,ALC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALC,ALD,ALB)
[STACK] CHECK CONDITION: NextToFerry(ALD,ALC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALD,ALE,ALC)
[STACK] CHECK CONDITION: FirstDock(ALD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALE,ALD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALD,ALE,ALC)
[STACK] CHECK CONDITION: NextToFerry(ALE,ALD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALE,ALF,ALD)
[STACK] CHECK CONDITION: FirstDock(ALE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALF,ALE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALE,ALF,ALD)
[STACK] CHECK CONDITION: NextToFerry(ALF,ALE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALF,ALG,ALE)
[STACK] CHECK CONDITION: FirstDock(ALF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALG,ALF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALF,ALG,ALE)
[STACK] CHECK CONDITION: NextToFerry(ALG,ALF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALG,ALH,ALF)
[STACK] CHECK CONDITION: FirstDock(ALG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALH,ALG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALG,ALH,ALF)
[STACK] CHECK CONDITION: NextToFerry(ALH,ALG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALH,ALI,ALG)
[STACK] CHECK CONDITION: FirstDock(ALH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALI,ALH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALH,ALI,ALG)
[STACK] CHECK CONDITION: NextToFerry(ALI,ALH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALI,ALJ,ALH)
[STACK] CHECK CONDITION: FirstDock(ALI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALJ,ALI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALI,ALJ,ALH)
[STACK] CHECK CONDITION: NextToFerry(ALJ,ALI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALJ,ALK,ALI)
[STACK] CHECK CONDITION: FirstDock(ALJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALK,ALJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALJ,ALK,ALI)
[STACK] CHECK CONDITION: NextToFerry(ALK,ALJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALK,ALL,ALJ)
[STACK] CHECK CONDITION: FirstDock(ALK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALL,ALK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALK,ALL,ALJ)
[STACK] CHECK CONDITION: NextToFerry(ALL,ALK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALL,ALM,ALK)
[STACK] CHECK CONDITION: FirstDock(ALL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALM,ALL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALL,ALM,ALK)
[STACK] CHECK CONDITION: NextToFerry(ALM,ALL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALM,ALN,ALL)
[STACK] CHECK CONDITION: FirstDock(ALM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALN,ALM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALM,ALN,ALL)
[STACK] CHECK CONDITION: NextToFerry(ALN,ALM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALN,ALO,ALM)
[STACK] CHECK CONDITION: FirstDock(ALN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALO,ALN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALN,ALO,ALM)
[STACK] CHECK CONDITION: NextToFerry(ALO,ALN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALO,ALP,ALN)
[STACK] CHECK CONDITION: FirstDock(ALO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALP,ALO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALO,ALP,ALN)
[STACK] CHECK CONDITION: NextToFerry(ALP,ALO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALP,ALQ,ALO)
[STACK] CHECK CONDITION: FirstDock(ALP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALQ,ALP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALP,ALQ,ALO)
[STACK] CHECK CONDITION: NextToFerry(ALQ,ALP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALQ,ALR,ALP)
[STACK] CHECK CONDITION: FirstDock(ALQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALR,ALQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALQ,ALR,ALP)
[STACK] CHECK CONDITION: NextToFerry(ALR,ALQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALR,ALS,ALQ)
[STACK] CHECK CONDITION: FirstDock(ALR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALS,ALR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALR,ALS,ALQ)
[STACK] CHECK CONDITION: NextToFerry(ALS,ALR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALS,ALT,ALR)
[STACK] CHECK CONDITION: FirstDock(ALS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALT,ALS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALS,ALT,ALR)
[STACK] CHECK CONDITION: NextToFerry(ALT,ALS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALT,ALU,ALS)
[STACK] CHECK CONDITION: FirstDock(ALT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALU,ALT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALT,ALU,ALS)
[STACK] CHECK CONDITION: NextToFerry(ALU,ALT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALU,ALV,ALT)
[STACK] CHECK CONDITION: FirstDock(ALU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALV,ALU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALU,ALV,ALT)
[STACK] CHECK CONDITION: NextToFerry(ALV,ALU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALV,ALW,ALU)
[STACK] CHECK CONDITION: FirstDock(ALV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALW,ALV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALV,ALW,ALU)
[STACK] CHECK CONDITION: NextToFerry(ALW,ALV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALW,ALX,ALV)
[STACK] CHECK CONDITION: FirstDock(ALW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALX,ALW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALW,ALX,ALV)
[STACK] CHECK CONDITION: NextToFerry(ALX,ALW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALX,ALY,ALW)
[STACK] CHECK CONDITION: FirstDock(ALX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALY,ALX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALX,ALY,ALW)
[STACK] CHECK CONDITION: NextToFerry(ALY,ALX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALY,ALZ,ALX)
[STACK] CHECK CONDITION: FirstDock(ALY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ALZ,ALY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALY,ALZ,ALX)
[STACK] CHECK CONDITION: NextToFerry(ALZ,ALY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ALZ,AMA,ALY)
[STACK] CHECK CONDITION: FirstDock(ALZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMA,ALZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ALZ,AMA,ALY)
[STACK] CHECK CONDITION: NextToFerry(AMA,ALZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMA,AMB,ALZ)
[STACK] CHECK CONDITION: FirstDock(AMA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ALZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMB,AMA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMA,AMB,ALZ)
[STACK] CHECK CONDITION: NextToFerry(AMB,AMA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMB,AMC,AMA)
[STACK] CHECK CONDITION: FirstDock(AMB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMC,AMB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMB,AMC,AMA)
[STACK] CHECK CONDITION: NextToFerry(AMC,AMB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMC,AMD,AMB)
[STACK] CHECK CONDITION: FirstDock(AMC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMD,AMC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMC,AMD,AMB)
[STACK] CHECK CONDITION: NextToFerry(AMD,AMC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMD,AME,AMC)
[STACK] CHECK CONDITION: FirstDock(AMD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AME,AMD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMD,AME,AMC)
[STACK] CHECK CONDITION: NextToFerry(AME,AMD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AME,AMF,AMD)
[STACK] CHECK CONDITION: FirstDock(AME)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMF,AME)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AME,AMF,AMD)
[STACK] CHECK CONDITION: NextToFerry(AMF,AME)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMF,AMG,AME)
[STACK] CHECK CONDITION: FirstDock(AMF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AME)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMG,AMF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMF,AMG,AME)
[STACK] CHECK CONDITION: NextToFerry(AMG,AMF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMG,AMH,AMF)
[STACK] CHECK CONDITION: FirstDock(AMG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMH,AMG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMG,AMH,AMF)
[STACK] CHECK CONDITION: NextToFerry(AMH,AMG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMH,AMI,AMG)
[STACK] CHECK CONDITION: FirstDock(AMH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMI,AMH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMH,AMI,AMG)
[STACK] CHECK CONDITION: NextToFerry(AMI,AMH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMI,AMJ,AMH)
[STACK] CHECK CONDITION: FirstDock(AMI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMJ,AMI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMI,AMJ,AMH)
[STACK] CHECK CONDITION: NextToFerry(AMJ,AMI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMJ,AMK,AMI)
[STACK] CHECK CONDITION: FirstDock(AMJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMK,AMJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMJ,AMK,AMI)
[STACK] CHECK CONDITION: NextToFerry(AMK,AMJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMK,AML,AMJ)
[STACK] CHECK CONDITION: FirstDock(AMK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AML,AMK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMK,AML,AMJ)
[STACK] CHECK CONDITION: NextToFerry(AML,AMK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AML,AMM,AMK)
[STACK] CHECK CONDITION: FirstDock(AML)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMM,AML)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AML,AMM,AMK)
[STACK] CHECK CONDITION: NextToFerry(AMM,AML)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMM,AMN,AML)
[STACK] CHECK CONDITION: FirstDock(AMM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AML)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMN,AMM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMM,AMN,AML)
[STACK] CHECK CONDITION: NextToFerry(AMN,AMM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMN,AMO,AMM)
[STACK] CHECK CONDITION: FirstDock(AMN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMO,AMN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMN,AMO,AMM)
[STACK] CHECK CONDITION: NextToFerry(AMO,AMN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMO,AMP,AMN)
[STACK] CHECK CONDITION: FirstDock(AMO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMP,AMO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMO,AMP,AMN)
[STACK] CHECK CONDITION: NextToFerry(AMP,AMO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMP,AMQ,AMO)
[STACK] CHECK CONDITION: FirstDock(AMP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMQ,AMP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMP,AMQ,AMO)
[STACK] CHECK CONDITION: NextToFerry(AMQ,AMP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMQ,AMR,AMP)
[STACK] CHECK CONDITION: FirstDock(AMQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMR,AMQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMQ,AMR,AMP)
[STACK] CHECK CONDITION: NextToFerry(AMR,AMQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMR,AMS,AMQ)
[STACK] CHECK CONDITION: FirstDock(AMR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMS,AMR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMR,AMS,AMQ)
[STACK] CHECK CONDITION: NextToFerry(AMS,AMR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMS,AMT,AMR)
[STACK] CHECK CONDITION: FirstDock(AMS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMT,AMS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMS,AMT,AMR)
[STACK] CHECK CONDITION: NextToFerry(AMT,AMS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMT,AMU,AMS)
[STACK] CHECK CONDITION: FirstDock(AMT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMU,AMT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMT,AMU,AMS)
[STACK] CHECK CONDITION: NextToFerry(AMU,AMT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMU,AMV,AMT)
[STACK] CHECK CONDITION: FirstDock(AMU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMV,AMU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMU,AMV,AMT)
[STACK] CHECK CONDITION: NextToFerry(AMV,AMU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMV,AMW,AMU)
[STACK] CHECK CONDITION: FirstDock(AMV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMW,AMV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMV,AMW,AMU)
[STACK] CHECK CONDITION: NextToFerry(AMW,AMV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMW,AMX,AMV)
[STACK] CHECK CONDITION: FirstDock(AMW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMX,AMW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMW,AMX,AMV)
[STACK] CHECK CONDITION: NextToFerry(AMX,AMW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMX,AMY,AMW)
[STACK] CHECK CONDITION: FirstDock(AMX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMY,AMX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMX,AMY,AMW)
[STACK] CHECK CONDITION: NextToFerry(AMY,AMX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMY,AMZ,AMX)
[STACK] CHECK CONDITION: FirstDock(AMY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AMZ,AMY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMY,AMZ,AMX)
[STACK] CHECK CONDITION: NextToFerry(AMZ,AMY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AMZ,ANA,AMY)
[STACK] CHECK CONDITION: FirstDock(AMZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANA,AMZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AMZ,ANA,AMY)
[STACK] CHECK CONDITION: NextToFerry(ANA,AMZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANA,ANB,AMZ)
[STACK] CHECK CONDITION: FirstDock(ANA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AMZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANB,ANA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANA,ANB,AMZ)
[STACK] CHECK CONDITION: NextToFerry(ANB,ANA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANB,ANC,ANA)
[STACK] CHECK CONDITION: FirstDock(ANB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANC,ANB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANB,ANC,ANA)
[STACK] CHECK CONDITION: NextToFerry(ANC,ANB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANC,AND,ANB)
[STACK] CHECK CONDITION: FirstDock(ANC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AND,ANC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANC,AND,ANB)
[STACK] CHECK CONDITION: NextToFerry(AND,ANC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AND,ANE,ANC)
[STACK] CHECK CONDITION: FirstDock(AND)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANE,AND)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AND,ANE,ANC)
[STACK] CHECK CONDITION: NextToFerry(ANE,AND)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANE,ANF,AND)
[STACK] CHECK CONDITION: FirstDock(ANE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AND)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANF,ANE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANE,ANF,AND)
[STACK] CHECK CONDITION: NextToFerry(ANF,ANE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANF,ANG,ANE)
[STACK] CHECK CONDITION: FirstDock(ANF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANG,ANF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANF,ANG,ANE)
[STACK] CHECK CONDITION: NextToFerry(ANG,ANF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANG,ANH,ANF)
[STACK] CHECK CONDITION: FirstDock(ANG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANH,ANG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANG,ANH,ANF)
[STACK] CHECK CONDITION: NextToFerry(ANH,ANG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANH,ANI,ANG)
[STACK] CHECK CONDITION: FirstDock(ANH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANI,ANH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANH,ANI,ANG)
[STACK] CHECK CONDITION: NextToFerry(ANI,ANH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANI,ANJ,ANH)
[STACK] CHECK CONDITION: FirstDock(ANI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANJ,ANI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANI,ANJ,ANH)
[STACK] CHECK CONDITION: NextToFerry(ANJ,ANI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANJ,ANK,ANI)
[STACK] CHECK CONDITION: FirstDock(ANJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANK,ANJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANJ,ANK,ANI)
[STACK] CHECK CONDITION: NextToFerry(ANK,ANJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANK,ANL,ANJ)
[STACK] CHECK CONDITION: FirstDock(ANK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANL,ANK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANK,ANL,ANJ)
[STACK] CHECK CONDITION: NextToFerry(ANL,ANK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANL,ANM,ANK)
[STACK] CHECK CONDITION: FirstDock(ANL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANM,ANL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANL,ANM,ANK)
[STACK] CHECK CONDITION: NextToFerry(ANM,ANL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANM,ANN,ANL)
[STACK] CHECK CONDITION: FirstDock(ANM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANN,ANM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANM,ANN,ANL)
[STACK] CHECK CONDITION: NextToFerry(ANN,ANM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANN,ANO,ANM)
[STACK] CHECK CONDITION: FirstDock(ANN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANO,ANN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANN,ANO,ANM)
[STACK] CHECK CONDITION: NextToFerry(ANO,ANN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANO,ANP,ANN)
[STACK] CHECK CONDITION: FirstDock(ANO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANP,ANO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANO,ANP,ANN)
[STACK] CHECK CONDITION: NextToFerry(ANP,ANO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANP,ANQ,ANO)
[STACK] CHECK CONDITION: FirstDock(ANP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANQ,ANP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANP,ANQ,ANO)
[STACK] CHECK CONDITION: NextToFerry(ANQ,ANP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANQ,ANR,ANP)
[STACK] CHECK CONDITION: FirstDock(ANQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANR,ANQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANQ,ANR,ANP)
[STACK] CHECK CONDITION: NextToFerry(ANR,ANQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANR,ANS,ANQ)
[STACK] CHECK CONDITION: FirstDock(ANR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANS,ANR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANR,ANS,ANQ)
[STACK] CHECK CONDITION: NextToFerry(ANS,ANR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANS,ANT,ANR)
[STACK] CHECK CONDITION: FirstDock(ANS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANT,ANS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANS,ANT,ANR)
[STACK] CHECK CONDITION: NextToFerry(ANT,ANS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANT,ANU,ANS)
[STACK] CHECK CONDITION: FirstDock(ANT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANU,ANT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANT,ANU,ANS)
[STACK] CHECK CONDITION: NextToFerry(ANU,ANT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANU,ANV,ANT)
[STACK] CHECK CONDITION: FirstDock(ANU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANV,ANU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANU,ANV,ANT)
[STACK] CHECK CONDITION: NextToFerry(ANV,ANU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANV,ANW,ANU)
[STACK] CHECK CONDITION: FirstDock(ANV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANW,ANV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANV,ANW,ANU)
[STACK] CHECK CONDITION: NextToFerry(ANW,ANV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANW,ANX,ANV)
[STACK] CHECK CONDITION: FirstDock(ANW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANX,ANW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANW,ANX,ANV)
[STACK] CHECK CONDITION: NextToFerry(ANX,ANW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANX,ANY,ANW)
[STACK] CHECK CONDITION: FirstDock(ANX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANY,ANX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANX,ANY,ANW)
[STACK] CHECK CONDITION: NextToFerry(ANY,ANX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANY,ANZ,ANX)
[STACK] CHECK CONDITION: FirstDock(ANY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ANZ,ANY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANY,ANZ,ANX)
[STACK] CHECK CONDITION: NextToFerry(ANZ,ANY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ANZ,AOA,ANY)
[STACK] CHECK CONDITION: FirstDock(ANZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOA,ANZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ANZ,AOA,ANY)
[STACK] CHECK CONDITION: NextToFerry(AOA,ANZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOA,AOB,ANZ)
[STACK] CHECK CONDITION: FirstDock(AOA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ANZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOB,AOA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOA,AOB,ANZ)
[STACK] CHECK CONDITION: NextToFerry(AOB,AOA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOB,AOC,AOA)
[STACK] CHECK CONDITION: FirstDock(AOB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOC,AOB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOB,AOC,AOA)
[STACK] CHECK CONDITION: NextToFerry(AOC,AOB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOC,AOD,AOB)
[STACK] CHECK CONDITION: FirstDock(AOC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOD,AOC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOC,AOD,AOB)
[STACK] CHECK CONDITION: NextToFerry(AOD,AOC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOD,AOE,AOC)
[STACK] CHECK CONDITION: FirstDock(AOD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOE,AOD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOD,AOE,AOC)
[STACK] CHECK CONDITION: NextToFerry(AOE,AOD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOE,AOF,AOD)
[STACK] CHECK CONDITION: FirstDock(AOE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOF,AOE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOE,AOF,AOD)
[STACK] CHECK CONDITION: NextToFerry(AOF,AOE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOF,AOG,AOE)
[STACK] CHECK CONDITION: FirstDock(AOF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOG,AOF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOF,AOG,AOE)
[STACK] CHECK CONDITION: NextToFerry(AOG,AOF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOG,AOH,AOF)
[STACK] CHECK CONDITION: FirstDock(AOG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOH,AOG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOG,AOH,AOF)
[STACK] CHECK CONDITION: NextToFerry(AOH,AOG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOH,AOI,AOG)
[STACK] CHECK CONDITION: FirstDock(AOH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOI,AOH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOH,AOI,AOG)
[STACK] CHECK CONDITION: NextToFerry(AOI,AOH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOI,AOJ,AOH)
[STACK] CHECK CONDITION: FirstDock(AOI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOJ,AOI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOI,AOJ,AOH)
[STACK] CHECK CONDITION: NextToFerry(AOJ,AOI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOJ,AOK,AOI)
[STACK] CHECK CONDITION: FirstDock(AOJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOK,AOJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOJ,AOK,AOI)
[STACK] CHECK CONDITION: NextToFerry(AOK,AOJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOK,AOL,AOJ)
[STACK] CHECK CONDITION: FirstDock(AOK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOL,AOK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOK,AOL,AOJ)
[STACK] CHECK CONDITION: NextToFerry(AOL,AOK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOL,AOM,AOK)
[STACK] CHECK CONDITION: FirstDock(AOL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOM,AOL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOL,AOM,AOK)
[STACK] CHECK CONDITION: NextToFerry(AOM,AOL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOM,AON,AOL)
[STACK] CHECK CONDITION: FirstDock(AOM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AON,AOM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOM,AON,AOL)
[STACK] CHECK CONDITION: NextToFerry(AON,AOM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AON,AOO,AOM)
[STACK] CHECK CONDITION: FirstDock(AON)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOO,AON)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AON,AOO,AOM)
[STACK] CHECK CONDITION: NextToFerry(AOO,AON)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOO,AOP,AON)
[STACK] CHECK CONDITION: FirstDock(AOO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AON)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOP,AOO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOO,AOP,AON)
[STACK] CHECK CONDITION: NextToFerry(AOP,AOO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOP,AOQ,AOO)
[STACK] CHECK CONDITION: FirstDock(AOP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOQ,AOP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOP,AOQ,AOO)
[STACK] CHECK CONDITION: NextToFerry(AOQ,AOP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOQ,AOR,AOP)
[STACK] CHECK CONDITION: FirstDock(AOQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOR,AOQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOQ,AOR,AOP)
[STACK] CHECK CONDITION: NextToFerry(AOR,AOQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOR,AOS,AOQ)
[STACK] CHECK CONDITION: FirstDock(AOR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOS,AOR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOR,AOS,AOQ)
[STACK] CHECK CONDITION: NextToFerry(AOS,AOR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOS,AOT,AOR)
[STACK] CHECK CONDITION: FirstDock(AOS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOT,AOS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOS,AOT,AOR)
[STACK] CHECK CONDITION: NextToFerry(AOT,AOS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOT,AOU,AOS)
[STACK] CHECK CONDITION: FirstDock(AOT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOU,AOT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOT,AOU,AOS)
[STACK] CHECK CONDITION: NextToFerry(AOU,AOT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOU,AOV,AOT)
[STACK] CHECK CONDITION: FirstDock(AOU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOV,AOU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOU,AOV,AOT)
[STACK] CHECK CONDITION: NextToFerry(AOV,AOU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOV,AOW,AOU)
[STACK] CHECK CONDITION: FirstDock(AOV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOW,AOV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOV,AOW,AOU)
[STACK] CHECK CONDITION: NextToFerry(AOW,AOV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOW,AOX,AOV)
[STACK] CHECK CONDITION: FirstDock(AOW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOX,AOW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOW,AOX,AOV)
[STACK] CHECK CONDITION: NextToFerry(AOX,AOW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOX,AOY,AOW)
[STACK] CHECK CONDITION: FirstDock(AOX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOY,AOX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOX,AOY,AOW)
[STACK] CHECK CONDITION: NextToFerry(AOY,AOX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOY,AOZ,AOX)
[STACK] CHECK CONDITION: FirstDock(AOY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AOZ,AOY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOY,AOZ,AOX)
[STACK] CHECK CONDITION: NextToFerry(AOZ,AOY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AOZ,APA,AOY)
[STACK] CHECK CONDITION: FirstDock(AOZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APA,AOZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AOZ,APA,AOY)
[STACK] CHECK CONDITION: NextToFerry(APA,AOZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APA,APB,AOZ)
[STACK] CHECK CONDITION: FirstDock(APA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AOZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APB,APA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APA,APB,AOZ)
[STACK] CHECK CONDITION: NextToFerry(APB,APA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APB,APC,APA)
[STACK] CHECK CONDITION: FirstDock(APB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APC,APB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APB,APC,APA)
[STACK] CHECK CONDITION: NextToFerry(APC,APB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APC,APD,APB)
[STACK] CHECK CONDITION: FirstDock(APC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APD,APC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APC,APD,APB)
[STACK] CHECK CONDITION: NextToFerry(APD,APC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APD,APE,APC)
[STACK] CHECK CONDITION: FirstDock(APD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APE,APD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APD,APE,APC)
[STACK] CHECK CONDITION: NextToFerry(APE,APD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APE,APF,APD)
[STACK] CHECK CONDITION: FirstDock(APE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APF,APE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APE,APF,APD)
[STACK] CHECK CONDITION: NextToFerry(APF,APE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APF,APG,APE)
[STACK] CHECK CONDITION: FirstDock(APF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APG,APF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APF,APG,APE)
[STACK] CHECK CONDITION: NextToFerry(APG,APF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APG,APH,APF)
[STACK] CHECK CONDITION: FirstDock(APG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APH,APG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APG,APH,APF)
[STACK] CHECK CONDITION: NextToFerry(APH,APG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APH,API,APG)
[STACK] CHECK CONDITION: FirstDock(APH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(API,APH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APH,API,APG)
[STACK] CHECK CONDITION: NextToFerry(API,APH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(API,APJ,APH)
[STACK] CHECK CONDITION: FirstDock(API)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APJ,API)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(API,APJ,APH)
[STACK] CHECK CONDITION: NextToFerry(APJ,API)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APJ,APK,API)
[STACK] CHECK CONDITION: FirstDock(APJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(API)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APK,APJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APJ,APK,API)
[STACK] CHECK CONDITION: NextToFerry(APK,APJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APK,APL,APJ)
[STACK] CHECK CONDITION: FirstDock(APK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APL,APK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APK,APL,APJ)
[STACK] CHECK CONDITION: NextToFerry(APL,APK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APL,APM,APK)
[STACK] CHECK CONDITION: FirstDock(APL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APM,APL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APL,APM,APK)
[STACK] CHECK CONDITION: NextToFerry(APM,APL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APM,APN,APL)
[STACK] CHECK CONDITION: FirstDock(APM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APN,APM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APM,APN,APL)
[STACK] CHECK CONDITION: NextToFerry(APN,APM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APN,APO,APM)
[STACK] CHECK CONDITION: FirstDock(APN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APO,APN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APN,APO,APM)
[STACK] CHECK CONDITION: NextToFerry(APO,APN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APO,APP,APN)
[STACK] CHECK CONDITION: FirstDock(APO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APP,APO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APO,APP,APN)
[STACK] CHECK CONDITION: NextToFerry(APP,APO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APP,APQ,APO)
[STACK] CHECK CONDITION: FirstDock(APP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APQ,APP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APP,APQ,APO)
[STACK] CHECK CONDITION: NextToFerry(APQ,APP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APQ,APR,APP)
[STACK] CHECK CONDITION: FirstDock(APQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APR,APQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APQ,APR,APP)
[STACK] CHECK CONDITION: NextToFerry(APR,APQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APR,APS,APQ)
[STACK] CHECK CONDITION: FirstDock(APR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APS,APR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APR,APS,APQ)
[STACK] CHECK CONDITION: NextToFerry(APS,APR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APS,APT,APR)
[STACK] CHECK CONDITION: FirstDock(APS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APT,APS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APS,APT,APR)
[STACK] CHECK CONDITION: NextToFerry(APT,APS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APT,APU,APS)
[STACK] CHECK CONDITION: FirstDock(APT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APU,APT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APT,APU,APS)
[STACK] CHECK CONDITION: NextToFerry(APU,APT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APU,APV,APT)
[STACK] CHECK CONDITION: FirstDock(APU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APV,APU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APU,APV,APT)
[STACK] CHECK CONDITION: NextToFerry(APV,APU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APV,APW,APU)
[STACK] CHECK CONDITION: FirstDock(APV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APW,APV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APV,APW,APU)
[STACK] CHECK CONDITION: NextToFerry(APW,APV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APW,APX,APV)
[STACK] CHECK CONDITION: FirstDock(APW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APX,APW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APW,APX,APV)
[STACK] CHECK CONDITION: NextToFerry(APX,APW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APX,APY,APW)
[STACK] CHECK CONDITION: FirstDock(APX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APY,APX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APX,APY,APW)
[STACK] CHECK CONDITION: NextToFerry(APY,APX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APY,APZ,APX)
[STACK] CHECK CONDITION: FirstDock(APY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(APZ,APY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APY,APZ,APX)
[STACK] CHECK CONDITION: NextToFerry(APZ,APY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(APZ,AQA,APY)
[STACK] CHECK CONDITION: FirstDock(APZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQA,APZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(APZ,AQA,APY)
[STACK] CHECK CONDITION: NextToFerry(AQA,APZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQA,AQB,APZ)
[STACK] CHECK CONDITION: FirstDock(AQA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(APZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQB,AQA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQA,AQB,APZ)
[STACK] CHECK CONDITION: NextToFerry(AQB,AQA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQB,AQC,AQA)
[STACK] CHECK CONDITION: FirstDock(AQB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQC,AQB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQB,AQC,AQA)
[STACK] CHECK CONDITION: NextToFerry(AQC,AQB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQC,AQD,AQB)
[STACK] CHECK CONDITION: FirstDock(AQC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQD,AQC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQC,AQD,AQB)
[STACK] CHECK CONDITION: NextToFerry(AQD,AQC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQD,AQE,AQC)
[STACK] CHECK CONDITION: FirstDock(AQD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQE,AQD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQD,AQE,AQC)
[STACK] CHECK CONDITION: NextToFerry(AQE,AQD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQE,AQF,AQD)
[STACK] CHECK CONDITION: FirstDock(AQE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQF,AQE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQE,AQF,AQD)
[STACK] CHECK CONDITION: NextToFerry(AQF,AQE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQF,AQG,AQE)
[STACK] CHECK CONDITION: FirstDock(AQF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQG,AQF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQF,AQG,AQE)
[STACK] CHECK CONDITION: NextToFerry(AQG,AQF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQG,AQH,AQF)
[STACK] CHECK CONDITION: FirstDock(AQG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQH,AQG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQG,AQH,AQF)
[STACK] CHECK CONDITION: NextToFerry(AQH,AQG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQH,AQI,AQG)
[STACK] CHECK CONDITION: FirstDock(AQH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQI,AQH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQH,AQI,AQG)
[STACK] CHECK CONDITION: NextToFerry(AQI,AQH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQI,AQJ,AQH)
[STACK] CHECK CONDITION: FirstDock(AQI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQJ,AQI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQI,AQJ,AQH)
[STACK] CHECK CONDITION: NextToFerry(AQJ,AQI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQJ,AQK,AQI)
[STACK] CHECK CONDITION: FirstDock(AQJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQK,AQJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQJ,AQK,AQI)
[STACK] CHECK CONDITION: NextToFerry(AQK,AQJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQK,AQL,AQJ)
[STACK] CHECK CONDITION: FirstDock(AQK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQL,AQK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQK,AQL,AQJ)
[STACK] CHECK CONDITION: NextToFerry(AQL,AQK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQL,AQM,AQK)
[STACK] CHECK CONDITION: FirstDock(AQL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQM,AQL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQL,AQM,AQK)
[STACK] CHECK CONDITION: NextToFerry(AQM,AQL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQM,AQN,AQL)
[STACK] CHECK CONDITION: FirstDock(AQM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQN,AQM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQM,AQN,AQL)
[STACK] CHECK CONDITION: NextToFerry(AQN,AQM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQN,AQO,AQM)
[STACK] CHECK CONDITION: FirstDock(AQN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQO,AQN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQN,AQO,AQM)
[STACK] CHECK CONDITION: NextToFerry(AQO,AQN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQO,AQP,AQN)
[STACK] CHECK CONDITION: FirstDock(AQO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQP,AQO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQO,AQP,AQN)
[STACK] CHECK CONDITION: NextToFerry(AQP,AQO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQP,AQQ,AQO)
[STACK] CHECK CONDITION: FirstDock(AQP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQQ,AQP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQP,AQQ,AQO)
[STACK] CHECK CONDITION: NextToFerry(AQQ,AQP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQQ,AQR,AQP)
[STACK] CHECK CONDITION: FirstDock(AQQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQR,AQQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQQ,AQR,AQP)
[STACK] CHECK CONDITION: NextToFerry(AQR,AQQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQR,AQS,AQQ)
[STACK] CHECK CONDITION: FirstDock(AQR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQS,AQR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQR,AQS,AQQ)
[STACK] CHECK CONDITION: NextToFerry(AQS,AQR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQS,AQT,AQR)
[STACK] CHECK CONDITION: FirstDock(AQS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQT,AQS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQS,AQT,AQR)
[STACK] CHECK CONDITION: NextToFerry(AQT,AQS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQT,AQU,AQS)
[STACK] CHECK CONDITION: FirstDock(AQT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQU,AQT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQT,AQU,AQS)
[STACK] CHECK CONDITION: NextToFerry(AQU,AQT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQU,AQV,AQT)
[STACK] CHECK CONDITION: FirstDock(AQU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQV,AQU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQU,AQV,AQT)
[STACK] CHECK CONDITION: NextToFerry(AQV,AQU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQV,AQW,AQU)
[STACK] CHECK CONDITION: FirstDock(AQV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQW,AQV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQV,AQW,AQU)
[STACK] CHECK CONDITION: NextToFerry(AQW,AQV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQW,AQX,AQV)
[STACK] CHECK CONDITION: FirstDock(AQW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQX,AQW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQW,AQX,AQV)
[STACK] CHECK CONDITION: NextToFerry(AQX,AQW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQX,AQY,AQW)
[STACK] CHECK CONDITION: FirstDock(AQX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQY,AQX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQX,AQY,AQW)
[STACK] CHECK CONDITION: NextToFerry(AQY,AQX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQY,AQZ,AQX)
[STACK] CHECK CONDITION: FirstDock(AQY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AQZ,AQY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQY,AQZ,AQX)
[STACK] CHECK CONDITION: NextToFerry(AQZ,AQY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AQZ,ARA,AQY)
[STACK] CHECK CONDITION: FirstDock(AQZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARA,AQZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AQZ,ARA,AQY)
[STACK] CHECK CONDITION: NextToFerry(ARA,AQZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARA,ARB,AQZ)
[STACK] CHECK CONDITION: FirstDock(ARA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AQZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARB,ARA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARA,ARB,AQZ)
[STACK] CHECK CONDITION: NextToFerry(ARB,ARA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARB,ARC,ARA)
[STACK] CHECK CONDITION: FirstDock(ARB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARC,ARB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARB,ARC,ARA)
[STACK] CHECK CONDITION: NextToFerry(ARC,ARB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARC,ARD,ARB)
[STACK] CHECK CONDITION: FirstDock(ARC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARD,ARC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARC,ARD,ARB)
[STACK] CHECK CONDITION: NextToFerry(ARD,ARC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARD,ARE,ARC)
[STACK] CHECK CONDITION: FirstDock(ARD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARE,ARD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARD,ARE,ARC)
[STACK] CHECK CONDITION: NextToFerry(ARE,ARD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARE,ARF,ARD)
[STACK] CHECK CONDITION: FirstDock(ARE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARF,ARE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARE,ARF,ARD)
[STACK] CHECK CONDITION: NextToFerry(ARF,ARE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARF,ARG,ARE)
[STACK] CHECK CONDITION: FirstDock(ARF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARG,ARF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARF,ARG,ARE)
[STACK] CHECK CONDITION: NextToFerry(ARG,ARF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARG,ARH,ARF)
[STACK] CHECK CONDITION: FirstDock(ARG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARH,ARG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARG,ARH,ARF)
[STACK] CHECK CONDITION: NextToFerry(ARH,ARG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARH,ARI,ARG)
[STACK] CHECK CONDITION: FirstDock(ARH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARI,ARH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARH,ARI,ARG)
[STACK] CHECK CONDITION: NextToFerry(ARI,ARH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARI,ARJ,ARH)
[STACK] CHECK CONDITION: FirstDock(ARI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARJ,ARI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARI,ARJ,ARH)
[STACK] CHECK CONDITION: NextToFerry(ARJ,ARI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARJ,ARK,ARI)
[STACK] CHECK CONDITION: FirstDock(ARJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARK,ARJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARJ,ARK,ARI)
[STACK] CHECK CONDITION: NextToFerry(ARK,ARJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARK,ARL,ARJ)
[STACK] CHECK CONDITION: FirstDock(ARK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARL,ARK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARK,ARL,ARJ)
[STACK] CHECK CONDITION: NextToFerry(ARL,ARK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARL,ARM,ARK)
[STACK] CHECK CONDITION: FirstDock(ARL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARM,ARL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARL,ARM,ARK)
[STACK] CHECK CONDITION: NextToFerry(ARM,ARL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARM,ARN,ARL)
[STACK] CHECK CONDITION: FirstDock(ARM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARN,ARM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARM,ARN,ARL)
[STACK] CHECK CONDITION: NextToFerry(ARN,ARM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARN,ARO,ARM)
[STACK] CHECK CONDITION: FirstDock(ARN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARO,ARN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARN,ARO,ARM)
[STACK] CHECK CONDITION: NextToFerry(ARO,ARN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARO,ARP,ARN)
[STACK] CHECK CONDITION: FirstDock(ARO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARP,ARO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARO,ARP,ARN)
[STACK] CHECK CONDITION: NextToFerry(ARP,ARO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARP,ARQ,ARO)
[STACK] CHECK CONDITION: FirstDock(ARP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARQ,ARP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARP,ARQ,ARO)
[STACK] CHECK CONDITION: NextToFerry(ARQ,ARP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARQ,ARR,ARP)
[STACK] CHECK CONDITION: FirstDock(ARQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARR,ARQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARQ,ARR,ARP)
[STACK] CHECK CONDITION: NextToFerry(ARR,ARQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARR,ARS,ARQ)
[STACK] CHECK CONDITION: FirstDock(ARR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARS,ARR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARR,ARS,ARQ)
[STACK] CHECK CONDITION: NextToFerry(ARS,ARR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARS,ART,ARR)
[STACK] CHECK CONDITION: FirstDock(ARS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ART,ARS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARS,ART,ARR)
[STACK] CHECK CONDITION: NextToFerry(ART,ARS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ART,ARU,ARS)
[STACK] CHECK CONDITION: FirstDock(ART)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARU,ART)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ART,ARU,ARS)
[STACK] CHECK CONDITION: NextToFerry(ARU,ART)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARU,ARV,ART)
[STACK] CHECK CONDITION: FirstDock(ARU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ART)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARV,ARU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARU,ARV,ART)
[STACK] CHECK CONDITION: NextToFerry(ARV,ARU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARV,ARW,ARU)
[STACK] CHECK CONDITION: FirstDock(ARV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARW,ARV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARV,ARW,ARU)
[STACK] CHECK CONDITION: NextToFerry(ARW,ARV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARW,ARX,ARV)
[STACK] CHECK CONDITION: FirstDock(ARW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARX,ARW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARW,ARX,ARV)
[STACK] CHECK CONDITION: NextToFerry(ARX,ARW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARX,ARY,ARW)
[STACK] CHECK CONDITION: FirstDock(ARX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARY,ARX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARX,ARY,ARW)
[STACK] CHECK CONDITION: NextToFerry(ARY,ARX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARY,ARZ,ARX)
[STACK] CHECK CONDITION: FirstDock(ARY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ARZ,ARY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARY,ARZ,ARX)
[STACK] CHECK CONDITION: NextToFerry(ARZ,ARY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ARZ,ASA,ARY)
[STACK] CHECK CONDITION: FirstDock(ARZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASA,ARZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ARZ,ASA,ARY)
[STACK] CHECK CONDITION: NextToFerry(ASA,ARZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASA,ASB,ARZ)
[STACK] CHECK CONDITION: FirstDock(ASA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ARZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASB,ASA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASA,ASB,ARZ)
[STACK] CHECK CONDITION: NextToFerry(ASB,ASA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASB,ASC,ASA)
[STACK] CHECK CONDITION: FirstDock(ASB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASC,ASB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASB,ASC,ASA)
[STACK] CHECK CONDITION: NextToFerry(ASC,ASB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASC,ASD,ASB)
[STACK] CHECK CONDITION: FirstDock(ASC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASD,ASC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASC,ASD,ASB)
[STACK] CHECK CONDITION: NextToFerry(ASD,ASC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASD,ASE,ASC)
[STACK] CHECK CONDITION: FirstDock(ASD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASE,ASD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASD,ASE,ASC)
[STACK] CHECK CONDITION: NextToFerry(ASE,ASD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASE,ASF,ASD)
[STACK] CHECK CONDITION: FirstDock(ASE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASF,ASE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASE,ASF,ASD)
[STACK] CHECK CONDITION: NextToFerry(ASF,ASE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASF,ASG,ASE)
[STACK] CHECK CONDITION: FirstDock(ASF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASG,ASF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASF,ASG,ASE)
[STACK] CHECK CONDITION: NextToFerry(ASG,ASF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASG,ASH,ASF)
[STACK] CHECK CONDITION: FirstDock(ASG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASH,ASG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASG,ASH,ASF)
[STACK] CHECK CONDITION: NextToFerry(ASH,ASG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASH,ASI,ASG)
[STACK] CHECK CONDITION: FirstDock(ASH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASI,ASH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASH,ASI,ASG)
[STACK] CHECK CONDITION: NextToFerry(ASI,ASH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASI,ASJ,ASH)
[STACK] CHECK CONDITION: FirstDock(ASI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASJ,ASI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASI,ASJ,ASH)
[STACK] CHECK CONDITION: NextToFerry(ASJ,ASI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASJ,ASK,ASI)
[STACK] CHECK CONDITION: FirstDock(ASJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASK,ASJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASJ,ASK,ASI)
[STACK] CHECK CONDITION: NextToFerry(ASK,ASJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASK,ASL,ASJ)
[STACK] CHECK CONDITION: FirstDock(ASK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASL,ASK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASK,ASL,ASJ)
[STACK] CHECK CONDITION: NextToFerry(ASL,ASK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASL,ASM,ASK)
[STACK] CHECK CONDITION: FirstDock(ASL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASM,ASL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASL,ASM,ASK)
[STACK] CHECK CONDITION: NextToFerry(ASM,ASL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASM,ASN,ASL)
[STACK] CHECK CONDITION: FirstDock(ASM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASN,ASM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASM,ASN,ASL)
[STACK] CHECK CONDITION: NextToFerry(ASN,ASM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASN,ASO,ASM)
[STACK] CHECK CONDITION: FirstDock(ASN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASO,ASN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASN,ASO,ASM)
[STACK] CHECK CONDITION: NextToFerry(ASO,ASN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASO,ASP,ASN)
[STACK] CHECK CONDITION: FirstDock(ASO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASP,ASO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASO,ASP,ASN)
[STACK] CHECK CONDITION: NextToFerry(ASP,ASO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASP,ASQ,ASO)
[STACK] CHECK CONDITION: FirstDock(ASP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASQ,ASP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASP,ASQ,ASO)
[STACK] CHECK CONDITION: NextToFerry(ASQ,ASP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASQ,ASR,ASP)
[STACK] CHECK CONDITION: FirstDock(ASQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASR,ASQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASQ,ASR,ASP)
[STACK] CHECK CONDITION: NextToFerry(ASR,ASQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASR,ASS,ASQ)
[STACK] CHECK CONDITION: FirstDock(ASR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASS,ASR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASR,ASS,ASQ)
[STACK] CHECK CONDITION: NextToFerry(ASS,ASR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASS,AST,ASR)
[STACK] CHECK CONDITION: FirstDock(ASS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AST,ASS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASS,AST,ASR)
[STACK] CHECK CONDITION: NextToFerry(AST,ASS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AST,ASU,ASS)
[STACK] CHECK CONDITION: FirstDock(AST)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASU,AST)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AST,ASU,ASS)
[STACK] CHECK CONDITION: NextToFerry(ASU,AST)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASU,ASV,AST)
[STACK] CHECK CONDITION: FirstDock(ASU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AST)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASV,ASU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASU,ASV,AST)
[STACK] CHECK CONDITION: NextToFerry(ASV,ASU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASV,ASW,ASU)
[STACK] CHECK CONDITION: FirstDock(ASV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASW,ASV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASV,ASW,ASU)
[STACK] CHECK CONDITION: NextToFerry(ASW,ASV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASW,ASX,ASV)
[STACK] CHECK CONDITION: FirstDock(ASW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASX,ASW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASW,ASX,ASV)
[STACK] CHECK CONDITION: NextToFerry(ASX,ASW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASX,ASY,ASW)
[STACK] CHECK CONDITION: FirstDock(ASX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASY,ASX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASX,ASY,ASW)
[STACK] CHECK CONDITION: NextToFerry(ASY,ASX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASY,ASZ,ASX)
[STACK] CHECK CONDITION: FirstDock(ASY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ASZ,ASY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASY,ASZ,ASX)
[STACK] CHECK CONDITION: NextToFerry(ASZ,ASY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ASZ,ATA,ASY)
[STACK] CHECK CONDITION: FirstDock(ASZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATA,ASZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ASZ,ATA,ASY)
[STACK] CHECK CONDITION: NextToFerry(ATA,ASZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATA,ATB,ASZ)
[STACK] CHECK CONDITION: FirstDock(ATA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ASZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATB,ATA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATA,ATB,ASZ)
[STACK] CHECK CONDITION: NextToFerry(ATB,ATA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATB,ATC,ATA)
[STACK] CHECK CONDITION: FirstDock(ATB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATC,ATB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATB,ATC,ATA)
[STACK] CHECK CONDITION: NextToFerry(ATC,ATB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATC,ATD,ATB)
[STACK] CHECK CONDITION: FirstDock(ATC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATD,ATC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATC,ATD,ATB)
[STACK] CHECK CONDITION: NextToFerry(ATD,ATC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATD,ATE,ATC)
[STACK] CHECK CONDITION: FirstDock(ATD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATE,ATD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATD,ATE,ATC)
[STACK] CHECK CONDITION: NextToFerry(ATE,ATD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATE,ATF,ATD)
[STACK] CHECK CONDITION: FirstDock(ATE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATF,ATE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATE,ATF,ATD)
[STACK] CHECK CONDITION: NextToFerry(ATF,ATE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATF,ATG,ATE)
[STACK] CHECK CONDITION: FirstDock(ATF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATG,ATF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATF,ATG,ATE)
[STACK] CHECK CONDITION: NextToFerry(ATG,ATF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATG,ATH,ATF)
[STACK] CHECK CONDITION: FirstDock(ATG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATH,ATG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATG,ATH,ATF)
[STACK] CHECK CONDITION: NextToFerry(ATH,ATG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATH,ATI,ATG)
[STACK] CHECK CONDITION: FirstDock(ATH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATI,ATH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATH,ATI,ATG)
[STACK] CHECK CONDITION: NextToFerry(ATI,ATH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATI,ATJ,ATH)
[STACK] CHECK CONDITION: FirstDock(ATI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATJ,ATI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATI,ATJ,ATH)
[STACK] CHECK CONDITION: NextToFerry(ATJ,ATI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATJ,ATK,ATI)
[STACK] CHECK CONDITION: FirstDock(ATJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATK,ATJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATJ,ATK,ATI)
[STACK] CHECK CONDITION: NextToFerry(ATK,ATJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATK,ATL,ATJ)
[STACK] CHECK CONDITION: FirstDock(ATK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATL,ATK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATK,ATL,ATJ)
[STACK] CHECK CONDITION: NextToFerry(ATL,ATK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATL,ATM,ATK)
[STACK] CHECK CONDITION: FirstDock(ATL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATM,ATL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATL,ATM,ATK)
[STACK] CHECK CONDITION: NextToFerry(ATM,ATL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATM,ATN,ATL)
[STACK] CHECK CONDITION: FirstDock(ATM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATN,ATM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATM,ATN,ATL)
[STACK] CHECK CONDITION: NextToFerry(ATN,ATM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATN,ATO,ATM)
[STACK] CHECK CONDITION: FirstDock(ATN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATO,ATN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATN,ATO,ATM)
[STACK] CHECK CONDITION: NextToFerry(ATO,ATN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATO,ATP,ATN)
[STACK] CHECK CONDITION: FirstDock(ATO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATP,ATO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATO,ATP,ATN)
[STACK] CHECK CONDITION: NextToFerry(ATP,ATO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATP,ATQ,ATO)
[STACK] CHECK CONDITION: FirstDock(ATP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATQ,ATP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATP,ATQ,ATO)
[STACK] CHECK CONDITION: NextToFerry(ATQ,ATP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATQ,ATR,ATP)
[STACK] CHECK CONDITION: FirstDock(ATQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATR,ATQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATQ,ATR,ATP)
[STACK] CHECK CONDITION: NextToFerry(ATR,ATQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATR,ATS,ATQ)
[STACK] CHECK CONDITION: FirstDock(ATR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATS,ATR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATR,ATS,ATQ)
[STACK] CHECK CONDITION: NextToFerry(ATS,ATR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATS,ATT,ATR)
[STACK] CHECK CONDITION: FirstDock(ATS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATT,ATS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATS,ATT,ATR)
[STACK] CHECK CONDITION: NextToFerry(ATT,ATS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATT,ATU,ATS)
[STACK] CHECK CONDITION: FirstDock(ATT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATU,ATT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATT,ATU,ATS)
[STACK] CHECK CONDITION: NextToFerry(ATU,ATT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATU,ATV,ATT)
[STACK] CHECK CONDITION: FirstDock(ATU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATV,ATU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATU,ATV,ATT)
[STACK] CHECK CONDITION: NextToFerry(ATV,ATU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATV,ATW,ATU)
[STACK] CHECK CONDITION: FirstDock(ATV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATW,ATV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATV,ATW,ATU)
[STACK] CHECK CONDITION: NextToFerry(ATW,ATV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATW,ATX,ATV)
[STACK] CHECK CONDITION: FirstDock(ATW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATX,ATW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATW,ATX,ATV)
[STACK] CHECK CONDITION: NextToFerry(ATX,ATW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATX,ATY,ATW)
[STACK] CHECK CONDITION: FirstDock(ATX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATY,ATX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATX,ATY,ATW)
[STACK] CHECK CONDITION: NextToFerry(ATY,ATX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATY,ATZ,ATX)
[STACK] CHECK CONDITION: FirstDock(ATY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(ATZ,ATY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATY,ATZ,ATX)
[STACK] CHECK CONDITION: NextToFerry(ATZ,ATY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(ATZ,AUA,ATY)
[STACK] CHECK CONDITION: FirstDock(ATZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUA,ATZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(ATZ,AUA,ATY)
[STACK] CHECK CONDITION: NextToFerry(AUA,ATZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUA,AUB,ATZ)
[STACK] CHECK CONDITION: FirstDock(AUA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(ATZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUB,AUA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUA,AUB,ATZ)
[STACK] CHECK CONDITION: NextToFerry(AUB,AUA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUB,AUC,AUA)
[STACK] CHECK CONDITION: FirstDock(AUB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUC,AUB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUB,AUC,AUA)
[STACK] CHECK CONDITION: NextToFerry(AUC,AUB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUC,AUD,AUB)
[STACK] CHECK CONDITION: FirstDock(AUC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUD,AUC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUC,AUD,AUB)
[STACK] CHECK CONDITION: NextToFerry(AUD,AUC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUD,AUE,AUC)
[STACK] CHECK CONDITION: FirstDock(AUD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUE,AUD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUD,AUE,AUC)
[STACK] CHECK CONDITION: NextToFerry(AUE,AUD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUE,AUF,AUD)
[STACK] CHECK CONDITION: FirstDock(AUE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUF,AUE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUE,AUF,AUD)
[STACK] CHECK CONDITION: NextToFerry(AUF,AUE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUF,AUG,AUE)
[STACK] CHECK CONDITION: FirstDock(AUF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUG,AUF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUF,AUG,AUE)
[STACK] CHECK CONDITION: NextToFerry(AUG,AUF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUG,AUH,AUF)
[STACK] CHECK CONDITION: FirstDock(AUG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUH,AUG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUG,AUH,AUF)
[STACK] CHECK CONDITION: NextToFerry(AUH,AUG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUH,AUI,AUG)
[STACK] CHECK CONDITION: FirstDock(AUH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUI,AUH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUH,AUI,AUG)
[STACK] CHECK CONDITION: NextToFerry(AUI,AUH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUI,AUJ,AUH)
[STACK] CHECK CONDITION: FirstDock(AUI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUJ,AUI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUI,AUJ,AUH)
[STACK] CHECK CONDITION: NextToFerry(AUJ,AUI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUJ,AUK,AUI)
[STACK] CHECK CONDITION: FirstDock(AUJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUK,AUJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUJ,AUK,AUI)
[STACK] CHECK CONDITION: NextToFerry(AUK,AUJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUK,AUL,AUJ)
[STACK] CHECK CONDITION: FirstDock(AUK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUL,AUK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUK,AUL,AUJ)
[STACK] CHECK CONDITION: NextToFerry(AUL,AUK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUL,AUM,AUK)
[STACK] CHECK CONDITION: FirstDock(AUL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUM,AUL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUL,AUM,AUK)
[STACK] CHECK CONDITION: NextToFerry(AUM,AUL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUM,AUN,AUL)
[STACK] CHECK CONDITION: FirstDock(AUM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUN,AUM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUM,AUN,AUL)
[STACK] CHECK CONDITION: NextToFerry(AUN,AUM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUN,AUO,AUM)
[STACK] CHECK CONDITION: FirstDock(AUN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUO,AUN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUN,AUO,AUM)
[STACK] CHECK CONDITION: NextToFerry(AUO,AUN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUO,AUP,AUN)
[STACK] CHECK CONDITION: FirstDock(AUO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUP,AUO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUO,AUP,AUN)
[STACK] CHECK CONDITION: NextToFerry(AUP,AUO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUP,AUQ,AUO)
[STACK] CHECK CONDITION: FirstDock(AUP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUQ,AUP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUP,AUQ,AUO)
[STACK] CHECK CONDITION: NextToFerry(AUQ,AUP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUQ,AUR,AUP)
[STACK] CHECK CONDITION: FirstDock(AUQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUR,AUQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUQ,AUR,AUP)
[STACK] CHECK CONDITION: NextToFerry(AUR,AUQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUR,AUS,AUQ)
[STACK] CHECK CONDITION: FirstDock(AUR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUS,AUR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUR,AUS,AUQ)
[STACK] CHECK CONDITION: NextToFerry(AUS,AUR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUS,AUT,AUR)
[STACK] CHECK CONDITION: FirstDock(AUS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUT,AUS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUS,AUT,AUR)
[STACK] CHECK CONDITION: NextToFerry(AUT,AUS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUT,AUU,AUS)
[STACK] CHECK CONDITION: FirstDock(AUT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUU,AUT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUT,AUU,AUS)
[STACK] CHECK CONDITION: NextToFerry(AUU,AUT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUU,AUV,AUT)
[STACK] CHECK CONDITION: FirstDock(AUU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUV,AUU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUU,AUV,AUT)
[STACK] CHECK CONDITION: NextToFerry(AUV,AUU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUV,AUW,AUU)
[STACK] CHECK CONDITION: FirstDock(AUV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUW,AUV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUV,AUW,AUU)
[STACK] CHECK CONDITION: NextToFerry(AUW,AUV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUW,AUX,AUV)
[STACK] CHECK CONDITION: FirstDock(AUW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUX,AUW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUW,AUX,AUV)
[STACK] CHECK CONDITION: NextToFerry(AUX,AUW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUX,AUY,AUW)
[STACK] CHECK CONDITION: FirstDock(AUX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUY,AUX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUX,AUY,AUW)
[STACK] CHECK CONDITION: NextToFerry(AUY,AUX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUY,AUZ,AUX)
[STACK] CHECK CONDITION: FirstDock(AUY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AUZ,AUY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUY,AUZ,AUX)
[STACK] CHECK CONDITION: NextToFerry(AUZ,AUY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AUZ,AVA,AUY)
[STACK] CHECK CONDITION: FirstDock(AUZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVA,AUZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AUZ,AVA,AUY)
[STACK] CHECK CONDITION: NextToFerry(AVA,AUZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVA,AVB,AUZ)
[STACK] CHECK CONDITION: FirstDock(AVA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AUZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVB,AVA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVA,AVB,AUZ)
[STACK] CHECK CONDITION: NextToFerry(AVB,AVA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVB,AVC,AVA)
[STACK] CHECK CONDITION: FirstDock(AVB)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVA)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVC,AVB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVB,AVC,AVA)
[STACK] CHECK CONDITION: NextToFerry(AVC,AVB)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVC,AVD,AVB)
[STACK] CHECK CONDITION: FirstDock(AVC)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVB)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVD,AVC)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVC,AVD,AVB)
[STACK] CHECK CONDITION: NextToFerry(AVD,AVC)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVD,AVE,AVC)
[STACK] CHECK CONDITION: FirstDock(AVD)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVC)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVE,AVD)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVD,AVE,AVC)
[STACK] CHECK CONDITION: NextToFerry(AVE,AVD)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVE,AVF,AVD)
[STACK] CHECK CONDITION: FirstDock(AVE)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVD)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVF,AVE)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVE,AVF,AVD)
[STACK] CHECK CONDITION: NextToFerry(AVF,AVE)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVF,AVG,AVE)
[STACK] CHECK CONDITION: FirstDock(AVF)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVE)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVG,AVF)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVF,AVG,AVE)
[STACK] CHECK CONDITION: NextToFerry(AVG,AVF)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVG,AVH,AVF)
[STACK] CHECK CONDITION: FirstDock(AVG)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVF)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVH,AVG)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVG,AVH,AVF)
[STACK] CHECK CONDITION: NextToFerry(AVH,AVG)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVH,AVI,AVG)
[STACK] CHECK CONDITION: FirstDock(AVH)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVG)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVI,AVH)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVH,AVI,AVG)
[STACK] CHECK CONDITION: NextToFerry(AVI,AVH)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVI,AVJ,AVH)
[STACK] CHECK CONDITION: FirstDock(AVI)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVH)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVJ,AVI)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVI,AVJ,AVH)
[STACK] CHECK CONDITION: NextToFerry(AVJ,AVI)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVJ,AVK,AVI)
[STACK] CHECK CONDITION: FirstDock(AVJ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVI)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVK,AVJ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVJ,AVK,AVI)
[STACK] CHECK CONDITION: NextToFerry(AVK,AVJ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVK,AVL,AVJ)
[STACK] CHECK CONDITION: FirstDock(AVK)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVJ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVL,AVK)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVK,AVL,AVJ)
[STACK] CHECK CONDITION: NextToFerry(AVL,AVK)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVL,AVM,AVK)
[STACK] CHECK CONDITION: FirstDock(AVL)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVK)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVM,AVL)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVL,AVM,AVK)
[STACK] CHECK CONDITION: NextToFerry(AVM,AVL)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVM,AVN,AVL)
[STACK] CHECK CONDITION: FirstDock(AVM)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVL)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVN,AVM)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVM,AVN,AVL)
[STACK] CHECK CONDITION: NextToFerry(AVN,AVM)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVN,AVO,AVM)
[STACK] CHECK CONDITION: FirstDock(AVN)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVM)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVO,AVN)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVN,AVO,AVM)
[STACK] CHECK CONDITION: NextToFerry(AVO,AVN)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVO,AVP,AVN)
[STACK] CHECK CONDITION: FirstDock(AVO)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVN)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVP,AVO)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVO,AVP,AVN)
[STACK] CHECK CONDITION: NextToFerry(AVP,AVO)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVP,AVQ,AVO)
[STACK] CHECK CONDITION: FirstDock(AVP)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVO)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVQ,AVP)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVP,AVQ,AVO)
[STACK] CHECK CONDITION: NextToFerry(AVQ,AVP)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVQ,AVR,AVP)
[STACK] CHECK CONDITION: FirstDock(AVQ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVP)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVR,AVQ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVQ,AVR,AVP)
[STACK] CHECK CONDITION: NextToFerry(AVR,AVQ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVR,AVS,AVQ)
[STACK] CHECK CONDITION: FirstDock(AVR)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVQ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVS,AVR)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVR,AVS,AVQ)
[STACK] CHECK CONDITION: NextToFerry(AVS,AVR)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVS,AVT,AVR)
[STACK] CHECK CONDITION: FirstDock(AVS)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVR)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVT,AVS)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVS,AVT,AVR)
[STACK] CHECK CONDITION: NextToFerry(AVT,AVS)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVT,AVU,AVS)
[STACK] CHECK CONDITION: FirstDock(AVT)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVS)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVU,AVT)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVT,AVU,AVS)
[STACK] CHECK CONDITION: NextToFerry(AVU,AVT)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVU,AVV,AVT)
[STACK] CHECK CONDITION: FirstDock(AVU)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVT)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVV,AVU)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVU,AVV,AVT)
[STACK] CHECK CONDITION: NextToFerry(AVV,AVU)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVV,AVW,AVU)
[STACK] CHECK CONDITION: FirstDock(AVV)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVU)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVW,AVV)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVV,AVW,AVU)
[STACK] CHECK CONDITION: NextToFerry(AVW,AVV)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVW,AVX,AVV)
[STACK] CHECK CONDITION: FirstDock(AVW)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVV)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVX,AVW)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVW,AVX,AVV)
[STACK] CHECK CONDITION: NextToFerry(AVX,AVW)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVX,AVY,AVW)
[STACK] CHECK CONDITION: FirstDock(AVX)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVW)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVY,AVX)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVX,AVY,AVW)
[STACK] CHECK CONDITION: NextToFerry(AVY,AVX)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVY,AVZ,AVX)
[STACK] CHECK CONDITION: FirstDock(AVY)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVX)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AVZ,AVY)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVY,AVZ,AVX)
[STACK] CHECK CONDITION: NextToFerry(AVZ,AVY)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AVZ,AWA,AVY)
[STACK] CHECK CONDITION: FirstDock(AVZ)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVY)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AWA,AVZ)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AVZ,AWA,AVY)
[STACK] CHECK CONDITION: NextToFerry(AWA,AVZ)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo2(AWA,AWB,AVZ)
[STACK] CHECK CONDITION: FirstDock(AWA)
Condition satisfied.
[STACK] CHECK CONDITION: LastFerry(AVZ)
Condition satisfied.
[STACK] CHECK CONDITION: NextToDock(AWB,AWA)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo2(AWA,AWB,AVZ)
[STACK] CHECK CONDITION: NextToFerry(AWB,AWA)
Condition NOT satisfied.
[STACK] PUSH OPERATOR AND PRECONDITIONS: BoardNextTo1(AWB,AWA)
[STACK] CHECK CONDITION: LastFerry(AWA)
Condition satisfied.
[STACK] CHECK CONDITION: LastDock(AWB)
Condition satisfied.
[STACK] CHECK CONDITION: FirstDock(AWB)
Condition satisfied.
[STACK] APPLY OPERATOR TO STATE: Operator BoardNextTo1(AWB,AWA)
[STACK] CHECK CONDITION: LastFerry(AWB)
Condition satisfied.
Algorithm has finished! Found plan with 1199 operators.
Plan: ChangeToEmptyLine(AWB,AWA),ChangeLine(AWA,AVZ,AWB),ChangeLine(AVZ,AVY,AWA),ChangeLine(AVY,AVX,AVZ),ChangeLine(AVX,AVW,AVY),ChangeLine(AVW,AVV,AVX),ChangeLine(AVV,AVU,AVW),ChangeLine(AVU,AVT,AVV),ChangeLine(AVT,AVS,AVU),ChangeLine(AVS,AVR,AVT),ChangeLine(AVR,AVQ,AVS),ChangeLine(AVQ,AVP,AVR),ChangeLine(AVP,AVO,AVQ),ChangeLine(AVO,AVN,AVP),ChangeLine(AVN,AVM,AVO),ChangeLine(AVM,AVL,AVN),ChangeLine(AVL,AVK,AVM),ChangeLine(AVK,AVJ,AVL),ChangeLine(AVJ,AVI,AVK),ChangeLine(AVI,AVH,AVJ),ChangeLine(AVH,AVG,AVI),ChangeLine(AVG,AVF,AVH),ChangeLine(AVF,AVE,AVG),ChangeLine(AVE,AVD,AVF),ChangeLine(AVD,AVC,AVE),ChangeLine(AVC,AVB,AVD),ChangeLine(AVB,AVA,AVC),ChangeLine(AVA,AUZ,AVB),ChangeLine(AUZ,AUY,AVA),ChangeLine(AUY,AUX,AUZ),ChangeLine(AUX,AUW,AUY),ChangeLine(AUW,AUV,AUX),ChangeLine(AUV,AUU,AUW),ChangeLine(AUU,AUT,AUV),ChangeLine(AUT,AUS,AUU),ChangeLine(AUS,AUR,AUT),ChangeLine(AUR,AUQ,AUS),ChangeLine(AUQ,AUP,AUR),ChangeLine(AUP,AUO,AUQ),ChangeLine(AUO,AUN,AUP),ChangeLine(AUN,AUM,AUO),ChangeLine(AUM,AUL,AUN),ChangeLine(AUL,AUK,AUM),ChangeLine(AUK,AUJ,AUL),ChangeLine(AUJ,AUI,AUK),ChangeLine(AUI,AUH,AUJ),ChangeLine(AUH,AUG,AUI),ChangeLine(AUG,AUF,AUH),ChangeLine(AUF,AUE,AUG),ChangeLine(AUE,AUD,AUF),ChangeLine(AUD,AUC,AUE),ChangeLine(AUC,AUB,AUD),ChangeLine(AUB,AUA,AUC),ChangeLine(AUA,ATZ,AUB),ChangeLine(ATZ,ATY,AUA),ChangeLine(ATY,ATX,ATZ),ChangeLine(ATX,ATW,ATY),ChangeLine(ATW,ATV,ATX),ChangeLine(ATV,ATU,ATW),ChangeLine(ATU,ATT,ATV),ChangeLine(ATT,ATS,ATU),ChangeLine(ATS,ATR,ATT),ChangeLine(ATR,ATQ,ATS),ChangeLine(ATQ,ATP,ATR),ChangeLine(ATP,ATO,ATQ),ChangeLine(ATO,ATN,ATP),ChangeLine(ATN,ATM,ATO),ChangeLine(ATM,ATL,ATN),ChangeLine(ATL,ATK,ATM),ChangeLine(ATK,ATJ,ATL),ChangeLine(ATJ,ATI,ATK),ChangeLine(ATI,ATH,ATJ),ChangeLine(ATH,ATG,ATI),ChangeLine(ATG,ATF,ATH),ChangeLine(ATF,ATE,ATG),ChangeLine(ATE,ATD,ATF),ChangeLine(ATD,ATC,ATE),ChangeLine(ATC,ATB,ATD),ChangeLine(ATB,ATA,ATC),ChangeLine(ATA,ASZ,ATB),ChangeLine(ASZ,ASY,ATA),ChangeLine(ASY,ASX,ASZ),ChangeLine(ASX,ASW,ASY),ChangeLine(ASW,ASV,ASX),ChangeLine(ASV,ASU,ASW),ChangeLine(ASU,AST,ASV),ChangeLine(AST,ASS,ASU),ChangeLine(ASS,ASR,AST),ChangeLine(ASR,ASQ,ASS),ChangeLine(ASQ,ASP,ASR),ChangeLine(ASP,ASO,ASQ),ChangeLine(ASO,ASN,ASP),ChangeLine(ASN,ASM,ASO),ChangeLine(ASM,ASL,ASN),ChangeLine(ASL,ASK,ASM),ChangeLine(ASK,ASJ,ASL),ChangeLine(ASJ,ASI,ASK),ChangeLine(ASI,ASH,ASJ),ChangeLine(ASH,ASG,ASI),ChangeLine(ASG,ASF,ASH),ChangeLine(ASF,ASE,ASG),ChangeLine(ASE,ASD,ASF),ChangeLine(ASD,ASC,ASE),ChangeLine(ASC,ASB,ASD),ChangeLine(ASB,ASA,ASC),ChangeLine(ASA,ARZ,ASB),ChangeLine(ARZ,ARY,ASA),ChangeLine(ARY,ARX,ARZ),ChangeLine(ARX,ARW,ARY),ChangeLine(ARW,ARV,ARX),ChangeLine(ARV,ARU,ARW),ChangeLine(ARU,ART,ARV),ChangeLine(ART,ARS,ARU),ChangeLine(ARS,ARR,ART),ChangeLine(ARR,ARQ,ARS),ChangeLine(ARQ,ARP,ARR),ChangeLine(ARP,ARO,ARQ),ChangeLine(ARO,ARN,ARP),ChangeLine(ARN,ARM,ARO),ChangeLine(ARM,ARL,ARN),ChangeLine(ARL,ARK,ARM),ChangeLine(ARK,ARJ,ARL),ChangeLine(ARJ,ARI,ARK),ChangeLine(ARI,ARH,ARJ),ChangeLine(ARH,ARG,ARI),ChangeLine(ARG,ARF,ARH),ChangeLine(ARF,ARE,ARG),ChangeLine(ARE,ARD,ARF),ChangeLine(ARD,ARC,ARE),ChangeLine(ARC,ARB,ARD),ChangeLine(ARB,ARA,ARC),ChangeLine(ARA,AQZ,ARB),ChangeLine(AQZ,AQY,ARA),ChangeLine(AQY,AQX,AQZ),ChangeLine(AQX,AQW,AQY),ChangeLine(AQW,AQV,AQX),ChangeLine(AQV,AQU,AQW),ChangeLine(AQU,AQT,AQV),ChangeLine(AQT,AQS,AQU),ChangeLine(AQS,AQR,AQT),ChangeLine(AQR,AQQ,AQS),ChangeLine(AQQ,AQP,AQR),ChangeLine(AQP,AQO,AQQ),ChangeLine(AQO,AQN,AQP),ChangeLine(AQN,AQM,AQO),ChangeLine(AQM,AQL,AQN),ChangeLine(AQL,AQK,AQM),ChangeLine(AQK,AQJ,AQL),ChangeLine(AQJ,AQI,AQK),ChangeLine(AQI,AQH,AQJ),ChangeLine(AQH,AQG,AQI),ChangeLine(AQG,AQF,AQH),ChangeLine(AQF,AQE,AQG),ChangeLine(AQE,AQD,AQF),ChangeLine(AQD,AQC,AQE),ChangeLine(AQC,AQB,AQD),ChangeLine(AQB,AQA,AQC),ChangeLine(AQA,APZ,AQB),ChangeLine(APZ,APY,AQA),ChangeLine(APY,APX,APZ),ChangeLine(APX,APW,APY),ChangeLine(APW,APV,APX),ChangeLine(APV,APU,APW),ChangeLine(APU,APT,APV),ChangeLine(APT,APS,APU),ChangeLine(APS,APR,APT),ChangeLine(APR,APQ,APS),ChangeLine(APQ,APP,APR),ChangeLine(APP,APO,APQ),ChangeLine(APO,APN,APP),ChangeLine(APN,APM,APO),ChangeLine(APM,APL,APN),ChangeLine(APL,APK,APM),ChangeLine(APK,APJ,APL),ChangeLine(APJ,API,APK),ChangeLine(API,APH,APJ),ChangeLine(APH,APG,API),ChangeLine(APG,APF,APH),ChangeLine(APF,APE,APG),ChangeLine(APE,APD,APF),ChangeLine(APD,APC,APE),ChangeLine(APC,APB,APD),ChangeLine(APB,APA,APC),ChangeLine(APA,AOZ,APB),ChangeLine(AOZ,AOY,APA),ChangeLine(AOY,AOX,AOZ),ChangeLine(AOX,AOW,AOY),ChangeLine(AOW,AOV,AOX),ChangeLine(AOV,AOU,AOW),ChangeLine(AOU,AOT,AOV),ChangeLine(AOT,AOS,AOU),ChangeLine(AOS,AOR,AOT),ChangeLine(AOR,AOQ,AOS),ChangeLine(AOQ,AOP,AOR),ChangeLine(AOP,AOO,AOQ),ChangeLine(AOO,AON,AOP),ChangeLine(AON,AOM,AOO),ChangeLine(AOM,AOL,AON),ChangeLine(AOL,AOK,AOM),ChangeLine(AOK,AOJ,AOL),ChangeLine(AOJ,AOI,AOK),ChangeLine(AOI,AOH,AOJ),ChangeLine(AOH,AOG,AOI),ChangeLine(AOG,AOF,AOH),ChangeLine(AOF,AOE,AOG),ChangeLine(AOE,AOD,AOF),ChangeLine(AOD,AOC,AOE),ChangeLine(AOC,AOB,AOD),ChangeLine(AOB,AOA,AOC),ChangeLine(AOA,ANZ,AOB),ChangeLine(ANZ,ANY,AOA),ChangeLine(ANY,ANX,ANZ),ChangeLine(ANX,ANW,ANY),ChangeLine(ANW,ANV,ANX),ChangeLine(ANV,ANU,ANW),ChangeLine(ANU,ANT,ANV),ChangeLine(ANT,ANS,ANU),ChangeLine(ANS,ANR,ANT),ChangeLine(ANR,ANQ,ANS),ChangeLine(ANQ,ANP,ANR),ChangeLine(ANP,ANO,ANQ),ChangeLine(ANO,ANN,ANP),ChangeLine(ANN,ANM,ANO),ChangeLine(ANM,ANL,ANN),ChangeLine(ANL,ANK,ANM),ChangeLine(ANK,ANJ,ANL),ChangeLine(ANJ,ANI,ANK),ChangeLine(ANI,ANH,ANJ),ChangeLine(ANH,ANG,ANI),ChangeLine(ANG,ANF,ANH),ChangeLine(ANF,ANE,ANG),ChangeLine(ANE,AND,ANF),ChangeLine(AND,ANC,ANE),ChangeLine(ANC,ANB,AND),ChangeLine(ANB,ANA,ANC),ChangeLine(ANA,AMZ,ANB),ChangeLine(AMZ,AMY,ANA),ChangeLine(AMY,AMX,AMZ),ChangeLine(AMX,AMW,AMY),ChangeLine(AMW,AMV,AMX),ChangeLine(AMV,AMU,AMW),ChangeLine(AMU,AMT,AMV),ChangeLine(AMT,AMS,AMU),ChangeLine(AMS,AMR,AMT),ChangeLine(AMR,AMQ,AMS),ChangeLine(AMQ,AMP,AMR),ChangeLine(AMP,AMO,AMQ),ChangeLine(AMO,AMN,AMP),ChangeLine(AMN,AMM,AMO),ChangeLine(AMM,AML,AMN),ChangeLine(AML,AMK,AMM),ChangeLine(AMK,AMJ,AML),ChangeLine(AMJ,AMI,AMK),ChangeLine(AMI,AMH,AMJ),ChangeLine(AMH,AMG,AMI),ChangeLine(AMG,AMF,AMH),ChangeLine(AMF,AME,AMG),ChangeLine(AME,AMD,AMF),ChangeLine(AMD,AMC,AME),ChangeLine(AMC,AMB,AMD),ChangeLine(AMB,AMA,AMC),ChangeLine(AMA,ALZ,AMB),ChangeLine(ALZ,ALY,AMA),ChangeLine(ALY,ALX,ALZ),ChangeLine(ALX,ALW,ALY),ChangeLine(ALW,ALV,ALX),ChangeLine(ALV,ALU,ALW),ChangeLine(ALU,ALT,ALV),ChangeLine(ALT,ALS,ALU),ChangeLine(ALS,ALR,ALT),ChangeLine(ALR,ALQ,ALS),ChangeLine(ALQ,ALP,ALR),ChangeLine(ALP,ALO,ALQ),ChangeLine(ALO,ALN,ALP),ChangeLine(ALN,ALM,ALO),ChangeLine(ALM,ALL,ALN),ChangeLine(ALL,ALK,ALM),ChangeLine(ALK,ALJ,ALL),ChangeLine(ALJ,ALI,ALK),ChangeLine(ALI,ALH,ALJ),ChangeLine(ALH,ALG,ALI),ChangeLine(ALG,ALF,ALH),ChangeLine(ALF,ALE,ALG),ChangeLine(ALE,ALD,ALF),ChangeLine(ALD,ALC,ALE),ChangeLine(ALC,ALB,ALD),ChangeLine(ALB,ALA,ALC),ChangeLine(ALA,AKZ,ALB),ChangeLine(AKZ,AKY,ALA),ChangeLine(AKY,AKX,AKZ),ChangeLine(AKX,AKW,AKY),ChangeLine(AKW,AKV,AKX),ChangeLine(AKV,AKU,AKW),ChangeLine(AKU,AKT,AKV),ChangeLine(AKT,AKS,AKU),ChangeLine(AKS,AKR,AKT),ChangeLine(AKR,AKQ,AKS),ChangeLine(AKQ,AKP,AKR),ChangeLine(AKP,AKO,AKQ),ChangeLine(AKO,AKN,AKP),ChangeLine(AKN,AKM,AKO),ChangeLine(AKM,AKL,AKN),ChangeLine(AKL,AKK,AKM),ChangeLine(AKK,AKJ,AKL),ChangeLine(AKJ,AKI,AKK),ChangeLine(AKI,AKH,AKJ),ChangeLine(AKH,AKG,AKI),ChangeLine(AKG,AKF,AKH),ChangeLine(AKF,AKE,AKG),ChangeLine(AKE,AKD,AKF),ChangeLine(AKD,AKC,AKE),ChangeLine(AKC,AKB,AKD),ChangeLine(AKB,AKA,AKC),ChangeLine(AKA,AJZ,AKB),ChangeLine(AJZ,AJY,AKA),ChangeLine(AJY,AJX,AJZ),ChangeLine(AJX,AJW,AJY),ChangeLine(AJW,AJV,AJX),ChangeLine(AJV,AJU,AJW),ChangeLine(AJU,AJT,AJV),ChangeLine(AJT,AJS,AJU),ChangeLine(AJS,AJR,AJT),ChangeLine(AJR,AJQ,AJS),ChangeLine(AJQ,AJP,AJR),ChangeLine(AJP,AJO,AJQ),ChangeLine(AJO,AJN,AJP),ChangeLine(AJN,AJM,AJO),ChangeLine(AJM,AJL,AJN),ChangeLine(AJL,AJK,AJM),ChangeLine(AJK,AJJ,AJL),ChangeLine(AJJ,AJI,AJK),ChangeLine(AJI,AJH,AJJ),ChangeLine(AJH,AJG,AJI),ChangeLine(AJG,AJF,AJH),ChangeLine(AJF,AJE,AJG),ChangeLine(AJE,AJD,AJF),ChangeLine(AJD,AJC,AJE),ChangeLine(AJC,AJB,AJD),ChangeLine(AJB,AJA,AJC),ChangeLine(AJA,AIZ,AJB),ChangeLine(AIZ,AIY,AJA),ChangeLine(AIY,AIX,AIZ),ChangeLine(AIX,AIW,AIY),ChangeLine(AIW,AIV,AIX),ChangeLine(AIV,AIU,AIW),ChangeLine(AIU,AIT,AIV),ChangeLine(AIT,AIS,AIU),ChangeLine(AIS,AIR,AIT),ChangeLine(AIR,AIQ,AIS),ChangeLine(AIQ,AIP,AIR),ChangeLine(AIP,AIO,AIQ),ChangeLine(AIO,AIN,AIP),ChangeLine(AIN,AIM,AIO),ChangeLine(AIM,AIL,AIN),ChangeLine(AIL,AIK,AIM),ChangeLine(AIK,AIJ,AIL),ChangeLine(AIJ,AII,AIK),ChangeLine(AII,AIH,AIJ),ChangeLine(AIH,AIG,AII),ChangeLine(AIG,AIF,AIH),ChangeLine(AIF,AIE,AIG),ChangeLine(AIE,AID,AIF),ChangeLine(AID,AIC,AIE),ChangeLine(AIC,AIB,AID),ChangeLine(AIB,AIA,AIC),ChangeLine(AIA,AHZ,AIB),ChangeLine(AHZ,AHY,AIA),ChangeLine(AHY,AHX,AHZ),ChangeLine(AHX,AHW,AHY),ChangeLine(AHW,AHV,AHX),ChangeLine(AHV,AHU,AHW),ChangeLine(AHU,AHT,AHV),ChangeLine(AHT,AHS,AHU),ChangeLine(AHS,AHR,AHT),ChangeLine(AHR,AHQ,AHS),ChangeLine(AHQ,AHP,AHR),ChangeLine(AHP,AHO,AHQ),ChangeLine(AHO,AHN,AHP),ChangeLine(AHN,AHM,AHO),ChangeLine(AHM,AHL,AHN),ChangeLine(AHL,AHK,AHM),ChangeLine(AHK,AHJ,AHL),ChangeLine(AHJ,AHI,AHK),ChangeLine(AHI,AHH,AHJ),ChangeLine(AHH,AHG,AHI),ChangeLine(AHG,AHF,AHH),ChangeLine(AHF,AHE,AHG),ChangeLine(AHE,AHD,AHF),ChangeLine(AHD,AHC,AHE),ChangeLine(AHC,AHB,AHD),ChangeLine(AHB,AHA,AHC),ChangeLine(AHA,AGZ,AHB),ChangeLine(AGZ,AGY,AHA),ChangeLine(AGY,AGX,AGZ),ChangeLine(AGX,AGW,AGY),ChangeLine(AGW,AGV,AGX),ChangeLine(AGV,AGU,AGW),ChangeLine(AGU,AGT,AGV),ChangeLine(AGT,AGS,AGU),ChangeLine(AGS,AGR,AGT),ChangeLine(AGR,AGQ,AGS),ChangeLine(AGQ,AGP,AGR),ChangeLine(AGP,AGO,AGQ),ChangeLine(AGO,AGN,AGP),ChangeLine(AGN,AGM,AGO),ChangeLine(AGM,AGL,AGN),ChangeLine(AGL,AGK,AGM),ChangeLine(AGK,AGJ,AGL),ChangeLine(AGJ,AGI,AGK),ChangeLine(AGI,AGH,AGJ),ChangeLine(AGH,AGG,AGI),ChangeLine(AGG,AGF,AGH),ChangeLine(AGF,AGE,AGG),ChangeLine(AGE,AGD,AGF),ChangeLine(AGD,AGC,AGE),ChangeLine(AGC,AGB,AGD),ChangeLine(AGB,AGA,AGC),ChangeLine(AGA,AFZ,AGB),ChangeLine(AFZ,AFY,AGA),ChangeLine(AFY,AFX,AFZ),ChangeLine(AFX,AFW,AFY),ChangeLine(AFW,AFV,AFX),ChangeLine(AFV,AFU,AFW),ChangeLine(AFU,AFT,AFV),ChangeLine(AFT,AFS,AFU),ChangeLine(AFS,AFR,AFT),ChangeLine(AFR,AFQ,AFS),ChangeLine(AFQ,AFP,AFR),ChangeLine(AFP,AFO,AFQ),ChangeLine(AFO,AFN,AFP),ChangeLine(AFN,AFM,AFO),ChangeLine(AFM,AFL,AFN),ChangeLine(AFL,AFK,AFM),ChangeLine(AFK,AFJ,AFL),ChangeLine(AFJ,AFI,AFK),ChangeLine(AFI,AFH,AFJ),ChangeLine(AFH,AFG,AFI),ChangeLine(AFG,AFF,AFH),ChangeLine(AFF,AFE,AFG),ChangeLine(AFE,AFD,AFF),ChangeLine(AFD,AFC,AFE),ChangeLine(AFC,AFB,AFD),ChangeLine(AFB,AFA,AFC),ChangeLine(AFA,AEZ,AFB),ChangeLine(AEZ,AEY,AFA),ChangeLine(AEY,AEX,AEZ),ChangeLine(AEX,AEW,AEY),ChangeLine(AEW,AEV,AEX),ChangeLine(AEV,AEU,AEW),ChangeLine(AEU,AET,AEV),ChangeLine(AET,AES,AEU),ChangeLine(AES,AER,AET),ChangeLine(AER,AEQ,AES),ChangeLine(AEQ,AEP,AER),ChangeLine(AEP,AEO,AEQ),ChangeLine(AEO,AEN,AEP),ChangeLine(AEN,AEM,AEO),ChangeLine(AEM,AEL,AEN),ChangeLine(AEL,AEK,AEM),ChangeLine(AEK,AEJ,AEL),ChangeLine(AEJ,AEI,AEK),ChangeLine(AEI,AEH,AEJ),ChangeLine(AEH,AEG,AEI),ChangeLine(AEG,AEF,AEH),ChangeLine(AEF,AEE,AEG),ChangeLine(AEE,AED,AEF),ChangeLine(AED,AEC,AEE),ChangeLine(AEC,AEB,AED),ChangeLine(AEB,AEA,AEC),ChangeLine(AEA,ADZ,AEB),ChangeLine(ADZ,ADY,AEA),ChangeLine(ADY,ADX,ADZ),ChangeLine(ADX,ADW,ADY),ChangeLine(ADW,ADV,ADX),ChangeLine(ADV,ADU,ADW),ChangeLine(ADU,ADT,ADV),ChangeLine(ADT,ADS,ADU),ChangeLine(ADS,ADR,ADT),ChangeLine(ADR,ADQ,ADS),ChangeLine(ADQ,ADP,ADR),ChangeLine(ADP,ADO,ADQ),ChangeLine(ADO,ADN,ADP),ChangeLine(ADN,ADM,ADO),ChangeLine(ADM,ADL,ADN),ChangeLine(ADL,ADK,ADM),ChangeLine(ADK,ADJ,ADL),ChangeLine(ADJ,ADI,ADK),ChangeLine(ADI,ADH,ADJ),ChangeLine(ADH,ADG,ADI),ChangeLine(ADG,ADF,ADH),ChangeLine(ADF,ADE,ADG),ChangeLine(ADE,ADD,ADF),ChangeLine(ADD,ADC,ADE),ChangeLine(ADC,ADB,ADD),ChangeLine(ADB,ADA,ADC),ChangeLine(ADA,ACZ,ADB),ChangeLine(ACZ,ACY,ADA),ChangeLine(ACY,ACX,ACZ),ChangeLine(ACX,ACW,ACY),ChangeLine(ACW,ACV,ACX),ChangeLine(ACV,ACU,ACW),ChangeLine(ACU,ACT,ACV),ChangeLine(ACT,ACS,ACU),ChangeLine(ACS,ACR,ACT),ChangeLine(ACR,ACQ,ACS),ChangeLine(ACQ,ACP,ACR),ChangeLine(ACP,ACO,ACQ),ChangeLine(ACO,ACN,ACP),ChangeLine(ACN,ACM,ACO),ChangeLine(ACM,ACL,ACN),ChangeLine(ACL,ACK,ACM),ChangeLine(ACK,ACJ,ACL),ChangeLine(ACJ,ACI,ACK),ChangeLine(ACI,ACH,ACJ),ChangeLine(ACH,ACG,ACI),ChangeLine(ACG,ACF,ACH),ChangeLine(ACF,ACE,ACG),ChangeLine(ACE,ACD,ACF),ChangeLine(ACD,ACC,ACE),ChangeLine(ACC,ACB,ACD),ChangeLine(ACB,ACA,ACC),ChangeLine(ACA,ABZ,ACB),ChangeLine(ABZ,ABY,ACA),ChangeLine(ABY,ABX,ABZ),ChangeLine(ABX,ABW,ABY),ChangeLine(ABW,ABV,ABX),ChangeLine(ABV,ABU,ABW),ChangeLine(ABU,ABT,ABV),ChangeLine(ABT,ABS,ABU),ChangeLine(ABS,ABR,ABT),ChangeLine(ABR,ABQ,ABS),ChangeLine(ABQ,ABP,ABR),ChangeLine(ABP,ABO,ABQ),ChangeLine(ABO,ABN,ABP),ChangeLine(ABN,ABM,ABO),ChangeLine(ABM,ABL,ABN),ChangeLine(ABL,ABK,ABM),ChangeLine(ABK,ABJ,ABL),ChangeLine(ABJ,ABI,ABK),ChangeLine(ABI,ABH,ABJ),ChangeLine(ABH,ABG,ABI),ChangeLine(ABG,ABF,ABH),ChangeLine(ABF,ABE,ABG),ChangeLine(ABE,ABD,ABF),ChangeLine(ABD,ABC,ABE),ChangeLine(ABC,ABB,ABD),ChangeLine(ABB,ABA,ABC),ChangeLine(ABA,AAZ,ABB),ChangeLine(AAZ,AAY,ABA),ChangeLine(AAY,AAX,AAZ),ChangeLine(AAX,AAW,AAY),ChangeLine(AAW,AAV,AAX),ChangeLine(AAV,AAU,AAW),ChangeLine(AAU,AAT,AAV),ChangeLine(AAT,AAS,AAU),ChangeLine(AAS,AAR,AAT),ChangeLine(AAR,AAQ,AAS),ChangeLine(AAQ,AAP,AAR),ChangeLine(AAP,AAO,AAQ),ChangeLine(AAO,AAN,AAP),ChangeLine(AAN,AAM,AAO),ChangeLine(AAM,AAL,AAN),ChangeLine(AAL,AAK,AAM),ChangeLine(AAK,AAJ,AAL),ChangeLine(AAJ,AAI,AAK),ChangeLine(AAI,AAH,AAJ),ChangeLine(AAH,AAG,AAI),ChangeLine(AAG,AAF,AAH),ChangeLine(AAF,AAE,AAG),ChangeLine(AAE,AAD,AAF),ChangeLine(AAD,AAC,AAE),ChangeLine(AAC,AAB,AAD),ChangeLine(AAB,AAA,AAC),ChangeLine(AAA,Z,AAB),ChangeLine(Z,Y,AAA),ChangeLine(Y,X,Z),ChangeLine(X,W,Y),ChangeLine(W,V,X),ChangeLine(V,U,W),ChangeLine(U,T,V),ChangeLine(T,S,U),ChangeLine(S,R,T),ChangeLine(R,Q,S),ChangeLine(Q,P,R),ChangeLine(P,O,Q),ChangeLine(O,N,P),ChangeLine(N,M,O),ChangeLine(M,L,N),ChangeLine(L,K,M),ChangeLine(K,J,L),ChangeLine(J,I,K),ChangeLine(I,H,J),ChangeLine(H,G,I),ChangeLine(G,F,H),ChangeLine(F,E,G),ChangeLine(E,D,F),ChangeLine(D,C,E),ChangeLine(C,B,D),ChangeLine(B,A,C),BoardFirst1(A),BoardNextTo2(B,C,A),BoardNextTo2(C,D,B),BoardNextTo2(D,E,C),BoardNextTo2(E,F,D),BoardNextTo2(F,G,E),BoardNextTo2(G,H,F),BoardNextTo2(H,I,G),BoardNextTo2(I,J,H),BoardNextTo2(J,K,I),BoardNextTo2(K,L,J),BoardNextTo2(L,M,K),BoardNextTo2(M,N,L),BoardNextTo2(N,O,M),BoardNextTo2(O,P,N),BoardNextTo2(P,Q,O),BoardNextTo2(Q,R,P),BoardNextTo2(R,S,Q),BoardNextTo2(S,T,R),BoardNextTo2(T,U,S),BoardNextTo2(U,V,T),BoardNextTo2(V,W,U),BoardNextTo2(W,X,V),BoardNextTo2(X,Y,W),BoardNextTo2(Y,Z,X),BoardNextTo2(Z,AAA,Y),BoardNextTo2(AAA,AAB,Z),BoardNextTo2(AAB,AAC,AAA),BoardNextTo2(AAC,AAD,AAB),BoardNextTo2(AAD,AAE,AAC),BoardNextTo2(AAE,AAF,AAD),BoardNextTo2(AAF,AAG,AAE),BoardNextTo2(AAG,AAH,AAF),BoardNextTo2(AAH,AAI,AAG),BoardNextTo2(AAI,AAJ,AAH),BoardNextTo2(AAJ,AAK,AAI),BoardNextTo2(AAK,AAL,AAJ),BoardNextTo2(AAL,AAM,AAK),BoardNextTo2(AAM,AAN,AAL),BoardNextTo2(AAN,AAO,AAM),BoardNextTo2(AAO,AAP,AAN),BoardNextTo2(AAP,AAQ,AAO),BoardNextTo2(AAQ,AAR,AAP),BoardNextTo2(AAR,AAS,AAQ),BoardNextTo2(AAS,AAT,AAR),BoardNextTo2(AAT,AAU,AAS),BoardNextTo2(AAU,AAV,AAT),BoardNextTo2(AAV,AAW,AAU),BoardNextTo2(AAW,AAX,AAV),BoardNextTo2(AAX,AAY,AAW),BoardNextTo2(AAY,AAZ,AAX),BoardNextTo2(AAZ,ABA,AAY),BoardNextTo2(ABA,ABB,AAZ),BoardNextTo2(ABB,ABC,ABA),BoardNextTo2(ABC,ABD,ABB),BoardNextTo2(ABD,ABE,ABC),BoardNextTo2(ABE,ABF,ABD),BoardNextTo2(ABF,ABG,ABE),BoardNextTo2(ABG,ABH,ABF),BoardNextTo2(ABH,ABI,ABG),BoardNextTo2(ABI,ABJ,ABH),BoardNextTo2(ABJ,ABK,ABI),BoardNextTo2(ABK,ABL,ABJ),BoardNextTo2(ABL,ABM,ABK),BoardNextTo2(ABM,ABN,ABL),BoardNextTo2(ABN,ABO,ABM),BoardNextTo2(ABO,ABP,ABN),BoardNextTo2(ABP,ABQ,ABO),BoardNextTo2(ABQ,ABR,ABP),BoardNextTo2(ABR,ABS,ABQ),BoardNextTo2(ABS,ABT,ABR),BoardNextTo2(ABT,ABU,ABS),BoardNextTo2(ABU,ABV,ABT),BoardNextTo2(ABV,ABW,ABU),BoardNextTo2(ABW,ABX,ABV),BoardNextTo2(ABX,ABY,ABW),BoardNextTo2(ABY,ABZ,ABX),BoardNextTo2(ABZ,ACA,ABY),BoardNextTo2(ACA,ACB,ABZ),BoardNextTo2(ACB,ACC,ACA),BoardNextTo2(ACC,ACD,ACB),BoardNextTo2(ACD,ACE,ACC),BoardNextTo2(ACE,ACF,ACD),BoardNextTo2(ACF,ACG,ACE),BoardNextTo2(ACG,ACH,ACF),BoardNextTo2(ACH,ACI,ACG),BoardNextTo2(ACI,ACJ,ACH),BoardNextTo2(ACJ,ACK,ACI),BoardNextTo2(ACK,ACL,ACJ),BoardNextTo2(ACL,ACM,ACK),BoardNextTo2(ACM,ACN,ACL),BoardNextTo2(ACN,ACO,ACM),BoardNextTo2(ACO,ACP,ACN),BoardNextTo2(ACP,ACQ,ACO),BoardNextTo2(ACQ,ACR,ACP),BoardNextTo2(ACR,ACS,ACQ),BoardNextTo2(ACS,ACT,ACR),BoardNextTo2(ACT,ACU,ACS),BoardNextTo2(ACU,ACV,ACT),BoardNextTo2(ACV,ACW,ACU),BoardNextTo2(ACW,ACX,ACV),BoardNextTo2(ACX,ACY,ACW),BoardNextTo2(ACY,ACZ,ACX),BoardNextTo2(ACZ,ADA,ACY),BoardNextTo2(ADA,ADB,ACZ),BoardNextTo2(ADB,ADC,ADA),BoardNextTo2(ADC,ADD,ADB),BoardNextTo2(ADD,ADE,ADC),BoardNextTo2(ADE,ADF,ADD),BoardNextTo2(ADF,ADG,ADE),BoardNextTo2(ADG,ADH,ADF),BoardNextTo2(ADH,ADI,ADG),BoardNextTo2(ADI,ADJ,ADH),BoardNextTo2(ADJ,ADK,ADI),BoardNextTo2(ADK,ADL,ADJ),BoardNextTo2(ADL,ADM,ADK),BoardNextTo2(ADM,ADN,ADL),BoardNextTo2(ADN,ADO,ADM),BoardNextTo2(ADO,ADP,ADN),BoardNextTo2(ADP,ADQ,ADO),BoardNextTo2(ADQ,ADR,ADP),BoardNextTo2(ADR,ADS,ADQ),BoardNextTo2(ADS,ADT,ADR),BoardNextTo2(ADT,ADU,ADS),BoardNextTo2(ADU,ADV,ADT),BoardNextTo2(ADV,ADW,ADU),BoardNextTo2(ADW,ADX,ADV),BoardNextTo2(ADX,ADY,ADW),BoardNextTo2(ADY,ADZ,ADX),BoardNextTo2(ADZ,AEA,ADY),BoardNextTo2(AEA,AEB,ADZ),BoardNextTo2(AEB,AEC,AEA),BoardNextTo2(AEC,AED,AEB),BoardNextTo2(AED,AEE,AEC),BoardNextTo2(AEE,AEF,AED),BoardNextTo2(AEF,AEG,AEE),BoardNextTo2(AEG,AEH,AEF),BoardNextTo2(AEH,AEI,AEG),BoardNextTo2(AEI,AEJ,AEH),BoardNextTo2(AEJ,AEK,AEI),BoardNextTo2(AEK,AEL,AEJ),BoardNextTo2(AEL,AEM,AEK),BoardNextTo2(AEM,AEN,AEL),BoardNextTo2(AEN,AEO,AEM),BoardNextTo2(AEO,AEP,AEN),BoardNextTo2(AEP,AEQ,AEO),BoardNextTo2(AEQ,AER,AEP),BoardNextTo2(AER,AES,AEQ),BoardNextTo2(AES,AET,AER),BoardNextTo2(AET,AEU,AES),BoardNextTo2(AEU,AEV,AET),BoardNextTo2(AEV,AEW,AEU),BoardNextTo2(AEW,AEX,AEV),BoardNextTo2(AEX,AEY,AEW),BoardNextTo2(AEY,AEZ,AEX),BoardNextTo2(AEZ,AFA,AEY),BoardNextTo2(AFA,AFB,AEZ),BoardNextTo2(AFB,AFC,AFA),BoardNextTo2(AFC,AFD,AFB),BoardNextTo2(AFD,AFE,AFC),BoardNextTo2(AFE,AFF,AFD),BoardNextTo2(AFF,AFG,AFE),BoardNextTo2(AFG,AFH,AFF),BoardNextTo2(AFH,AFI,AFG),BoardNextTo2(AFI,AFJ,AFH),BoardNextTo2(AFJ,AFK,AFI),BoardNextTo2(AFK,AFL,AFJ),BoardNextTo2(AFL,AFM,AFK),BoardNextTo2(AFM,AFN,AFL),BoardNextTo2(AFN,AFO,AFM),BoardNextTo2(AFO,AFP,AFN),BoardNextTo2(AFP,AFQ,AFO),BoardNextTo2(AFQ,AFR,AFP),BoardNextTo2(AFR,AFS,AFQ),BoardNextTo2(AFS,AFT,AFR),BoardNextTo2(AFT,AFU,AFS),BoardNextTo2(AFU,AFV,AFT),BoardNextTo2(AFV,AFW,AFU),BoardNextTo2(AFW,AFX,AFV),BoardNextTo2(AFX,AFY,AFW),BoardNextTo2(AFY,AFZ,AFX),BoardNextTo2(AFZ,AGA,AFY),BoardNextTo2(AGA,AGB,AFZ),BoardNextTo2(AGB,AGC,AGA),BoardNextTo2(AGC,AGD,AGB),BoardNextTo2(AGD,AGE,AGC),BoardNextTo2(AGE,AGF,AGD),BoardNextTo2(AGF,AGG,AGE),BoardNextTo2(AGG,AGH,AGF),BoardNextTo2(AGH,AGI,AGG),BoardNextTo2(AGI,AGJ,AGH),BoardNextTo2(AGJ,AGK,AGI),BoardNextTo2(AGK,AGL,AGJ),BoardNextTo2(AGL,AGM,AGK),BoardNextTo2(AGM,AGN,AGL),BoardNextTo2(AGN,AGO,AGM),BoardNextTo2(AGO,AGP,AGN),BoardNextTo2(AGP,AGQ,AGO),BoardNextTo2(AGQ,AGR,AGP),BoardNextTo2(AGR,AGS,AGQ),BoardNextTo2(AGS,AGT,AGR),BoardNextTo2(AGT,AGU,AGS),BoardNextTo2(AGU,AGV,AGT),BoardNextTo2(AGV,AGW,AGU),BoardNextTo2(AGW,AGX,AGV),BoardNextTo2(AGX,AGY,AGW),BoardNextTo2(AGY,AGZ,AGX),BoardNextTo2(AGZ,AHA,AGY),BoardNextTo2(AHA,AHB,AGZ),BoardNextTo2(AHB,AHC,AHA),BoardNextTo2(AHC,AHD,AHB),BoardNextTo2(AHD,AHE,AHC),BoardNextTo2(AHE,AHF,AHD),BoardNextTo2(AHF,AHG,AHE),BoardNextTo2(AHG,AHH,AHF),BoardNextTo2(AHH,AHI,AHG),BoardNextTo2(AHI,AHJ,AHH),BoardNextTo2(AHJ,AHK,AHI),BoardNextTo2(AHK,AHL,AHJ),BoardNextTo2(AHL,AHM,AHK),BoardNextTo2(AHM,AHN,AHL),BoardNextTo2(AHN,AHO,AHM),BoardNextTo2(AHO,AHP,AHN),BoardNextTo2(AHP,AHQ,AHO),BoardNextTo2(AHQ,AHR,AHP),BoardNextTo2(AHR,AHS,AHQ),BoardNextTo2(AHS,AHT,AHR),BoardNextTo2(AHT,AHU,AHS),BoardNextTo2(AHU,AHV,AHT),BoardNextTo2(AHV,AHW,AHU),BoardNextTo2(AHW,AHX,AHV),BoardNextTo2(AHX,AHY,AHW),BoardNextTo2(AHY,AHZ,AHX),BoardNextTo2(AHZ,AIA,AHY),BoardNextTo2(AIA,AIB,AHZ),BoardNextTo2(AIB,AIC,AIA),BoardNextTo2(AIC,AID,AIB),BoardNextTo2(AID,AIE,AIC),BoardNextTo2(AIE,AIF,AID),BoardNextTo2(AIF,AIG,AIE),BoardNextTo2(AIG,AIH,AIF),BoardNextTo2(AIH,AII,AIG),BoardNextTo2(AII,AIJ,AIH),BoardNextTo2(AIJ,AIK,AII),BoardNextTo2(AIK,AIL,AIJ),BoardNextTo2(AIL,AIM,AIK),BoardNextTo2(AIM,AIN,AIL),BoardNextTo2(AIN,AIO,AIM),BoardNextTo2(AIO,AIP,AIN),BoardNextTo2(AIP,AIQ,AIO),BoardNextTo2(AIQ,AIR,AIP),BoardNextTo2(AIR,AIS,AIQ),BoardNextTo2(AIS,AIT,AIR),BoardNextTo2(AIT,AIU,AIS),BoardNextTo2(AIU,AIV,AIT),BoardNextTo2(AIV,AIW,AIU),BoardNextTo2(AIW,AIX,AIV),BoardNextTo2(AIX,AIY,AIW),BoardNextTo2(AIY,AIZ,AIX),BoardNextTo2(AIZ,AJA,AIY),BoardNextTo2(AJA,AJB,AIZ),BoardNextTo2(AJB,AJC,AJA),BoardNextTo2(AJC,AJD,AJB),BoardNextTo2(AJD,AJE,AJC),BoardNextTo2(AJE,AJF,AJD),BoardNextTo2(AJF,AJG,AJE),BoardNextTo2(AJG,AJH,AJF),BoardNextTo2(AJH,AJI,AJG),BoardNextTo2(AJI,AJJ,AJH),BoardNextTo2(AJJ,AJK,AJI),BoardNextTo2(AJK,AJL,AJJ),BoardNextTo2(AJL,AJM,AJK),BoardNextTo2(AJM,AJN,AJL),BoardNextTo2(AJN,AJO,AJM),BoardNextTo2(AJO,AJP,AJN),BoardNextTo2(AJP,AJQ,AJO),BoardNextTo2(AJQ,AJR,AJP),BoardNextTo2(AJR,AJS,AJQ),BoardNextTo2(AJS,AJT,AJR),BoardNextTo2(AJT,AJU,AJS),BoardNextTo2(AJU,AJV,AJT),BoardNextTo2(AJV,AJW,AJU),BoardNextTo2(AJW,AJX,AJV),BoardNextTo2(AJX,AJY,AJW),BoardNextTo2(AJY,AJZ,AJX),BoardNextTo2(AJZ,AKA,AJY),BoardNextTo2(AKA,AKB,AJZ),BoardNextTo2(AKB,AKC,AKA),BoardNextTo2(AKC,AKD,AKB),BoardNextTo2(AKD,AKE,AKC),BoardNextTo2(AKE,AKF,AKD),BoardNextTo2(AKF,AKG,AKE),BoardNextTo2(AKG,AKH,AKF),BoardNextTo2(AKH,AKI,AKG),BoardNextTo2(AKI,AKJ,AKH),BoardNextTo2(AKJ,AKK,AKI),BoardNextTo2(AKK,AKL,AKJ),BoardNextTo2(AKL,AKM,AKK),BoardNextTo2(AKM,AKN,AKL),BoardNextTo2(AKN,AKO,AKM),BoardNextTo2(AKO,AKP,AKN),BoardNextTo2(AKP,AKQ,AKO),BoardNextTo2(AKQ,AKR,AKP),BoardNextTo2(AKR,AKS,AKQ),BoardNextTo2(AKS,AKT,AKR),BoardNextTo2(AKT,AKU,AKS),BoardNextTo2(AKU,AKV,AKT),BoardNextTo2(AKV,AKW,AKU),BoardNextTo2(AKW,AKX,AKV),BoardNextTo2(AKX,AKY,AKW),BoardNextTo2(AKY,AKZ,AKX),BoardNextTo2(AKZ,ALA,AKY),BoardNextTo2(ALA,ALB,AKZ),BoardNextTo2(ALB,ALC,ALA),BoardNextTo2(ALC,ALD,ALB),BoardNextTo2(ALD,ALE,ALC),BoardNextTo2(ALE,ALF,ALD),BoardNextTo2(ALF,ALG,ALE),BoardNextTo2(ALG,ALH,ALF),BoardNextTo2(ALH,ALI,ALG),BoardNextTo2(ALI,ALJ,ALH),BoardNextTo2(ALJ,ALK,ALI),BoardNextTo2(ALK,ALL,ALJ),BoardNextTo2(ALL,ALM,ALK),BoardNextTo2(ALM,ALN,ALL),BoardNextTo2(ALN,ALO,ALM),BoardNextTo2(ALO,ALP,ALN),BoardNextTo2(ALP,ALQ,ALO),BoardNextTo2(ALQ,ALR,ALP),BoardNextTo2(ALR,ALS,ALQ),BoardNextTo2(ALS,ALT,ALR),BoardNextTo2(ALT,ALU,ALS),BoardNextTo2(ALU,ALV,ALT),BoardNextTo2(ALV,ALW,ALU),BoardNextTo2(ALW,ALX,ALV),BoardNextTo2(ALX,ALY,ALW),BoardNextTo2(ALY,ALZ,ALX),BoardNextTo2(ALZ,AMA,ALY),BoardNextTo2(AMA,AMB,ALZ),BoardNextTo2(AMB,AMC,AMA),BoardNextTo2(AMC,AMD,AMB),BoardNextTo2(AMD,AME,AMC),BoardNextTo2(AME,AMF,AMD),BoardNextTo2(AMF,AMG,AME),BoardNextTo2(AMG,AMH,AMF),BoardNextTo2(AMH,AMI,AMG),BoardNextTo2(AMI,AMJ,AMH),BoardNextTo2(AMJ,AMK,AMI),BoardNextTo2(AMK,AML,AMJ),BoardNextTo2(AML,AMM,AMK),BoardNextTo2(AMM,AMN,AML),BoardNextTo2(AMN,AMO,AMM),BoardNextTo2(AMO,AMP,AMN),BoardNextTo2(AMP,AMQ,AMO),BoardNextTo2(AMQ,AMR,AMP),BoardNextTo2(AMR,AMS,AMQ),BoardNextTo2(AMS,AMT,AMR),BoardNextTo2(AMT,AMU,AMS),BoardNextTo2(AMU,AMV,AMT),BoardNextTo2(AMV,AMW,AMU),BoardNextTo2(AMW,AMX,AMV),BoardNextTo2(AMX,AMY,AMW),BoardNextTo2(AMY,AMZ,AMX),BoardNextTo2(AMZ,ANA,AMY),BoardNextTo2(ANA,ANB,AMZ),BoardNextTo2(ANB,ANC,ANA),BoardNextTo2(ANC,AND,ANB),BoardNextTo2(AND,ANE,ANC),BoardNextTo2(ANE,ANF,AND),BoardNextTo2(ANF,ANG,ANE),BoardNextTo2(ANG,ANH,ANF),BoardNextTo2(ANH,ANI,ANG),BoardNextTo2(ANI,ANJ,ANH),BoardNextTo2(ANJ,ANK,ANI),BoardNextTo2(ANK,ANL,ANJ),BoardNextTo2(ANL,ANM,ANK),BoardNextTo2(ANM,ANN,ANL),BoardNextTo2(ANN,ANO,ANM),BoardNextTo2(ANO,ANP,ANN),BoardNextTo2(ANP,ANQ,ANO),BoardNextTo2(ANQ,ANR,ANP),BoardNextTo2(ANR,ANS,ANQ),BoardNextTo2(ANS,ANT,ANR),BoardNextTo2(ANT,ANU,ANS),BoardNextTo2(ANU,ANV,ANT),BoardNextTo2(ANV,ANW,ANU),BoardNextTo2(ANW,ANX,ANV),BoardNextTo2(ANX,ANY,ANW),BoardNextTo2(ANY,ANZ,ANX),BoardNextTo2(ANZ,AOA,ANY),BoardNextTo2(AOA,AOB,ANZ),BoardNextTo2(AOB,AOC,AOA),BoardNextTo2(AOC,AOD,AOB),BoardNextTo2(AOD,AOE,AOC),BoardNextTo2(AOE,AOF,AOD),BoardNextTo2(AOF,AOG,AOE),BoardNextTo2(AOG,AOH,AOF),BoardNextTo2(AOH,AOI,AOG),BoardNextTo2(AOI,AOJ,AOH),BoardNextTo2(AOJ,AOK,AOI),BoardNextTo2(AOK,AOL,AOJ),BoardNextTo2(AOL,AOM,AOK),BoardNextTo2(AOM,AON,AOL),BoardNextTo2(AON,AOO,AOM),BoardNextTo2(AOO,AOP,AON),BoardNextTo2(AOP,AOQ,AOO),BoardNextTo2(AOQ,AOR,AOP),BoardNextTo2(AOR,AOS,AOQ),BoardNextTo2(AOS,AOT,AOR),BoardNextTo2(AOT,AOU,AOS),BoardNextTo2(AOU,AOV,AOT),BoardNextTo2(AOV,AOW,AOU),BoardNextTo2(AOW,AOX,AOV),BoardNextTo2(AOX,AOY,AOW),BoardNextTo2(AOY,AOZ,AOX),BoardNextTo2(AOZ,APA,AOY),BoardNextTo2(APA,APB,AOZ),BoardNextTo2(APB,APC,APA),BoardNextTo2(APC,APD,APB),BoardNextTo2(APD,APE,APC),BoardNextTo2(APE,APF,APD),BoardNextTo2(APF,APG,APE),BoardNextTo2(APG,APH,APF),BoardNextTo2(APH,API,APG),BoardNextTo2(API,APJ,APH),BoardNextTo2(APJ,APK,API),BoardNextTo2(APK,APL,APJ),BoardNextTo2(APL,APM,APK),BoardNextTo2(APM,APN,APL),BoardNextTo2(APN,APO,APM),BoardNextTo2(APO,APP,APN),BoardNextTo2(APP,APQ,APO),BoardNextTo2(APQ,APR,APP),BoardNextTo2(APR,APS,APQ),BoardNextTo2(APS,APT,APR),BoardNextTo2(APT,APU,APS),BoardNextTo2(APU,APV,APT),BoardNextTo2(APV,APW,APU),BoardNextTo2(APW,APX,APV),BoardNextTo2(APX,APY,APW),BoardNextTo2(APY,APZ,APX),BoardNextTo2(APZ,AQA,APY),BoardNextTo2(AQA,AQB,APZ),BoardNextTo2(AQB,AQC,AQA),BoardNextTo2(AQC,AQD,AQB),BoardNextTo2(AQD,AQE,AQC),BoardNextTo2(AQE,AQF,AQD),BoardNextTo2(AQF,AQG,AQE),BoardNextTo2(AQG,AQH,AQF),BoardNextTo2(AQH,AQI,AQG),BoardNextTo2(AQI,AQJ,AQH),BoardNextTo2(AQJ,AQK,AQI),BoardNextTo2(AQK,AQL,AQJ),BoardNextTo2(AQL,AQM,AQK),BoardNextTo2(AQM,AQN,AQL),BoardNextTo2(AQN,AQO,AQM),BoardNextTo2(AQO,AQP,AQN),BoardNextTo2(AQP,AQQ,AQO),BoardNextTo2(AQQ,AQR,AQP),BoardNextTo2(AQR,AQS,AQQ),BoardNextTo2(AQS,AQT,AQR),BoardNextTo2(AQT,AQU,AQS),BoardNextTo2(AQU,AQV,AQT),BoardNextTo2(AQV,AQW,AQU),BoardNextTo2(AQW,AQX,AQV),BoardNextTo2(AQX,AQY,AQW),BoardNextTo2(AQY,AQZ,AQX),BoardNextTo2(AQZ,ARA,AQY),BoardNextTo2(ARA,ARB,AQZ),BoardNextTo2(ARB,ARC,ARA),BoardNextTo2(ARC,ARD,ARB),BoardNextTo2(ARD,ARE,ARC),BoardNextTo2(ARE,ARF,ARD),BoardNextTo2(ARF,ARG,ARE),BoardNextTo2(ARG,ARH,ARF),BoardNextTo2(ARH,ARI,ARG),BoardNextTo2(ARI,ARJ,ARH),BoardNextTo2(ARJ,ARK,ARI),BoardNextTo2(ARK,ARL,ARJ),BoardNextTo2(ARL,ARM,ARK),BoardNextTo2(ARM,ARN,ARL),BoardNextTo2(ARN,ARO,ARM),BoardNextTo2(ARO,ARP,ARN),BoardNextTo2(ARP,ARQ,ARO),BoardNextTo2(ARQ,ARR,ARP),BoardNextTo2(ARR,ARS,ARQ),BoardNextTo2(ARS,ART,ARR),BoardNextTo2(ART,ARU,ARS),BoardNextTo2(ARU,ARV,ART),BoardNextTo2(ARV,ARW,ARU),BoardNextTo2(ARW,ARX,ARV),BoardNextTo2(ARX,ARY,ARW),BoardNextTo2(ARY,ARZ,ARX),BoardNextTo2(ARZ,ASA,ARY),BoardNextTo2(ASA,ASB,ARZ),BoardNextTo2(ASB,ASC,ASA),BoardNextTo2(ASC,ASD,ASB),BoardNextTo2(ASD,ASE,ASC),BoardNextTo2(ASE,ASF,ASD),BoardNextTo2(ASF,ASG,ASE),BoardNextTo2(ASG,ASH,ASF),BoardNextTo2(ASH,ASI,ASG),BoardNextTo2(ASI,ASJ,ASH),BoardNextTo2(ASJ,ASK,ASI),BoardNextTo2(ASK,ASL,ASJ),BoardNextTo2(ASL,ASM,ASK),BoardNextTo2(ASM,ASN,ASL),BoardNextTo2(ASN,ASO,ASM),BoardNextTo2(ASO,ASP,ASN),BoardNextTo2(ASP,ASQ,ASO),BoardNextTo2(ASQ,ASR,ASP),BoardNextTo2(ASR,ASS,ASQ),BoardNextTo2(ASS,AST,ASR),BoardNextTo2(AST,ASU,ASS),BoardNextTo2(ASU,ASV,AST),BoardNextTo2(ASV,ASW,ASU),BoardNextTo2(ASW,ASX,ASV),BoardNextTo2(ASX,ASY,ASW),BoardNextTo2(ASY,ASZ,ASX),BoardNextTo2(ASZ,ATA,ASY),BoardNextTo2(ATA,ATB,ASZ),BoardNextTo2(ATB,ATC,ATA),BoardNextTo2(ATC,ATD,ATB),BoardNextTo2(ATD,ATE,ATC),BoardNextTo2(ATE,ATF,ATD),BoardNextTo2(ATF,ATG,ATE),BoardNextTo2(ATG,ATH,ATF),BoardNextTo2(ATH,ATI,ATG),BoardNextTo2(ATI,ATJ,ATH),BoardNextTo2(ATJ,ATK,ATI),BoardNextTo2(ATK,ATL,ATJ),BoardNextTo2(ATL,ATM,ATK),BoardNextTo2(ATM,ATN,ATL),BoardNextTo2(ATN,ATO,ATM),BoardNextTo2(ATO,ATP,ATN),BoardNextTo2(ATP,ATQ,ATO),BoardNextTo2(ATQ,ATR,ATP),BoardNextTo2(ATR,ATS,ATQ),BoardNextTo2(ATS,ATT,ATR),BoardNextTo2(ATT,ATU,ATS),BoardNextTo2(ATU,ATV,ATT),BoardNextTo2(ATV,ATW,ATU),BoardNextTo2(ATW,ATX,ATV),BoardNextTo2(ATX,ATY,ATW),BoardNextTo2(ATY,ATZ,ATX),BoardNextTo2(ATZ,AUA,ATY),BoardNextTo2(AUA,AUB,ATZ),BoardNextTo2(AUB,AUC,AUA),BoardNextTo2(AUC,AUD,AUB),BoardNextTo2(AUD,AUE,AUC),BoardNextTo2(AUE,AUF,AUD),BoardNextTo2(AUF,AUG,AUE),BoardNextTo2(AUG,AUH,AUF),BoardNextTo2(AUH,AUI,AUG),BoardNextTo2(AUI,AUJ,AUH),BoardNextTo2(AUJ,AUK,AUI),BoardNextTo2(AUK,AUL,AUJ),BoardNextTo2(AUL,AUM,AUK),BoardNextTo2(AUM,AUN,AUL),BoardNextTo2(AUN,AUO,AUM),BoardNextTo2(AUO,AUP,AUN),BoardNextTo2(AUP,AUQ,AUO),BoardNextTo2(AUQ,AUR,AUP),BoardNextTo2(AUR,AUS,AUQ),BoardNextTo2(AUS,AUT,AUR),BoardNextTo2(AUT,AUU,AUS),BoardNextTo2(AUU,AUV,AUT),BoardNextTo2(AUV,AUW,AUU),BoardNextTo2(AUW,AUX,AUV),BoardNextTo2(AUX,AUY,AUW),BoardNextTo2(AUY,AUZ,AUX),BoardNextTo2(AUZ,AVA,AUY),BoardNextTo2(AVA,AVB,AUZ),BoardNextTo2(AVB,AVC,AVA),BoardNextTo2(AVC,AVD,AVB),BoardNextTo2(AVD,AVE,AVC),BoardNextTo2(AVE,AVF,AVD),BoardNextTo2(AVF,AVG,AVE),BoardNextTo2(AVG,AVH,AVF),BoardNextTo2(AVH,AVI,AVG),BoardNextTo2(AVI,AVJ,AVH),BoardNextTo2(AVJ,AVK,AVI),BoardNextTo2(AVK,AVL,AVJ),BoardNextTo2(AVL,AVM,AVK),BoardNextTo2(AVM,AVN,AVL),BoardNextTo2(AVN,AVO,AVM),BoardNextTo2(AVO,AVP,AVN),BoardNextTo2(AVP,AVQ,AVO),BoardNextTo2(AVQ,AVR,AVP),BoardNextTo2(AVR,AVS,AVQ),BoardNextTo2(AVS,AVT,AVR),BoardNextTo2(AVT,AVU,AVS),BoardNextTo2(AVU,AVV,AVT),BoardNextTo2(AVV,AVW,AVU),BoardNextTo2(AVW,AVX,AVV),BoardNextTo2(AVX,AVY,AVW),BoardNextTo2(AVY,AVZ,AVX),BoardNextTo2(AVZ,AWA,AVY),BoardNextTo2(AWA,AWB,AVZ),BoardNextTo1(AWB,AWA)
Successfully written output file.
